%!PS-Adobe-3.1 EPSF-3.0%%Title: BZ_goldback.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: Chris Hanley%%CreationDate: 1/28/04%%BoundingBox: 0 0 273 162%%HiResBoundingBox: 0 0 272.0757 161.3716%%CropBox: 0 0 272.0757 161.3716%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_AGM_Gradient_Sep (1.0 0)%%+ procset Adobe_AGM_Gradient (1.1 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Gradient 1.1 0%%Version: 1.1 0%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Gradient 190 dict dup begin put/AGMGrad_&image nd/AGMGrad_&colorimage nd/AGMGrad_&fill nd/AGMGrad_subSampleOK nd/AGMGrad_d255 nd/AGMGrad_sSave nd/AGMGrad_dUserSpace nd/AGMGrad_bUMatrix nd/AGMGrad_imageMatrix nd/AGMGrad_saveMatrix nd/AGMGrad_gMatrix nd/AGMGrad_tmpMat nd/AGMGrad_currentcolorspace nd/AGMGrad_bbox nd/AGMGrad_usingShells nd/AGMGrad_byte nd/AGMGrad_blackTmp nd/AGMGrad_yellowTmp nd/AGMGrad_magentaTmp nd/AGMGrad_cyanTmp nd/AGMGrad_cnt nd/AGMGrad_usingSmoothShade nd/AGMGrad_index nd/AGMGrad_rampFuncsArray nd/AGMGrad_boundsArray nd/AGMGrad_encodeArray nd/AGMGrad_beginCoord nd/AGMGrad_colorSpace nd/AGMGrad_firstFill nd/AGMGrad_lastFill nd/AGMGrad_size nd/AGMGrad_rampLen nd/AGMGrad_invert nd/AGMGrad_endCoord nd/AGMGrad_s nd/AGMGrad_j nd/AGMGrad_i nd/AGMGrad_tintNdx nd/AGMGrad_cmpNdx nd/AGMGrad_nColorSpace nd/AGMGrad_C0 nd/AGMGrad_C0_Space nd/AGMGrad_C1 nd/AGMGrad_C1_Space nd/AGMGrad_rampColorSpace nd/AGMGrad_bUMatrix nd/AGMGrad_channels nd/AGMGrad_len nd/AGMGrad_currenttint nd/AGMGrad_currentcolorant nd/AGMGrad_cmpIndx nd/AGMGrad_ndx nd/AGMGrad_rampIndex nd/AGMGrad_firstShell nd/AGMGrad_ramp nd/AGMGrad_rampDict nd/AGMGrad_endPoint nd/AGMGrad_rampPoint nd/AGMGrad_midPoint nd/AGMGrad_colorRamp nd/AGMGrad_nSamples nd/AGMGrad_sInc nd/AGMGrad_bInc nd/AGMGrad_nSubSamples nd/AGMGrad_optimize nd/AGMGrad_nRadSamples nd/AGMGrad_uRampLen nd/AGMGrad_pChange nd/AGMGrad_xBCInc nd/AGMGrad_yBCInc nd/AGMGrad_nColorsBd nd/AGMGrad_gradType nd/AGMGrad_gradName nd/AGMGrad_renderFlag nd/AGMGrad_retainPath nd/AGMGrad_enabledSmoothShade nd/AGMGrad_rampData nd/AGMGrad_nRamps nd/AGMGrad_xHi nd/AGMGrad_yHi nd/AGMGrad_radHilite nd/AGMGrad_gradNames nd		/AGMGrad_tint nd/AGMGrad_tint_min nd/AGMGrad_tint_max nd/AGMGrad_range nd/doc_setup{	Adobe_AGM_Core begin	Adobe_AGM_Gradient begin	initializeVars		level2{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeShading	/image where{		/image get /AGMGrad_&image xp	}if	/colorimage where{		/colorimage get /AGMGrad_&colorimage xp	}if	currentdict /AGMGrad_&fill get type /nulltype eq		{		/AGMGrad_&fill /fill load def		}if	end	end}def/doc_trailer{	currentdict Adobe_AGM_Gradient eq{		end	}if}def /page_setup{	Adobe_AGM_Gradient begin	/AGMGrad_subSampleOK 		AGMCORE_deviceDPI AGMGrad_dpiThreshold le 		currentScreenFreq AGMGrad_screenFreqThreshold le and 		AGMGrad_contoneDevice not and 	def	initializeRectFill	AGMCORE_producing_seps{		initializeSep	}{		initializeComposite	}ifelse	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	end}def/page_trailer{}def/initializeVars{	/AGMGrad_d255 256 array def	0 1 255{		AGMGrad_d255 exch dup 255 div put	}bind for	/AGMGrad_sSave nd	/AGMGrad_dUserSpace matrix defaultmatrix def	/AGMGrad_bUMatrix matrix def	/AGMGrad_imageMatrix matrix def	/AGMGrad_saveMatrix matrix def	/AGMGrad_gMatrix matrix def	/AGMGrad_tmpMat matrix def	/AGMGrad_currentcolorspace nd	/AGMGrad_bbox 4 array def	/AGMGrad_black (/AGM_Black) def}def/queryDevice{	/AGMGrad_PathsOnly false ndf	/AGMGrad_useShells false ndf	/AGMGrad_usingShells AGMGrad_useShells pt	/AGMGrad_useSmoothShade true ndf	/AGMGrad_dpiThreshold 600 ndf	/AGMGrad_screenFreqThreshold 150 ndf	/AGMGrad_contoneDevice false ndf}def/initializeRectFill{	/rectfill where dup{		exch pop not AGMCORE_producing_seps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/AGMGrad_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/AGMGrad_blackTmp xp			/AGMGrad_yellowTmp xp			/AGMGrad_magentaTmp xp			/AGMGrad_cyanTmp xp			/AGMGrad_cnt 0 pt						[			AGMGrad_byte dup 0			AGMGrad_cyanTmp 				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .3 /mul cvx			AGMGrad_magentaTmp				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .59 /mul cvx			AGMGrad_yellowTmp				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .11 /mul cvx			AGMGrad_blackTmp 				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/AGMGrad_cnt dup cvx 1 /add cvx /pt cvx			] cvx bind						AGMGrad_&image		}def	}ifelse		/setcolor nd	/currentcolor nd		/setcolorspace	{		0 get /AGMGrad_currentcolorspace xp		AGMGrad_currentcolorspace /DeviceCMYK eq{			/setcolor {setcmykcolor} bind pt			/currentcolor {currentcmykcolor} bind pt		}{			AGMGrad_currentcolorspace /DeviceGray eq{				/setcolor {setgray} bind pt				/currentcolor {currentgray} bind pt			}{				AGMGrad_currentcolorspace /DeviceRGB eq{					/setcolor {setrgbcolor} bind pt					/currentcolor {currentrgbcolor} bind pt				}if			}ifelse		}ifelse	}def	/currentcolorspace	{		[ AGMGrad_currentcolorspace ]	}def	/dictImage	{		pop		currentcolorspace 0 get /DeviceGray eq {			aload pop			AGMGrad_&image		}{			dup length /AGMGrad_tmp xp			aload pop true AGMGrad_tmp			colorimage		}ifelse	}def}def/initializeLev2{	/dictImage	{		10 dict begin			/Decode xdf			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			DataSource type /arraytype eq{				/MultipleDataSources true def			}if			currentdict		end		AGMGrad_&image	}def}def/initializeShading{	AGMGrad_useSmoothShade level3 and{		/AGMGrad_usingSmoothShade true pt		initializeLev3_Ops	}{		/AGMGrad_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/AGMGrad_index AGMGrad_gradType 0 eq {0}{AGMGrad_maxRampIndex} ifelse pt		/AGMGrad_rampFuncsArray AGMGrad_nRamps array pt		/AGMGrad_boundsArray AGMGrad_nRamps 1 sub array pt		/AGMGrad_encodeArray AGMGrad_nRamps 2 mul array pt		/AGMGrad_beginCoord AGMGrad_rampPoint pt		/AGMGrad_colorSpace null pt		/AGMGrad_firstFill AGMGrad_rampIndex AGMGrad_maxRampIndex eq pt		/AGMGrad_lastFill false pt	}def	/linealShFill{		popRampSpace		AGMGrad_gMatrix pushRampSpace				/AGMGrad_size AGMGrad_index 1 add pt		AGMGrad_size AGMGrad_nRamps lt {			/AGMGrad_rampFuncsArray AGMGrad_rampFuncsArray 0 AGMGrad_size getinterval pt			/AGMGrad_boundsArray AGMGrad_boundsArray 0 AGMGrad_size 1 sub getinterval pt			/AGMGrad_encodeArray AGMGrad_encodeArray 0 AGMGrad_size 2 mul getinterval pt		}if				/AGMGrad_rampLen AGMGrad_endCoord AGMGrad_beginCoord sub pt		bdict			/ShadingType 2			/ColorSpace AGMGrad_colorSpace			/Function 				bdict					/FunctionType 3					/Domain [0 1]					/Functions AGMGrad_rampFuncsArray					/Bounds AGMGrad_boundsArray					/Encode AGMGrad_encodeArray				edict				AGMGrad_nRamps 1 gt{					dup begin					/Bounds [ Bounds {AGMGrad_beginCoord sub AGMGrad_rampLen div} forall] def					end				}if			/Extend [AGMGrad_firstFill AGMGrad_lastFill]			/Domain [0 1] 			/Coords [AGMGrad_beginCoord 0 AGMGrad_endCoord 0]		edict		shfill	}def		/radialShFill{		/AGMGrad_size AGMGrad_nRamps AGMGrad_index sub pt		AGMGrad_size AGMGrad_nRamps lt {			/AGMGrad_rampFuncsArray AGMGrad_rampFuncsArray AGMGrad_index AGMGrad_size getinterval pt			/AGMGrad_boundsArray AGMGrad_boundsArray AGMGrad_index AGMGrad_size 1 sub getinterval pt			/AGMGrad_encodeArray AGMGrad_encodeArray AGMGrad_index 2 mul AGMGrad_size 2 mul getinterval pt		}if				/AGMGrad_rampLen AGMGrad_beginCoord AGMGrad_endCoord sub pt		bdict			/ShadingType 3			/ColorSpace AGMGrad_colorSpace			/Function 				bdict					/FunctionType 3					/Domain [0 1]					/Functions AGMGrad_rampFuncsArray					/Bounds AGMGrad_boundsArray					/Encode AGMGrad_encodeArray				edict				AGMGrad_nRamps 1 gt{					dup begin					/Bounds [ Bounds {AGMGrad_endCoord sub AGMGrad_rampLen div} forall] def					end				}if			/Extend [AGMGrad_lastFill false]			/Domain [0 1] 			/Coords [AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul AGMGrad_endCoord 0 0 AGMGrad_beginCoord] 		edict		shfill				AGMGrad_radHilite{			AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul translate		}if	}def		/sampFunc{		/AGMGrad_tmp exch pt		bdict			/FunctionType 0			/Order 1			/Size [AGMGrad_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource AGMGrad_tmp			/Range [0 1]		edict	}def		/fillRamp{				/AGMGrad_invert AGMGrad_midPoint 0.5 lt pt		AGMGrad_rampIndex AGMGrad_maxRampIndex eq {			initShFill		}if				getRampColorSpace				AGMGrad_colorSpace null eq{			/AGMGrad_colorSpace AGMGrad_rampColorSpace pt		}{			AGMGrad_colorSpace AGMGrad_rampColorSpace ne {				/AGMGrad_index AGMGrad_index 1 				AGMGrad_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/AGMGrad_colorSpace AGMGrad_rampColorSpace pt			} if		}ifelse		/AGMGrad_endCoord AGMGrad_endPoint pt					Interpolation{			false		}{			SpotColor{				false			}{				AGMCORE_is_cmyk_sep			}ifelse		}ifelse				{ 			AGMCORE_composite_job{											/AGMGrad_s NumSamples NumComponents mul string def				/AGMGrad_j 0 pt				0 1 NumSamples 1 sub {					/AGMGrad_i exch pt					0 1 NumComponents 1 sub {						Ramp exch get AGMGrad_i get AGMGrad_s AGMGrad_j 3 -1 roll put 						/AGMGrad_j AGMGrad_j 1 add pt					}for				}for								AGMGrad_rampFuncsArray AGMGrad_index				bdict					/FunctionType 0					/Order 1					/Size [NumSamples]					/Domain [0 1]					/BitsPerSample 8					/DataSource AGMGrad_s					/Range [NumComponents {0 1} repeat]				edict				put			}{				AGMGrad_rampFuncsArray AGMGrad_index					AGMCORE_cyan_plate{						Ramp 0 get					}if					AGMCORE_magenta_plate{						Ramp 1 get					}if					AGMCORE_yellow_plate{						Ramp 2 get					}if					AGMCORE_black_plate{						Ramp 3 get					}if					sampFunc					dup begin /Decode [1 0] def end				put			}ifelse			/AGMGrad_invert false pt		}{						AGMGrad_rampFuncsArray AGMGrad_index				bdict					/FunctionType 2					/Domain [0 1]					/N 0.5 log AGMGrad_invert{1 AGMGrad_midPoint sub}{AGMGrad_midPoint}ifelse log div					AGMGrad_gradType 0 eq{						AGMGrad_invert{/C1}{/C0}ifelse AGMGrad_C0						AGMGrad_invert{/C0}{/C1}ifelse AGMGrad_C1					}{						AGMGrad_invert{/C0}{/C1}ifelse AGMGrad_C1						AGMGrad_invert{/C1}{/C0}ifelse AGMGrad_C0					}ifelse				edict			put		}ifelse				AGMGrad_rampIndex 0 ne{			AGMGrad_boundsArray AGMGrad_index AGMGrad_gradType 1 eq{1 sub}if AGMGrad_endCoord put		} if				0 1 AGMGrad_invert {exch}if		AGMGrad_encodeArray AGMGrad_index 2 mul 1 add 3 -1 roll put		AGMGrad_encodeArray AGMGrad_index 2 mul 3 -1 roll put		AGMGrad_rampIndex 0 eq {			/AGMGrad_lastFill true pt			AGMGrad_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/AGMGrad_index AGMGrad_index 1 		AGMGrad_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	AGMGrad_PathsOnly not level2 not and{		/linealFill{			8 setImageParms			AGMGrad_colorRamp{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 AGMGrad_&colorimage			}{				currentgray makeByte8 AGMGrad_&image 			}ifelse		}def	}if	level3{		/getRampColorSpace{			SpotColor{						[					NumTintComponents 2 eq					{						/DeviceN 							[							Colorants 0 get							substituteBlack							Colorants 1 get							substituteBlack							] 					}{						/Separation						Colorants 0 get						substituteBlack					}ifelse					CSA map_csa 					[						/AGMGrad_range NumTintComponents 2 eq {1} {0} ifelse pt						/AGMGrad_tint_range_0 TintRange AGMGrad_range get 0 get pt						/AGMGrad_tint_range_1 TintRange AGMGrad_range get 1 get pt						AGMGrad_tint_range_0 AGMGrad_tint_range_1 2 copy gt{							/AGMGrad_tint_min xdf							/AGMGrad_tint_max xdf						}{							/AGMGrad_tint_max xdf							/AGMGrad_tint_min xdf						}ifelse						NumTintComponents 1 eq						{							Colorants 0 get get_csd_by_name	/ColorLookup get							/exch cvx 255 /mul cvx /cvi cvx /get cvx							/aload cvx /pop cvx						}{							/exch cvx  /pop	cvx								255 /mul cvx /cvi cvx							/AGMGrad_tint /xp cvx							/AGMGrad_TintRamp TintRamp 1 get def						 							0 1 NumComponents 1 sub{								Ramp exch get dup type /stringtype eq 									{									6 dict begin									/AGMGrad_Ramp xp									/AGMGrad_lookup 256 string def									/AGMGrad_min AGMGrad_TintRamp 0 get def									/AGMGrad_max AGMGrad_TintRamp dup length 1 sub get def									/AGMGrad_index 0 def									0 1 AGMGrad_min										{										AGMGrad_lookup exch AGMGrad_Ramp 0 get put										}for									AGMGrad_max 1 255										{										AGMGrad_lookup exch AGMGrad_Ramp dup length 1 sub get put										}for									AGMGrad_min 1 AGMGrad_max										{										/AGMGrad_count xp										AGMGrad_index 1 AGMGrad_lookup length 2 sub											{											AGMGrad_TintRamp exch get AGMGrad_count ge												{												exit												}if											/AGMGrad_index AGMGrad_index 1 add def											}for										AGMGrad_lookup AGMGrad_count										AGMGrad_Ramp AGMGrad_index get										put										}for																			AGMGrad_lookup /AGMGrad_tint cvx /get cvx 255 /div cvx									end									}{pop 0}ifelse							}for						}ifelse					] cvx				] setcolorspace				/AGMGrad_nColorSpace currentcolorspace pt			}if						AGMGrad_nSamples 1 gt{ 				firstRampColor			}if			SpotColor{				/AGMGrad_C0 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C0_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C0 [currentcolor] pt				/AGMGrad_C0_Space currentcolorspace pt			}ifelse			AGMGrad_nSamples 1 gt{ 				lastRampColor			}if			SpotColor{				/AGMGrad_C1 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C1_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C1 [currentcolor] pt				/AGMGrad_C1_Space currentcolorspace pt			}ifelse						/AGMGrad_rampColorSpace AGMGrad_C0_Space pt					}def	}if}def/npop{	{pop}repeat}def/pt{	Adobe_AGM_Gradient 3 1 roll put}def/xp{	exch pt}def/mySave{	save /AGMGrad_sSave xp}def/myRestore{	AGMGrad_sSave type /savetype eq{		AGMGrad_sSave restore	}if}def/pushRampSpace{	newpath gsave	dup /AGMGrad_bUMatrix xp concat }def/popRampSpace{	grestore}def/makeByte8{	/AGMGrad_tmp 0 pt	255 mul cvi	8 string 8{		dup AGMGrad_tmp 3 index put 		/AGMGrad_tmp AGMGrad_tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 AGMGrad_imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/path_bbox{	{currentpoint} stopped {		0 0 0 0	}{		pop pop		pathbbox	}ifelse}def/expandOne	{	/AGMGrad_tmp xp	dup type /stringtype ne{		AGMGrad_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 AGMGrad_tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/AGMGrad_channels xp	/AGMGrad_len xp	AGMGrad_channels{		AGMGrad_len expandOne AGMGrad_channels 1 roll	}repeat}def/substituteBlack{	dup AGMGrad_black eq{		pop /Black	}if}def/settints{	/AGMGrad_currenttint xp}def/currenttints{	AGMGrad_currenttint}def/setcolorants{	/AGMGrad_currentcolorant xp}def/currentcolorants{	AGMGrad_currentcolorant}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/rampColor{			/AGMGrad_cmpIndx 0 pt	AGMCORE_producing_seps not SpotColor and AGMGrad_enabledSmoothShade and not{		NumComponents{			Ramp AGMGrad_cmpIndx get dup type /stringtype eq{				/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx			}if			/AGMGrad_cmpIndx AGMGrad_cmpIndx 1 add pt		}repeat		{			currentdict/Decode known{				0 2 NumComponents 2 mul 1 sub{					/AGMGrad_i xp					NumComponents -1 roll					Decode AGMGrad_i 1 add get 					Decode AGMGrad_i get 					sub mul 					Decode AGMGrad_i get add				}for			}if			setcolor		} bind /exec cvx	}if	AGMCORE_producing_seps AGMGrad_enabledSmoothShade or SpotColor and{		/mark cvx		TintRamp 0 get dup type /stringtype eq{			/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx		}if		NumTintComponents 2 eq{			 TintRamp 1 get dup type /stringtype eq{				/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx			}if		}if		(]) cvn cvx		/settints cvx		Colorants /setcolorants cvx	}if}def/firstRampColor{	/AGMGrad_ndx 0 pt	[rampColor] cvx exec}def			/lastRampColor{	/AGMGrad_ndx AGMGrad_nSamples 1 sub pt	[rampColor] cvx exec}def			/useRectImage{	AGMGrad_subSampleOK AGMGrad_usingSmoothShade not and{		0 1 dtransform atan cvi 90 mod 0 eq		1 0 dtransform atan cvi 90 mod 0 eq		and	}{		false	}ifelse}def/linealImage{	useRectImage AGMGrad_PathsOnly or{		rectImage	}{		rampImage	}ifelse}def/linealRamp{	pushRampSpace	AGMGrad_ramp{		linealImage	}{		linealFill	}ifelse	popRampSpace	/AGMGrad_rampIndex AGMGrad_rampIndex 1 sub pt	AGMGrad_rampIndex 0 ge{		getRampData	}if}def/radialGrad{	/AGMGrad_usingShells currentoverprint AGMCORE_producing_seps and AGMGrad_usingShells or pt		/AGMGrad_firstShell true pt	currentoverprint AGMCORE_producing_seps and{				newpath		clippath path_bbox 		1 add 4 1 roll		1 add 4 1 roll		1 sub 4 1 roll		1 sub 4 1 roll		AGMGrad_bbox astore pop				newpath		AGMGrad_bbox 0 get AGMGrad_bbox 1 get moveto		AGMGrad_bbox 2 get AGMGrad_bbox 1 get lineto		AGMGrad_bbox 2 get AGMGrad_bbox 3 get lineto		AGMGrad_bbox 0 get AGMGrad_bbox 3 get lineto		closepath		dup		gsave dup /AGMGrad_bUMatrix xp concat		AGMGrad_rampPoint 0 moveto 0 0 AGMGrad_rampPoint 0 360 arc closepath		eoclip fill		popRampSpace	}if	pushRampSpace		AGMGrad_radHilite{		AGMGrad_rampPoint 1 lt{			1 AGMGrad_rampPoint sub dup AGMGrad_xHi mul exch AGMGrad_yHi mul translate		}if	}if	AGMGrad_nRamps{		radialRamp		/AGMGrad_rampIndex AGMGrad_rampIndex 1 sub pt		AGMGrad_rampIndex 0 ge{			getRampData		}if	}repeat		popRampSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/AGMGrad_ramp true pt		AGMGrad_rampDict null ne{		end	}if	/AGMGrad_rampDict AGMGrad_rampData AGMGrad_rampIndex get pt	AGMGrad_rampDict begin				Start End		AGMGrad_gradType 1 eq{			exch		}if		/AGMGrad_endPoint xp		/AGMGrad_rampPoint xp		/AGMGrad_midPoint Mid pt		/AGMGrad_colorRamp CSA map_csa 0 get /DeviceGray ne pt		currentdict set_csa_crd		SpotColor AGMCORE_producing_seps and{						/SpotConverted [				0 AGMGrad_SpotConverted				NumTintComponents 2 eq{					1 AGMGrad_SpotConverted				}{					false				}ifelse			] def			/RenderCMYK SpotConverted aload pop or def		}{			/RenderCMYK true def		}ifelse		AGMGrad_ramp{			/AGMGrad_nSamples NumSamples pt			AGMGrad_enabledSmoothShade not{				/AGMGrad_ramp AGMGrad_nSamples 1 gt pt			}if		}if}def/rampImage{	AGMGrad_enabledSmoothShade{		fillRamp	}{		NumSamples setImageParms		[ Ramp aload pop ]		currentdict/Decode known{			Decode		}{			[ NumComponents {0 1} repeat ]		}ifelse		dictImage	}ifelse}def	/rectImage{	gsave	/AGMGrad_sInc 1 pt	/AGMGrad_bInc 1 AGMGrad_nSamples div pt	/AGMGrad_nSubSamples AGMGrad_nSamples pt	/AGMGrad_optimize false pt			AGMGrad_subSampleOK{		/AGMGrad_uRampLen 1 0 dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt pt		/AGMGrad_pChange AGMGrad_uRampLen 0 eq{0}{AGMGrad_nSamples AGMGrad_uRampLen div}ifelse pt				AGMGrad_pChange .5 gt dup /AGMGrad_optimize xp{			/AGMGrad_nSubSamples AGMGrad_uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/AGMGrad_bInc 1 AGMGrad_nSubSamples div pt			/AGMGrad_sInc AGMGrad_nSamples 1 sub AGMGrad_nSubSamples 1 sub div pt		}if	}if		0	AGMGrad_nSubSamples	[	/dup cvx	AGMGrad_optimize {		/round cvx /cvi cvx	} if	/AGMGrad_ndx /exch cvx /pt cvx	rampColor	0 0 AGMGrad_bInc 1 /rectfill cvx	AGMGrad_bInc 0 /translate cvx	AGMGrad_sInc /add cvx	] cvx bind	repeat	pop	grestore}def/radialInit{	/AGMGrad_nRadSamples AGMGrad_nSamples dup 0 eq{pop 1}if pt	/AGMGrad_sInc -1 pt	/AGMGrad_rampLen AGMGrad_rampPoint AGMGrad_endPoint sub pt	/AGMGrad_bInc AGMGrad_rampLen AGMGrad_nSamples div neg pt	/AGMGrad_optimize false pt	AGMGrad_subSampleOK{		/AGMGrad_uRampLen			AGMGrad_rampLen 0 dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt			0 AGMGrad_rampLen dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/AGMGrad_pChange 			AGMGrad_uRampLen 0 eq{				0			}{				AGMGrad_nSamples AGMGrad_uRampLen div			}ifelse		pt		AGMGrad_pChange .5 gt dup /AGMGrad_optimize xp{			/AGMGrad_nRadSamples AGMGrad_uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/AGMGrad_bInc AGMGrad_rampLen AGMGrad_nRadSamples div neg pt			/AGMGrad_sInc AGMGrad_nSamples 1 sub AGMGrad_nRadSamples 1 sub div neg pt		}if	}if	AGMGrad_radHilite{		/AGMGrad_xBCInc AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_nRadSamples div pt		/AGMGrad_yBCInc AGMGrad_yHi AGMGrad_rampLen mul AGMGrad_nRadSamples div pt	}if}def/radialRamp{	AGMGrad_enabledSmoothShade{		fillRamp	}{		/AGMGrad_saveMatrix AGMGrad_saveMatrix currentmatrix pt				radialInit			true		AGMCORE_producing_seps Interpolation and{			AGMGrad_nSamples 1 gt{ 				pop				firstRampColor currentInkN				lastRampColor currentInkN				or			}if		}if		{			AGMGrad_rampPoint					AGMGrad_nSamples 1 sub					AGMGrad_nRadSamples 			[				/dup cvx						AGMGrad_optimize{					/round cvx /cvi cvx				}if						/AGMGrad_ndx /exch cvx /pt cvx								AGMGrad_usingShells{					/AGMGrad_firstShell cvx{						/AGMGrad_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						rampColor						AGMGrad_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx AGMGrad_bInc /add cvx /exch cvx						AGMGrad_sInc /add cvx						AGMGrad_radHilite{					AGMGrad_xBCInc AGMGrad_yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			AGMGrad_usingShells{				0 0 AGMGrad_rampPoint 360 0 arcn fill			}if		}ifelse			AGMGrad_saveMatrix setmatrix				AGMGrad_radHilite{			AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul translate		}if				AGMGrad_usingShells AGMGrad_rampIndex 0 eq and{			fill		}if		}ifelse}def/matrix_invertible{	{		mark 1 index AGMGrad_tmpMat invertmatrix	} stopped {		cleartomark		pop		false	}{		cleartomark		pop		true	}ifelse}def/Gb{	Adobe_AGM_Gradient begin	/AGMGrad_rampDict null pt	mySave}def/Gd{	Adobe_AGM_Gradient begin	/AGMGrad_nColorsBd xp	/AGMGrad_gradType xp	/AGMGrad_gradName xp	[	[}def/Gm{	AGMGrad_renderFlag 2 ne{		AGMGrad_gradType 0 eq{			linealRamp		}{			radialGrad		}ifelse	}{		pop	}ifelse}def	/Gg{	/AGMGrad_gMatrix xp	4 npop	/AGMGrad_gradName xp	/AGMGrad_renderFlag xp	/AGMGrad_retainPath xp	/AGMGrad_enabledSmoothShade false pt		path_bbox 3 index 2 index eq{		2 index 1 index eq{			/AGMGrad_renderFlag 2 pt		}if	}if		AGMGrad_gMatrix matrix_invertible not{		/AGMGrad_renderFlag 2 pt	}if		4 npop 	AGMGrad_renderFlag 2 ne{		/AGMGrad_enabledSmoothShade 			level3{				AGMGrad_usingSmoothShade				AGMCORE_producing_seps not				currentoverprint not or and				AGMGrad_PathsOnly not and				AGMCORE_in_rip_sep 1 currenttransfer exec 0.5 lt and not and			}{				false			}ifelse		pt				AGMGrad_renderFlag 3 eq{			eoclip		}{			clip		}ifelse					AGMGrad_gradNames AGMGrad_gradName known{			AGMGrad_gradNames AGMGrad_gradName get			aload pop			/AGMGrad_gradType xp			2 sub dup /AGMGrad_rampIndex xp			/AGMGrad_maxRampIndex xp			/AGMGrad_rampData xp			/AGMGrad_nRamps AGMGrad_rampData length pt		}if		getRampData				AGMGrad_enabledSmoothShade{			getRampColorSpace		}if				AGMGrad_gradType 0 eq{			firstRampColor		}{			lastRampColor		}ifelse						currentcolorspace 0 get /DeviceN eq{			currenttints 0 get			currenttints length 2 eq{				currenttints 1 get			}if			setcolor		}if				currentcolorspace 0 get /Separation eq{			currenttints 0 get			setcolor		}if						currentoverprint AGMCORE_producing_seps and not{			gsave fill grestore		}if	}if		AGMGrad_gradType 1 eq{		AGMGrad_gMatrix Gm	}if}def/Gh{	dup 1 gt{		pop 1	}if	2 copy	exch dup sin exch cos	2 index mul exch	2 index mul 	neg /AGMGrad_yHi xp	/AGMGrad_xHi xp	/AGMGrad_radHilite AGMGrad_xHi 0 ne AGMGrad_yHi 0 ne or pt	3 npop}def/Gc{		AGMGrad_renderFlag 2 eq	AGMGrad_enabledSmoothShade or{		pop	}{		dup matrix_invertible{			AGMGrad_gMatrix AGMGrad_tmpMat concatmatrix			pushRampSpace			AGMGrad_rampIndex 0 lt{				lastRampColor			}if			linealFill			popRampSpace		}{			pop		}ifelse	}ifelse}def/Gr{	dup matrix_invertible{		AGMGrad_gMatrix AGMGrad_tmpMat concatmatrix		Gm	}{		pop	}ifelse}def/GB{	AGMGrad_rampDict null ne{		end	}if	AGMGrad_retainPath	myRestore	end	not{		newpath	}if}def/GD{	currentdict/AGMGrad_gradNames get null eq{		/AGMGrad_gradNames 20 dict def	}if	]	dup {		begin			/Ramp [ Ramp 0 NumComponents getinterval aload pop NumSamples NumComponents expandColor ] def			currentdict/Colorant known{				/TintRamp [ TintRamp 0 NumTintComponents getinterval aload pop NumSamples NumTintComponents expandColor ] def			}if		end	} forall	AGMGrad_nColorsBd AGMGrad_gradType	]  AGMGrad_gradName exch /AGMGrad_gradNames xput	end}defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Gradient_Sep 1.0 0%%Version: 1.0 0%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)systemdict /setpacking known{	currentpacking	true setpacking} ifAdobe_AGM_Gradient begin/initializeSep{	/AGMGrad_ccAry1 5 array pt	/AGMGrad_whiteBytes 1 makeByte8 pt	/AGMGrad_name null pt	/AGMGrad_nColorSpace null pt		AGMCORE_composite_job{		initializeInRIPSeps	}{		initializeHostBasedSeps	}ifelse	initializeAllSeps	Adobe_AGM_Gradient{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/initializeAllSeps{	AGMGrad_PathsOnly not level2 not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave					8 setImageParms					AGMGrad_colorRamp{						SpotColor{							TintRamp 0 currenttints 0 get makeByte8 put							currenttints length 2 eq{								TintRamp 1 currenttints 1 get makeByte8 put							}if						}if								currentcolor						4{							makeByte8 4 1 roll						}repeat												AGMGrad_SepColorImage					}{						currentcolor 1 exch sub 												makeByte8 												AGMGrad_SepImage					}ifelse				myRestore			}ifelse		}def	}if	 /AGMGrad_knockOut{		AGMGrad_PathsOnly level2 or{			gsave			1 setgray 			newpath			0 0 moveto 1 0 lineto 1 1 lineto 0 1 lineto closepath 			AGMGrad_&fill			grestore		}{			8 setImageParms AGMGrad_whiteBytes AGMGrad_&image		}ifelse	}def	/setCustomColor	{		1 index AGMGrad_black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll AGMGrad_ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setPreTintCustomColor	{		{			pop setcmykcolor		}{			setCustomColor		}ifelse	}def		/AGMGrad_CurrentInk{		true		AGMCORE_in_rip_sep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentgray 1 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			RenderCMYK{			AGMGrad_CurrentInk		}{			currentcolorspace 0 get /DeviceCMYK eq{				gsave				currentcolor currentcolorants 0 get currenttints 0 get SpotConverted 0 get setPreTintCustomColor				AGMGrad_CurrentInk				grestore				currenttints length 2 eq{					gsave					currentcolor currentcolorants 1 get currenttints 1 get SpotConverted 1 get setPreTintCustomColor					AGMGrad_CurrentInk					grestore					or				}if			}{				true				}ifelse		} ifelse	}def	/fillOvp{		currentoverprint{			AGMCORE_in_rip_sep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentgray 1 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		AGMGrad_&fill	}def	/fill{		RenderCMYK{			fillOvp		}{			currentcolorspace 0 get /DeviceGray eq{				0 0 0 currentgray 1 exch sub setcmykcolor			}if						currentcolorspace 0 get /DeviceCMYK eq{								gsave				currentcolor currentcolorants 0 get currenttints 0 get SpotConverted 0 get setPreTintCustomColor				fillOvp 				grestore				currenttints length 2 eq{					gsave					/AGMGrad_currentoverprint currentoverprint pt					true setoverprint					currentcolor currentcolorants 1 get currenttints 1 get SpotConverted 1 get setPreTintCustomColor					fillOvp					AGMGrad_currentoverprint setoverprint					grestore				}if			}{				gsave				[/Separation currentcolorants 0 get substituteBlack currentcolorspace [/pop cvx currentcolor] cvx ] setcolorspace				currenttints 0 get setcolor				fillOvp				grestore				currenttints length 2 eq{					gsave					/AGMGrad_currentoverprint currentoverprint pt					[/Separation currentcolorants 1 get substituteBlack currentcolorspace [/pop cvx currentcolor] cvx ] setcolorspace										true setoverprint					currenttints 1 get setcolor					fillOvp					AGMGrad_currentoverprint setoverprint					grestore				}if			}ifelse			newpath		}ifelse	}def		/rampImage{		currentoverprint{			rectImage		}{			AGMGrad_enabledSmoothShade{				fillRamp			}{				AGMGrad_nSamples setImageParms				Ramp aload pop				AGMGrad_colorRamp{					AGMGrad_SepColorImage				}{					AGMGrad_SepImage				}ifelse			}ifelse		}ifelse	}def}def/initializeInRIPSeps{	/AGMGrad_decodeNorm	[0 1] pt	/AGMGrad_SpotConverted	{		SpotColor{			Colorants exch get convert_spot_to_process		}{			pop false		}ifelse	}def	/AGMGrad_SepImage{			/DeviceGray setcolorspace			AGMGrad_decodeNorm dictImage	}def	/AGMGrad_SepColorImage{		RenderCMYK{			[ NumComponents 1 add 1 roll ] 			[ NumComponents { 0 1 } repeat ]			dictImage		}{			NumComponents npop			[/Separation Colorants 0 get substituteBlack /DeviceGray{}] setcolorspace			4 copy			TintRamp 0 get AGMGrad_decodeNorm dictImage			/AGMGrad_currentoverprint currentoverprint pt			true setoverprint			NumTintComponents 2 eq{				[/Separation Colorants 1 get substituteBlack /DeviceGray{}] setcolorspace				TintRamp 1 get  AGMGrad_decodeNorm dictImage			}{				4 npop			}ifelse			AGMGrad_currentoverprint setoverprint		}ifelse	}def		/getRampColorSpace{			SpotColor{								[					NumTintComponents 2 eq					{						/DeviceN 							[							Colorants 0 get							substituteBlack							Colorants 1 get							substituteBlack							] 					}{						/Separation						Colorants 0 get						substituteBlack					}ifelse					CSA map_csa 					[						/AGMGrad_range NumTintComponents 2 eq {1} {0} ifelse pt						/AGMGrad_tint_range_0 TintRange AGMGrad_range get 0 get pt						/AGMGrad_tint_range_1 TintRange AGMGrad_range get 1 get pt						AGMGrad_tint_range_0 AGMGrad_tint_range_1 2 copy gt{							/AGMGrad_tint_min xdf							/AGMGrad_tint_max xdf						}{							/AGMGrad_tint_max xdf							/AGMGrad_tint_min xdf						}ifelse						NumTintComponents 1 eq						{							Colorants 0 get get_csd_by_name	/ColorLookup get							/exch cvx 255 /mul cvx /cvi cvx /get cvx							/aload cvx /pop cvx						}{							/exch cvx  /pop	cvx								255 /mul cvx /cvi cvx							/AGMGrad_tint /xp cvx							/AGMGrad_TintRamp TintRamp 1 get def						 							0 1 NumComponents 1 sub{								Ramp exch get dup type /stringtype eq 									{									6 dict begin									/AGMGrad_Ramp xp									/AGMGrad_lookup 256 string def									/AGMGrad_min AGMGrad_TintRamp 0 get def									/AGMGrad_max AGMGrad_TintRamp dup length 1 sub get def									/AGMGrad_index 0 def									0 1 AGMGrad_min										{										AGMGrad_lookup exch AGMGrad_Ramp 0 get put										}for									AGMGrad_max 1 255										{										AGMGrad_lookup exch AGMGrad_Ramp dup length 1 sub get put										}for									AGMGrad_min 1 AGMGrad_max										{										/AGMGrad_count xp										AGMGrad_index 1 AGMGrad_lookup length 2 sub											{											AGMGrad_TintRamp exch get AGMGrad_count ge												{												exit												}if											/AGMGrad_index AGMGrad_index 1 add def											}for										AGMGrad_lookup AGMGrad_count										AGMGrad_Ramp AGMGrad_index get										put										}for																			AGMGrad_lookup /AGMGrad_tint cvx /get cvx 255 /div cvx									end									}{pop 0}ifelse							}for						}ifelse					] cvx				] setcolorspace				/AGMGrad_nColorSpace currentcolorspace pt			}if						AGMGrad_nSamples 1 gt{ 				firstRampColor			}if			SpotColor{				/AGMGrad_C0 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C0_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C0 [currentcolor] pt				/AGMGrad_C0_Space currentcolorspace pt			}ifelse			AGMGrad_nSamples 1 gt{ 				lastRampColor			}if			SpotColor{				/AGMGrad_C1 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C1_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C1 [currentcolor] pt				/AGMGrad_C1_Space currentcolorspace pt			}ifelse						/AGMGrad_rampColorSpace AGMGrad_C0_Space pt					}def}def/initializeHostBasedSeps{	/setcolor null pt	/currentcolor null pt	/setcolorspace null pt	/currentcolorspace null pt	/AGMGrad_currentcmyk 4 array pt	/AGMGrad_currentgray null pt	/AGMGrad_currentrgb 3 array pt			/setcolorspace	{		0 get /AGMGrad_currentcolorspace xp		AGMGrad_currentcolorspace /DeviceCMYK eq{			/setcolor 			{				4 copy AGMGrad_currentcmyk astore pop setcmykcolor			}bind pt			/currentcolor 			{				AGMGrad_currentcmyk aload pop			}bind pt		}{			AGMGrad_currentcolorspace /DeviceGray eq{				/setcolor				{					dup /AGMGrad_currentgray xp setgray				}bind pt				/currentcolor				{					AGMGrad_currentgray				}bind pt			}{				AGMGrad_currentcolorspace /DeviceRGB eq{					/setcolor					{						3 copy AGMGrad_currentrgb astore pop setrgbcolor					} bind pt					/currentcolor					{						AGMGrad_currentrgb aload pop					}bind pt				}if			}ifelse		}ifelse	}pt	/currentcolorspace	{		[ AGMGrad_currentcolorspace ]	}bind pt	/AGMGrad_invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/AGMGrad_ccThrough{		gsave		1 setCustomColor		currentgray 1 ne		grestore	}def	/AGMGrad_SpotConverted	{		AGMCORE_is_cmyk_sep SpotColor and{			Colorants exch get /AGMGrad_name xp			AGMGrad_name dup null ne exch AGMGrad_black ne and{				1 1 1 1 AGMGrad_name AGMGrad_ccThrough			}{				false			}ifelse		}{			pop false		}ifelse	}def	/AGMGrad_SpotChannel	{		AGMCORE_is_cmyk_sep SpotColor not and{			pop false		}{			Colorants exch get /AGMGrad_name xp			AGMGrad_name null eq{				false			}{				1 1 1 1 AGMGrad_name AGMGrad_ccThrough 			}ifelse		}ifelse	}def	/getChannelData	{		AGMCORE_is_cmyk_sep RenderCMYK and{			AGMCORE_black_plate{				4 1 roll 3 npop			}{				AGMCORE_yellow_plate{					4 2 roll 3 npop				}{					AGMCORE_magenta_plate{						4 3 roll 3 npop					}{						3 npop					}ifelse				}ifelse			}ifelse			/Invert /IsData		}{			4 npop			/NoInvert /NoData						SpotColor{				0 AGMGrad_SpotChannel{					pop pop					TintRamp 0 get /Invert /IsData 				}{					NumTintComponents 2 eq{						1 AGMGrad_SpotChannel{							pop pop							TintRamp 1 get /Invert /IsData 						}if					}if				}ifelse			}if		}ifelse	}def	/renderChannelData	{		gsave				/IsData eq{			/Invert eq{				AGMGrad_invertXfer			}if			systemdict/image get exec		}{			5 npop			AGMGrad_knockOut		}ifelse				grestore	}def	/AGMGrad_SepImage{		dup dup dup		getChannelData		exch pop /NoInvert exch		renderChannelData	}def	/AGMGrad_SepColorImage{				/AGMGrad_currentoverprint currentoverprint pt		SpotColor{			NumTintComponents 2 eq{				 1 AGMGrad_SpotChannel{					true setoverprint				}if			}if		}if		getChannelData 		renderChannelData			AGMGrad_currentoverprint setoverprint	}def	/getRampColorSpace{						AGMGrad_nSamples 1 gt{ 			firstRampColor		}if				/AGMGrad_C0_Space [/DeviceGray] pt		RenderCMYK{			/AGMGrad_C0 [currentgray] pt		}{			/AGMGrad_C0 [				0				0 AGMGrad_SpotChannel{					pop currenttints 0 get				}if				currenttints length 2 eq{					1 AGMGrad_SpotChannel{						pop currenttints 1 get					}if				}if				1 exch sub			] pt		}ifelse				AGMGrad_nSamples 1 gt{ 			lastRampColor		}if				/AGMGrad_C1_Space [/DeviceGray] pt		RenderCMYK{			/AGMGrad_C1 [currentgray] pt		}{			/AGMGrad_C1 [				0					0 AGMGrad_SpotChannel{						pop currenttints 0 get					}if					currenttints length 2 eq{						 1 AGMGrad_SpotChannel{							pop currenttints 1 get						}if					}if				1 exch sub			] pt		}ifelse				/AGMGrad_rampColorSpace AGMGrad_C0_Space pt	}def}defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Gradient/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: BZ_goldback.eps 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Gradient/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -161.372 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 161.372 li272.076 161.372 li272.076 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"gsave % PSGState0 0 mo272 0 li272 161 li0 161 li0 0 liclp7.13672 26.9224 mo6.92383 31.5069 li6.84278 40.9898 9.00342 47.1495 9.00342 47.1495 cv24.3438 35.9659 li19.0655 125.706 37.3057 161.216 37.3057 161.216 cv102.398 93.8169 90.9639 64.025 90.9639 64.025 cv85.9312 49.7647 67.586 47.9429 67.586 47.9429 cv93.565 11.3047 63.8086 5.85254 63.8086 5.85254 cv36.7461 1.63575 7.13672 26.9224 7.13672 26.9224 cvfalse sop0.460001 0.9451 0 0.26 cmykf2.26514 23.5904 mo2.05176 28.1797 li1.96973 37.6622 4.12745 43.8262 4.12745 43.8262 cv19.4698 32.6407 li14.1929 122.377 32.4327 157.889 32.4327 157.889 cv97.5269 90.4947 86.0923 60.6949 86.0923 60.6949 cv81.0577 46.4371 62.7105 44.6133 62.7105 44.6133 cv88.6915 7.97706 58.9366 2.52295 58.9366 2.52295 cv31.8741 -1.6919 2.26514 23.5904 2.26514 23.5904 cv(75 ) 0 8 Adobe_AGM_Gradient/Gd get exec<</Start 0.98324 /End 1 /Mid 0.5 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<0202><F3F3>0 0 ] /RenderCMYK null/SpotColor false>><</Start 0.82123 /End 0.98324 /Mid 0.5 /NumSamples 152 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<30302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A2929292828282727272726262625252524242424232323222222212121202020201F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1919191918181817171716161615151515141414131313121212121111111010100F0F0F0E0E0E0E0D0D0D0C0C0C0B0B0B0B0A0A0A09090908080807070707060606050505040404040303030202><5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3><0303030303030303030303030303030303030303030303030303020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000>0 ] /RenderCMYK null/SpotColor false>><</Start 0.72067 /End 0.82123 /Mid 0.409836 /NumSamples 49 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<33333333333333323232323232323232323232323131313131313131313131313131313130303030303030303030303030><81807F7E7D7C7B7A79787776757474737271706F6E6D6D6C6B6A6968686766656564636362616160605F5E5E5D5D5D5C5C><00000000000000010101010101010101010101010202020202020202020202020202020203030303030303030303030303>0 ] /RenderCMYK null/SpotColor false>><</Start 0.597766 /End 0.72067 /Mid 0.5 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<3333><8181>0 0 ] /RenderCMYK null/SpotColor false>><</Start 0.314608 /End 0.597766 /Mid 0.62 /NumSamples 163 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<757575757575757574747474747473737373737272727271717171707070706F6F6F6E6E6E6E6D6D6D6C6C6C6B6B6B6A6A6A69696968686767676666666565646464636362626261616060605F5F5E5E5D5D5D5C5C5B5B5A5A5959595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464645454443434242414140403F3F3E3D3D3C3C3B3B3A393938383737363535343433><F1F1F1F1F0F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDBDBDADAD9D8D8D7D6D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C7C6C5C4C4C3C2C1C0C0BFBEBDBDBCBBBAB9B9B8B7B6B5B4B4B3B2B1B0AFAFAEADACABAAA9A9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A99989796959494939291908F8E8D8C8B8A898887868584838281>0 <424242424242424241414141414140404040403F3F3F3F3E3E3E3E3D3D3D3D3C3C3C3B3B3B3B3A3A3A3939393838383737373636363535343434333333323231313130302F2F2F2E2E2D2D2D2C2C2B2B2A2A2A2929282827272626262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A191918181717161615151414131312121110100F0F0E0E0D0D0C0C0B0A0A0909080807060605050404030202010100>] /RenderCMYK null/SpotColor false>><</Start 0.11236 /End 0.314608 /Mid 0.522728 /NumSamples 160 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<303031313132323233333434343535363636373738383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F40404141424242434344444545454646474748484849494A4A4B4B4C4C4C4D4D4E4E4F4F4F505051515252535353545455555656575758585859595A5A5B5B5C5C5C5D5D5E5E5F5F606061616162626363646465656666676767686869696A6A6B6B6C6C6C6D6D6E6E6F6F70707171727273737374747575><5C5D5D5E5F6060616263646565666768696A6B6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F80818283848585868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9E9FA0A1A2A3A4A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1><03030303030303030303030303030303030303030303030303030303030303020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000><00000101010202020303030404050505060606070708080809090A0A0A0B0B0C0C0C0D0D0E0E0E0F0F101010111112121213131414141515161617171718181919191A1A1B1B1C1C1C1D1D1E1E1F1F1F20202121222222232324242525252626272728282829292A2A2B2B2B2C2C2D2D2E2E2E2F2F30303131323232333334343535353636373738383939393A3A3B3B3C3C3D3D3D3E3E3F3F40404141414242>] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.11236 /Mid 0.5 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<3030><5C5C><0303>0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (75 ) 0 0 0 153.857 [-12.3747 -153.357 112.028 -9.03968 0.0191956 160.502 ] Gg[-32767 0 0 1 0 0 ] Gc[0.11236 0 0 1 0 0 ] Gr[0.202248 0 0 1 0.11236 0 ] Gr[0.283159 0 0 1 0.314608 0 ] Gr[0.122905 0 0 1 0.597766 0 ] Gr[0.10056 0 0 1 0.72067 0 ] Gr[0.162011 0 0 1 0.82123 0 ] Gr[0.0167601 0 0 1 0.98324 0 ] Gr[32767 0 0 1 1 0 ] GcGB4.09915 lw0 lc0 lj4 ml[] 0 dshtrue sadj2.26514 23.5904 mo2.05176 28.1797 li1.96973 37.6622 4.12745 43.8262 4.12745 43.8262 cv19.4698 32.6407 li14.1929 122.377 32.4327 157.889 32.4327 157.889 cv97.5269 90.4947 86.0923 60.6949 86.0923 60.6949 cv81.0577 46.4371 62.7105 44.6133 62.7105 44.6133 cv88.6915 7.97706 58.9366 2.52295 58.9366 2.52295 cv31.8741 -1.6919 2.26514 23.5904 2.26514 23.5904 cvcp0.4 0.5412 0 0 cmyks33.1021 22.1876 mo32.3716 35.8897 li32.1456 47.9722 34.1241 50.605 34.1241 50.605 cv55.1998 32.0918 50.8467 22.2706 50.8467 22.2706 cv45.6929 13.2833 33.1021 22.1876 33.1021 22.1876 cv0.460001 0.9451 0 0.26 cmykf33.1021 22.1876 mo32.3716 35.8897 li32.1456 47.9722 34.1241 50.605 34.1241 50.605 cv55.1998 32.0918 50.8467 22.2706 50.8467 22.2706 cv45.6929 13.2833 33.1021 22.1876 33.1021 22.1876 cvcp0.4 0.5412 0 0 cmyks37.0708 69.0098 mo36.9004 76.1402 li37.0059 93.938 43.5176 107.306 43.5176 107.306 cv69.0381 86.0015 66.2955 64.3497 66.2955 64.3497 cv63.775 51.2369 37.0708 69.0098 37.0708 69.0098 cv0.460001 0.9451 0 0.26 cmykf37.0708 69.0098 mo36.9004 76.1402 li37.0059 93.938 43.5176 107.306 43.5176 107.306 cv69.0381 86.0015 66.2955 64.3497 66.2955 64.3497 cv63.775 51.2369 37.0708 69.0098 37.0708 69.0098 cvcp0.4 0.5412 0 0 cmyks39.3604 21.3096 mo38.9888 24.2291 li37.6714 31.6324 37.9517 44.2295 37.9517 44.2295 cv53.3238 32.2598 50.3292 22.4161 50.3292 22.4161 cv47.6358 16.3443 39.3604 21.3096 39.3604 21.3096 cv0 0 0 0 cmykf43.5665 67.6124 mo43.5665 72.2886 li42.8609 87.5406 47.564 100.922 47.564 100.922 cv68.3165 82.2076 65.5586 64.4952 65.5586 64.4952 cv63.1495 55.1646 43.5665 67.6124 43.5665 67.6124 cv0 0 0 0 cmykf9.16651 37.6377 mo5.25245 40.3848 li3.0127 33.6045 4.13086 24.6231 4.13086 24.6231 cv40.501 -3.60987 61.9488 5.55469 61.9488 5.55469 cv35.0948 2.25684 7.30274 26.4542 7.30274 26.4542 cv6.55616 31.2227 9.16651 37.6377 9.16651 37.6377 cv(76 ) 0 3 Adobe_AGM_Gradient/Gd get exec<</Start 0.735956 /End 1 /Mid 0.5 /NumSamples 103 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<7575757575757474747474747473737373737372727272727272717171717171717070707070706F6F6F6F6F6F6F6E6E6E6E6E6E6E6D6D6D6D6D6D6C6C6C6C6C6C6C6B6B6B6B6B6B6B6A6A6A6A6A6A696969696969696868686868686767676767676766666666><F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A>0 <42424140403F3E3E3D3C3C3B3A3A3939383737363535343333323131302F2F2E2D2D2C2C2B2A2A2928282726262524242322222120201F1F1E1D1D1C1B1B1A191918171716151514131312121110100F0E0E0D0C0C0B0A0A090808070606050504030302010100>] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.735956 /Mid 0.5 /NumSamples 242 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111112121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F2020212122222323242425252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F3030313132323333343435353636373737383839393A3A3B3B3C3C3D3D3E3E3F3F4040414142424343444445454646474748484949494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707071717272737374747575><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1>0 <00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F4040404041414141424242>] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (76 ) 0 0 0 64.7188 [45.7631 -45.7631 55.4654 55.4654 -19.8646 15.2674 ] Gg[-32767 0 0 1 0 0 ] Gc[0.735956 0 0 1 0 0 ] Gr[0.264046 0 0 1 0.735956 0 ] Gr[32767 0 0 1 1 0 ] GcGB52.2852 20.6529 mo54.44 24.2291 li57.4444 42.3809 37.1358 55.7608 37.1358 55.7608 cv33.8668 53.648 li58.1973 33.3174 52.2852 20.6529 52.2852 20.6529 cv(77 ) 0 2 Adobe_AGM_Gradient/Gd get exec<</Start 0 /End 1 /Mid 0.5 /NumSamples 242 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111112121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F2020212122222323242425252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F3030313132323333343435353636373737383839393A3A3B3B3C3C3D3D3E3E3F3F4040414142424343444445454646474748484949494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707071717272737374747575><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1>0 <00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F4040404041414141424242>] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (77 ) 0 0 0 20.6924 [20.6924 0 0 39.108 33.8668 18.6529 ] Gg[-32767 0 0 1 0 0 ] Gc[1 0 0 1 0 0 ] Gr[32767 0 0 1 1 0 ] GcGB66.8335 60.3946 mo70.23 65.9874 li74.7051 88.2798 48.1084 112.214 48.1084 112.214 cv42.9527 110.383 li77.0977 79.1763 66.8335 60.3946 66.8335 60.3946 cvAdobe_AGM_Gradient/Gb get execfalse 1 (77 ) 0 0 0 27.6114 [27.6114 0 0 55.8189 42.9527 58.3946 ] Gg[-32767 0 0 1 0 0 ] Gc[1 0 0 1 0 0 ] Gr[32767 0 0 1 1 0 ] GcGB21.3497 29.0201 mo24.9864 31.2227 li15.0513 86.1753 35.8941 151.052 35.8941 151.052 cv33.376 154.138 li12.211 99.8335 21.3497 29.0201 21.3497 29.0201 cvAdobe_AGM_Gradient/Gb get execfalse 1 (76 ) 0 0 0 125.117 [-5.46902e-06 -125.117 27.6832 -1.21007e-06 10.211 154.138 ] Gg[-32767 0 0 1 0 0 ] Gc[0.735956 0 0 1 0 0 ] Gr[0.264046 0 0 1 0.735956 0 ] Gr[32767 0 0 1 1 0 ] GcGB259.039 128.426 mo261.736 129.064 li266.229 130.184 272.076 131.787 272.076 131.787 cv265.783 131.787 256.193 131.627 256.193 131.627 cv259.039 128.426 li0.9255 0 1 0 cmykf83.6368 66.1465 mo88.3477 65.4727 li103.749 63.9336 128.762 57.6915 128.762 57.6915 cv104.731 83.7925 92.3829 111.898 92.3829 111.898 cv115.264 108.535 130.264 104.4 130.264 104.4 cv125.676 108.844 119.01 115.654 119.01 115.654 cv164.094 114.313 203.434 119.379 203.434 119.379 cv194.014 123.414 191.973 127.377 191.973 127.377 cv220.234 123.338 257.379 134.85 257.379 134.85 cv199.98 133.145 169.291 145.078 169.291 145.078 cv169.291 138.352 172.133 133.145 172.133 133.145 cv142.527 129.779 91.4317 139.961 91.4317 139.961 cv92.7794 133.908 95.4102 130.303 95.4102 130.303 cv83.9708 129.631 52.7872 139.961 52.7872 139.961 cv61.5352 115.066 86.5821 80.0938 86.5821 80.0938 cv72.4512 82.7847 54.7305 90.4839 54.7305 90.4839 cv54.0567 85.1011 56.7227 69.5098 56.7227 69.5098 cv83.6368 66.1465 li0.460001 0.9451 0 0.26 cmykf80.2852 60.6719 mo89.4434 58.9102 li106.174 56.2696 123.961 54.5079 123.961 54.5079 cv101.374 80.5176 89.7969 108.064 89.7969 108.064 cv112.674 104.701 123.896 104.107 123.896 104.107 cv117.838 108.143 114.715 112.396 114.715 112.396 cv159.801 111.053 198.127 117.486 198.127 117.486 cv188.707 121.523 192.022 121.779 192.022 121.779 cv227.826 120.639 260.791 130.303 260.791 130.303 cv200.229 128.285 165.83 139.689 165.83 139.689 cv165.83 132.963 168.154 129.164 168.154 129.164 cv138.549 125.799 89.1582 133.711 89.1582 133.711 cv90.504 127.656 91.4317 126.326 91.4317 126.326 cv79.9942 125.65 50.5137 135.418 50.5137 135.418 cv59.2598 110.522 83.7383 77.1133 83.7383 77.1133 cv69.6075 79.8067 52.1133 87.2046 52.1133 87.2046 cv51.4415 81.8218 54.1348 65.6758 54.1348 65.6758 cv80.2852 60.6719 li(78 ) 0 7 Adobe_AGM_Gradient/Gd get exec<</Start 0.96648 /End 1 /Mid 0.5 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<6767>0 <AAAA>0 ] /RenderCMYK null/SpotColor false>><</Start 0.72067 /End 0.96648 /Mid 0.447369 /NumSamples 124 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B9A99989797969594939291908F8F8E8D8C8B8A8989888786858484838281807F7F7E7D7C7B7B7A797877777675747473727171706F6F6E6D6D6C6B6B6A6A6968686767>0 <F7F6F6F5F4F3F3F2F1F0F0EFEEEEEDECEBEBEAE9E9E8E7E6E6E5E4E4E3E2E2E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D7D6D5D5D4D3D3D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C7C7C6C6C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBBBAB9B9B8B8B7B7B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABABAAAA>0 ] /RenderCMYK null/SpotColor false>><</Start 0.486034 /End 0.72067 /Mid 0.5 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<D1D1>0 <F7F7>0 ] /RenderCMYK null/SpotColor false>><</Start 0.314608 /End 0.486034 /Mid 0.634146 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<D1D1>0 <F7F7>0 ] /RenderCMYK null/SpotColor false>><</Start 0.094972 /End 0.314608 /Mid 0.522728 /NumSamples 114 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<676868696A6B6C6C6D6E6F7071727273747576777879797A7B7C7D7E7F80818283838485868788898A8B8C8D8E8F90919192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1>0 <AAABABACACADADAEAFAFB0B0B1B2B2B3B4B4B5B5B6B7B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C7C7C8C9CACACBCCCCCDCECECFD0D0D1D2D3D3D4D5D5D6D7D7D8D9DADADBDCDCDDDEDFDFE0E1E1E2E3E4E4E5E6E6E7E8E9E9EAEBEBECEDEEEEEFF0F0F1F2F3F3F4F5F6F6F7>0 ] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.094972 /Mid 0.5 /NumSamples 2 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<6767>0 <AAAA>0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (78 ) 0 0 0 85.1807 [-3.72337e-06 -85.1807 214.277 -9.36634e-06 48.5137 139.689 ] Gg[-32767 0 0 1 0 0 ] Gc[0.094972 0 0 1 0 0 ] Gr[0.219636 0 0 1 0.094972 0 ] Gr[0.171426 0 0 1 0.314608 0 ] Gr[0.234638 0 0 1 0.486034 0 ] Gr[0.245811 0 0 1 0.72067 0 ] Gr[0.03352 0 0 1 0.96648 0 ] Gr[32767 0 0 1 1 0 ] GcGB2.8598 lw80.2852 60.6719 mo89.4434 58.9102 li106.174 56.2696 123.961 54.5079 123.961 54.5079 cv101.374 80.5176 89.7969 108.064 89.7969 108.064 cv112.674 104.701 123.896 104.107 123.896 104.107 cv117.838 108.143 114.715 112.396 114.715 112.396 cv159.801 111.053 198.127 117.486 198.127 117.486 cv188.707 121.523 192.022 121.779 192.022 121.779 cv227.826 120.639 260.791 130.303 260.791 130.303 cv200.229 128.285 165.83 139.689 165.83 139.689 cv165.83 132.963 168.154 129.164 168.154 129.164 cv138.549 125.799 89.1582 133.711 89.1582 133.711 cv90.504 127.656 91.4317 126.326 91.4317 126.326 cv79.9942 125.65 50.5137 135.418 50.5137 135.418 cv59.2598 110.522 83.7383 77.1133 83.7383 77.1133 cv69.6075 79.8067 52.1133 87.2046 52.1133 87.2046 cv51.4415 81.8218 54.1348 65.6758 54.1348 65.6758 cv80.2852 60.6719 licp0.9255 0 1 0 cmyks57.4981 83.5308 mo57.0626 79.0684 55.9922 79.7032 57.004 72.2989 cv57.6622 69.3321 li66.9102 65.8614 120.615 56.2696 120.615 56.2696 cv87.3301 58.7344 55.3946 66.9961 55.3946 66.9961 cv53.2344 76.8555 53.5332 85.0191 53.5332 85.0191 cv57.4981 83.5308 li(79 ) 0 5 Adobe_AGM_Gradient/Gd get exec<</Start 0.589888 /End 1 /Mid 0.270834 /NumSamples 233 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B4B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A4A3A2A2A1A09F9F9E9D9D9C9B9B9A999998979796959594939392929190908F8F8E8D8D8C8C8B8B8A89898888878786868585848483838282818180807F7F7F7E7E7D7D7C7C7C7B7B7A7A7A797978787877777776767675757574747473737372727272717171707070706F6F6F6F6E6E6E6E6D6D6D6D6D6C6C6C6C6C6B6B6B6B6B6B6A6A6A6A6A6A6A69696969696969696968686868686868686868686868676767676767676767676767676767676767676767>0 <F7F6F6F5F4F3F3F2F1F1F0EFEFEEEDECECEBEAEAE9E9E8E7E7E6E5E5E4E3E3E2E2E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D6D5D5D4D3D3D2D2D1D1D0D0CFCFCECECDCDCDCCCCCBCBCACAC9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBFBEBEBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0B0AFAFAFAFAFAFAEAEAEAEAEAEAEADADADADADADADADACACACACACACACACACACABABABABABABABABABABABABABABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA>0 ] /RenderCMYK null/SpotColor false>><</Start 0.415731 /End 0.589888 /Mid 0.5 /NumSamples 248 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<0001020303040506070808090A0B0C0D0E0E0F1011121313141516171819191A1B1C1D1E1E1F2021222324242526272829292A2B2C2D2E2F2F30313233343435363738393A3A3B3C3D3E3F3F40414243444545464748494A4A4B4C4D4E4F5050515253545555565758595A5B5B5C5D5E5F6060616263646566666768696A6B6B6C6D6E6F7071717273747576767778797A7B7C7C7D7E7F8081818283848586878788898A8B8C8C8D8E8F9091929293949596979798999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A8A8A9AAABACADADAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C1C2C3C3C4C5C6C7C8C9C9CACBCCCDCECECFD0D1>0 <000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7>0 ] /RenderCMYK null/SpotColor false>><</Start 0.191012 /End 0.415731 /Mid 0.380952 /NumSamples 268 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<9A9998979796959493939291908F8E8E8D8C8B8A8A8988878686858483828281807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6B6A69686867666565646363626160605F5E5D5D5C5B5B5A5958585756565554545352525150504F4E4D4D4C4B4B4A494948474746464544444342424140403F3E3E3D3D3C3B3B3A39393838373636353534333332323130302F2F2E2E2D2C2C2B2B2A2A2929282727262625252424232322222120201F1F1E1E1D1D1C1C1B1B1A1A1A191918181717161615151414141313121211111110100F0F0E0E0E0D0D0D0C0C0B0B0B0A0A0A090909080808070707060606050505040404040303030302020202020101010101000000000000>0 <B9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89888786858584838281807F7E7D7C7C7B7A79787776757574737271706F6F6E6D6C6B6A696968676665646463626160605F5E5D5C5B5B5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424141403F3E3E3D3C3C3B3A3A39383737363535343333323131302F2F2E2D2D2C2B2B2A2A292828272626252524232322222120201F1F1E1E1D1C1C1B1B1A1A191918171716161515141413131212111110100F0F0F0E0E0D0D0C0C0B0B0B0A0A0909090808070707060606050505040404030303030202020201010101010000000000>0 ] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.191012 /Mid 0.259259 /NumSamples 172 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<696A6A6B6C6C6D6E6E6F6F70717172727374747575767677777879797A7A7B7B7C7C7D7D7E7E7F7F808080818182828383848484858586868687878888888989898A8A8A8B8B8B8C8C8C8D8D8D8E8E8E8F8F8F8F909090919191919292929292939393939494949494959595959595969696969696979797979797979898989898989898989899999999999999999999999999999A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A>0 <6F707172737475767778797A7A7B7C7D7E7F8081818283848586868788898A8A8B8C8D8D8E8F9090919292939494959696979898999A9A9B9B9C9D9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADADAEAEAEAFAFAFB0B0B0B1B1B1B1B2B2B2B2B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B6B7B7B7B7B7B7B7B7B8B8B8B8B8B8B8B8B8B8B8B8B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9>0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (79 ) 0 0 0 67.7633 [47.9159 -47.9159 52.065 52.065 37.0091 68.4949 ] Gg[-32767 0 0 1 0 0 ] Gc[0.191012 0 0 1 0 0 ] Gr[0.22472 0 0 1 0.191012 0 ] Gr[0.174158 0 0 1 0.415731 0 ] Gr[0.410113 0 0 1 0.589888 0 ] Gr[32767 0 0 1 1 0 ] GcGB87.629 109.797 mo90.1602 112.65 li106.797 106.793 119.033 105.98 119.033 105.98 cv107.551 106.213 87.629 109.797 87.629 109.797 cv(80 ) 0 3 Adobe_AGM_Gradient/Gd get exec<</Start 0.432584 /End 1 /Mid 0.5 /NumSamples 256 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<00010203040506060708090A0B0C0D0E0F10111213131415161718191A1B1C1D1E1F1F202122232425262728292A2B2B2C2D2E2F30313233343536373838393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F50515152535455565758595A5B5C5D5D5E5F606162636465666768696A6A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F8F909192939495969798999A9B9B9C9D9E9FA0A1A2A3A4A5A6A7A8A8A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C1C1C2C3C4C5C6C7C8C9CACBCCCDCDCECFD0D1D2D3D4D5D6D7D8D9D9DADBDCDDDEDFE0E1E2E3E4E5E6E6E7E8E9EAEBEC>0 <000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 ] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.432584 /Mid 0.5 /NumSamples 186 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<9A9998979796959493939291908F8E8E8D8C8B8A8989888786858484838281807F7F7E7D7C7B7A7A7978777675757473727170706F6E6D6C6B6B6A6968676666656463626161605F5E5D5C5C5B5A5958575756555453525251504F4E4D4D4C4B4A4948484746454443434241403F3E3E3D3C3B3A3939383736353434333231302F2F2E2D2C2B2A2A2928272625252423222120201F1E1D1C1B1B1A1918171616151413121111100F0E0D0C0C0B0A090807070605040302020100>0 <B9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (80 ) 0 0 0 31.4043 [31.4043 0 0 10.67 87.629 103.98 ] Gg[-32767 0 0 1 0 0 ] Gc[0.432584 0 0 1 0 0 ] Gr[0.567416 0 0 1 0.432584 0 ] Gr[32767 0 0 1 1 0 ] GcGB183.193 123.758 mo185.348 126.898 li203.91 122.109 246.998 128.494 246.998 128.494 cv211.225 120.309 183.193 123.758 183.193 123.758 cvAdobe_AGM_Gradient/Gb get execfalse 1 (80 ) 0 0 0 63.8995 [63.4011 7.95548 -2.55636 20.3729 184.885 110.264 ] Gg[-32767 0 0 1 0 0 ] Gc[0.432584 0 0 1 0 0 ] Gr[0.567416 0 0 1 0.432584 0 ] Gr[32767 0 0 1 1 0 ] GcGB111.891 113.799 mo113.84 117.076 li133.742 112.836 192.816 118.375 192.816 118.375 cv156.145 112.389 111.891 113.799 111.891 113.799 cvAdobe_AGM_Gradient/Gb get execfalse 1 (80 ) 0 0 0 80.3379 [78.9079 15.1116 -4.84931 25.3216 115.455 95.1899 ] Gg[-32767 0 0 1 0 0 ] Gc[0.432584 0 0 1 0 0 ] Gr[0.567416 0 0 1 0.432584 0 ] Gr[32767 0 0 1 1 0 ] GcGB87.086 75.1309 mo88.379 77.0879 li69.3438 96.3511 59.3633 131.176 59.3633 131.176 cv52.9317 133.285 li65.4629 102.34 70.2774 97.3628 87.086 75.1309 cv(81 ) 0 5 Adobe_AGM_Gradient/Gd get exec<</Start 0.589888 /End 1 /Mid 0.270834 /NumSamples 233 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B4B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A4A3A2A2A1A09F9F9E9D9D9C9B9B9A999998979796959594939392929190908F8F8E8D8D8C8C8B8B8A89898888878786868585848483838282818180807F7F7F7E7E7D7D7C7C7C7B7B7A7A7A797978787877777776767675757574747473737372727272717171707070706F6F6F6F6E6E6E6E6D6D6D6D6D6C6C6C6C6C6B6B6B6B6B6B6A6A6A6A6A6A6A69696969696969696968686868686868686868686868676767676767676767676767676767676767676767>0 <F7F6F6F5F4F3F3F2F1F1F0EFEFEEEDECECEBEAEAE9E9E8E7E7E6E5E5E4E3E3E2E2E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D6D5D5D4D3D3D2D2D1D1D0D0CFCFCECECDCDCDCCCCCBCBCACAC9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBFBEBEBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0B0AFAFAFAFAFAFAEAEAEAEAEAEAEADADADADADADADADACACACACACACACACACACABABABABABABABABABABABABABABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA>0 ] /RenderCMYK null/SpotColor false>><</Start 0.460675 /End 0.589888 /Mid 0.5 /NumSamples 248 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<0001020303040506070808090A0B0C0D0E0E0F1011121313141516171819191A1B1C1D1E1E1F2021222324242526272829292A2B2C2D2E2F2F30313233343435363738393A3A3B3C3D3E3F3F40414243444545464748494A4A4B4C4D4E4F5050515253545555565758595A5B5B5C5D5E5F6060616263646566666768696A6B6B6C6D6E6F7071717273747576767778797A7B7C7C7D7E7F8081818283848586878788898A8B8C8C8D8E8F9091929293949596979798999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A8A8A9AAABACADADAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C1C2C3C3C4C5C6C7C8C9C9CACBCCCDCECECFD0D1>0 <000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7>0 ] /RenderCMYK null/SpotColor false>><</Start 0.191012 /End 0.460675 /Mid 0.380952 /NumSamples 268 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<9A9998979796959493939291908F8E8E8D8C8B8A8A8988878686858483828281807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6B6A69686867666565646363626160605F5E5D5D5C5B5B5A5958585756565554545352525150504F4E4D4D4C4B4B4A494948474746464544444342424140403F3E3E3D3D3C3B3B3A39393838373636353534333332323130302F2F2E2E2D2C2C2B2B2A2A2929282727262625252424232322222120201F1F1E1E1D1D1C1C1B1B1A1A1A191918181717161615151414141313121211111110100F0F0E0E0E0D0D0D0C0C0B0B0B0A0A0A090909080808070707060606050505040404040303030302020202020101010101000000000000>0 <B9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89888786858584838281807F7E7D7C7C7B7A79787776757574737271706F6F6E6D6C6B6A696968676665646463626160605F5E5D5C5B5B5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424141403F3E3E3D3C3C3B3A3A39383737363535343333323131302F2F2E2D2D2C2B2B2A2A292828272626252524232322222120201F1F1E1E1D1C1C1B1B1A1A191918171716161515141413131212111110100F0F0F0E0E0D0D0C0C0B0B0B0A0A0909090808070707060606050505040404030303030202020201010101010000000000>0 ] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.191012 /Mid 0.259259 /NumSamples 172 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<696A6A6B6C6C6D6E6E6F6F70717172727374747575767677777879797A7A7B7B7C7C7D7D7E7E7F7F808080818182828383848484858586868687878888888989898A8A8A8B8B8B8C8C8C8D8D8D8E8E8E8F8F8F8F909090919191919292929292939393939494949494959595959595969696969696979797979797979898989898989898989899999999999999999999999999999A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A>0 <6F707172737475767778797A7A7B7C7D7E7F8081818283848586868788898A8A8B8C8D8D8E8F9090919292939494959696979898999A9A9B9B9C9D9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADADAEAEAEAFAFAFB0B0B0B1B1B1B1B2B2B2B2B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B6B7B7B7B7B7B7B7B7B8B8B8B8B8B8B8B8B8B8B8B8B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9>0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (81 ) 0 0 0 58.1534 [-2.54196e-06 -58.1534 39.4473 -1.7243e-06 50.9317 133.285 ] Gg[-32767 0 0 1 0 0 ] Gc[0.191012 0 0 1 0 0 ] Gr[0.269664 0 0 1 0.191012 0 ] Gr[0.129214 0 0 1 0.460675 0 ] Gr[0.410113 0 0 1 0.589888 0 ] Gr[32767 0 0 1 1 0 ] GcGB193.475 123.246 mo190.604 123.168 li185.344 123.326 182.635 123.967 182.635 123.967 cv187.895 120.695 193.314 118.227 193.314 118.227 cv193.475 123.246 li0.9255 0 1 0 cmykfgrestore % PSGState%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Gradient/page_trailer get execAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Gradient/doc_trailer get execAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 10.0%%For: (Chris Hanley) (Ivie and Associates, Inc.)%%Title: (BZ_goldback.eps)%%CreationDate: 1/28/04 3:23 PM%AI9_DataStream%Gb"-6CNCN.E@CYkn/p3t=4t.33\u#uf9Ih+Oj)(0P.9l>,cT9BQ_H(d3i8]Yg=l8Fq=PR&!ZLZ4>SO^ha!&LSjtne0%++3^2h(Co%lVHDfr9!suhct[-s*f9];`M;?+2#o)T;)//O8bdG^NfM/ZH^en.7(kH\'WR$URPbAXSsZ6kj*:KTAG%siSDO-5QCZGmCVi$4+4^?%o_H+k*_ub*k2YFhhYa8Mjiuakhqd1>qSV:grls3TWCMF5rO:\@^OPuPIIX6(5M)f_HMFrBo%go2LT>>WrVO36h7rjc]6jFUX1nsr%q.L:;IJ3^+:&b"XIeD<bhgG%0p/M&S/cUbmi,J\X6QJ\a-.Z[GZe=6khgb[^Qd9TaI/;'*gMZcQRkJ.*IK%<)[U8k(]AM1X[Ip_K%j0.A=p'j]7m3,+5[Bj5r]t]&@pZ_:)2d['RLbM>/s/5>Nf^!Xrmf`WZO)OL%s5r.`lX[a,#!_K:pd=lmrr1)b?bY%hlVu1&mAI_r%f>#iD;k\U;ptpPjmPjV)S)8_lpqM8U)qPCjGQ.0h[r2OYH_X)[%'t0LmalBk^]-WQ3V6AFf.T?Ki5bi7[fH15+,YiQreLJK(V`'k%J6]9ipg7sJr&[43_&YYPk3"tDJQGrg)5i)torj[Rgj]7C0LV;DIsh"Lg\Wp:hBA&o.3@eU-is>7^N7T0.bO#dXLL'aUU<9,@`aB^%c$2VCqAsnUqtKRYnC*9iDr6'Bo'*dDdY.VtrEEIfX3Y.%q>UEDolP?#G)c_(`V9,q56'*PpL!3uiS#)om-d,doBuUU#MYi`]70o5%X(Mb=V$?tpk4<NJI=]Xbs#mI#:Cha15Q1QT+'u_XO*@3&/`6g4nEmiKs7ki.ib2]PqK[@dlZK;$2U<utZ?<NLo-#-e?9R]gSqj5?%gJledk8"$riUcs(]`7b*4^j.MmT2W&oBj09^NfMHb>2JF_@p;i;m+=3q<rf7LL6[TIs]07LHbfKs7PRLhfQM+p5nM\r:XW$s"Eqm%qT(^)Fh`C$]l<l=S("8GYY92Sr91_$s2V].mQ^Z)rmlP=^XUk`s/jCul]:\K#S_%Fe&.7Hl/TfC+5VEepe;tu5;?A-^s9jj2s0#A%c]"@KAFK$!jm*,S'40:<?/\fQb'55H,$k;R8rjGZ@i\nJ1ZL@?2;dA8Mq8DE-bcbR]#(N;Q02uK57+NL=5_9^jm_8Rbk*^-2;R56%bL[20-b.BBc.<\:"g<kdi[a"'nFCre]]r"S^T-l@:>mPTL:c/WXqT`fO!2N1@ZDa@`Tqc+2t8f_e_]FL9eKH6P[^ZFPtJV[fBJN;%dVZRrDk6393g4t%3TcQI0)6u(k>T+:\,!0:DQ^>6MD([AP"I@'>a=Vq.Q?Itgso2fle8j!Ihf-G<P$=Sjm)-rg0C2ODQ[l\mcp.a%FU?m3^CJlc3aLq7Ed`(YI=8]@\\>bkX&Ce*V0459$E&,@VgKtlX4-b+FLjKgT'km^bnVCl\a_W;-JkPfHrFpcDQ[nQ2`E\)2g9Cn%kDD4df&)5:GaiUBD7R?k]tQYchV?uEhUQb9.t0LK2kJ%0?$?6'kPk7TMst=:o#l)[@u"F];s/!QoAN3S])E*WG5SVWfDNG'F)0@U%N=/b6E_:Nj7;jZU?<<@C'm3GDiD<D)=+n!sZ);hJOh;l,7JH,*p8+L5Y+$Qbbn00+E:pNHD^SKXdp:ca[rpTD<KW7P@f4oOaG8?-%8&'U`H31!S7@@ZAf;6@6[+<PA0<["[/g5R8OrD$D_s<Vl3["^jjFm,FNH9/po2F?_-(Lmck/t1/Z8-&`K^NO-9V8dj2fbk/4VYOY%h7t1$5Od_!jm!!p)+Z(#Ye,53rTWVhp3!/-8dpZ^,f<]hi[a90mt;k"e)%]_!?h[d$`*6o?FT@"?Bn9q8k[s)X!GgKHGR6^Gb9Pb%*,Y:/-M2MG>dnp%dE`8.-bLo<Wmh*Q9$SpRaH_?&S4E?j(j1876.Q0D",Qan4qBlU8qsK!0tOA1WRAs^S7(nrU-+CCdOjB3e*.A"%F`W/,lUoujWC/@?@[H?m"dkGK@C?fcas!qVlB%[r;^IT.Pus>E1/hJsE"2F$.P[JEo=1jQD12$?lFPEu@Og'UQ2JY50YW][Mk"T5%GP/"S.^?^j7(ZFX>r@kXBJAnXP4cA+T"FjD2jN0*=0c0_q+h_i6M@9OY0AaHn';CpLV@ACFWP\Gf.C>gI%B!.dGeFL?9qc4bkR/'%#]#8iknT1l1d_QW>u7Iu@[)fonj/TO6mrUt5XYVb"%3,#k)YI.R(feO@J+\OnA<n!fbuds:+dNVGW2o8I'-4X-`0-MkgP?$_@M&U%9EIon9FOW.9\1"c0T.cc0Y9$f3:@'<!<u2T"?jR3mRc2@Yg5(2J-3"X!N?V2EH;2u_e-SLiF=e=gL1/'37nW:^eTY*TCDt$!7V"I%_?mCbPYH%HF<D/=d0UT+)&-(5d[Z*p91#<u,A"GQdH-fGf+!Tk[m8Z/bfqQY==/_C7@MT"+d%Pe6o<%S9;uSV(U7L]ZtP,Ud5fnD%!pReA9TK8'UZA28KOhMZUo-aS?S<FjOcuA43a-\$K1JMulYE:B(+Q]D5k>)iPD"8AXanqIp]K1lFT<*Xe.[qJOS3X+l2jh4n3b>&%:^s/65bDG>O\AT6QF.MOAjFj:^B$(pj:9k;_-oVooE3#:-jJp5YZ5+YOJW0u%[<580d*qjG"Ga;\Jf1L=cor88=0smdKl5%Y8^3M%)XTlVe]Hme<InkQ&ur7R(08&bF=?re7h(H,Bn#]To8TofX1c_;gY0H^$/3qObgIuqA"AM*qg,b$p'>M#R,dpd0G_0#2=]]@;t'+$%Z`ThaMaBF)GrP*`U7,I#*c2WUO9NG>g*GC)S*M.C24!jYcH_V:!a6T+q.O'D@'UR8CZ!`&A3.7!pl-+#0"!!!S&U*fX9h1o#u0!^%&NL5Q//#3i^gch+KW?_/3CIg!X]Ve_+B^;7._?p+M."lQW_ouedE7Pe<A,&h:rVZk:02M&MU'F$ITL\`Ub>35H'ZooGL/$C%M!j.%OpK9`mnFI>8^nJ0Q\8V,E'_(KldDn$n[>*8Ro$cR&oMF+C!p_L]6(+8gU[B>f)Sj&ecAgG$bEP`Zm$^^b.>f11Ej">ed#4]fB=,!%i2]`"W^JOmMKK&MkCPqrbVV?@MC"AUU;HTWLsg)f-n1OAbU<u?;S&B+So.)-/AZe=EW0jSGEbHc&trCR9B\8*,'k!;N*]"-XKOIj%_?!^WhCENAGN7GIPX9Bt8LbpbOL-5&8sNKe1-Q=S6u4$_777q)?:90L'+]$o&3<*deE?l`Ue9T:3KG9q2XV-;d:YlfcSRu:#hXb=%!.0NhqdWW2nquQofQ*n)qEgg8EH:JP?`MXO5LCK%-]MmGn8M<8-gRa>H<uWG,^X^_`g0CFr-jk!HQ`5]#X=2N(.G=?U/a[Fl5Bi*%>EkcB-8bskQ86TRf-hT3>_F:5#XdIA'U2Gj\RN)SA=bm4f.;e=!C[q?Cp$U-!E%thKc&PYYD<Ne0rSfW:r<@jC.?1bTgBJkPq&_!%BglXWYhMj`AnB`Q\*e"ZZqt0lAMT;j:&@OVUJBqa4f/giI7:$411in?)719YD@:"-7thsOk\*4`?lBsM,JbE.1^)1kD\)sCQN&J:%qI\'Ts0YmUo.W+L*&B?sB)Sp`=\Y[e7.Cq`19`Lk1j>36N+VAb0hpE;<eB%.3NZ&3;>05#mEs0&/L"A,HZWeF1g=#.VCKSb0Vi<u%2Um9.;mMrhBJh**kqsAPa]'1DO`X'n)qiq?atT7m>11KL#55B[m:J:j0-aCu7O&cga;gYga=qdq-8@93'm+uV5oVY53VIMgB`@:o%YJT_.LaFdq3r6d!E[>B0@ePP@IElq;(XAPW>cK[9Fru[g"*>QN[ShOEqC;"R%1C[PV_:eP)Je'LoQA8lWn'hk(Si]S>7@nR=/N)f%?\Z9#I0o`ObbOV2KV2dABFtMML8[g-+5co>L]Yi1%RPq4g,d4?Trl)'p^fkB8CD:(L@&P6It*oc&2lt2n/*0c91uoYB7`($_]=X=%O%4V\YaP!K0No-c:6GmlPl_7/%QN=E;aqKH,.7lEEldF[qD0k6!pg0i^G-$p0ig!3E&5:QaK0,'1;XN]V_**kF#KGo^PT-m]<9\,%2-a^8A^Y%sY&rp9YQ)o7r4-C*ca@feOK4-V4g++d>miQh#)etK1cNb7dDO[Wdt^L>(7,OS)X>9GeK_19LSc1U;3LI<fGW1]jVud;%8Rj*Lq9#r,9Zj[id&G9=i61`B]J't&EBUc=XcJ43'CO@m4'X_&la1Y;pWMb>^)m)+1@ljNBb>7to(FAY/aBUFB3<mZ9'RK$^-Ug!%Kg$gVFhuD.c_\g6U\(b/^JP!\,+oPM%6I4k4W4-#J//@pJ^=f\iP%NdPROrXYg<W6Oq1%h;9OcjPc3]^;(JT>U1ppmBY/MOmf,@@%pKoAoGIaqNL0Z]RG$"9ciUq@?dr.[C9MK!/0eH!aiZfY*N_6liaS4:<*23[*GS2?+S5c6^bsi[@pRQN3q:+L)g[6SIc"ks1/q3B!%Qi*A7]QqW2PM?R4EC2^U$AH)hrpk+bE-3q\:'dB`1N#8=StL.pdlInGfWO)9V0OV7O$WXs=omU'*77%L$E#^IF]G^2,(N@!ck`f!%/p0jV(E+O_-DI',&VUW^>r9grVW1G[Z\V5+gdW<<3/6s85I@.0bVHij>(p'LO@:pod?7-jfg(a`TIARKBo"g;Q1Z6Z%2t/L-q.K#%:B8c()^Hn5"uV4[1NQi[o"!pKJq2?!Z'uj\nLdA5Y#p9;0h]5HEfQJPFl9Flf1UX/iL&9Wg?%'(g81Y57$j$C8mYfdI]iAsZNI)L%GU='rS@,Z/2IULAhBp,[cLH+%=bVS9]M9^fP$'-->9p[;%`\jROh`/Aq1XcrKdBLaO.9=l]d5='o9;p"15c\q6FDX&hDE>9BO-Fj%o7#elX"5p1"sNaS5KBG[n$^m=,hR4/Z?(e_O$N*XGnQE;=6>,@Y)aUp!WR#WI,OR8.`!1gEWd!CS0_UsPl)E[QEIu%qF6)H@.G`"%.WMW=dnCEpdkhYD9G9(VM&4XZMeV1i2">%DGVMq*QmQ-5'/-5>(Xp<\C#[)gnR@r30hqRC9b[+Q,e%WYTKiBX)C@A;.l"Q^Wo2%!%jg+)4(7i>e)(^rc,2"JjS@YF-<t&`Eke*29'VM&(U,#c(FHok3MJ:`n3`ea_WjFl':/fP3.[$OSP>j4t;<Ol/1K9[NFZQk3X>9)k%h_UEt`u8")WnY[q]-*lo84)-%52B6tS`J49B@GD)S!HbBU;d%Sd:0]@g(WAaFES77Fk0`4AL`#o>0gQVLgj<rgPNo7QHD[`b%Bsm%_/a5iYO^D/7MqEI7\jKeEYG/jWGX(9m;^$t4ua@kal]p,WGf51/F\Os"AU!R4(D=5E.q5M,pf]<[V=6gkJl=UWcCane9Sd:'i=BL%=\^`$,=HJD[,9XaW1NoK-3+F5C5K_X-!M_FRWVNa7OHcF+7D+e9F$)/W3>#AM'6`Un:`%>J%&7+/sXdX`+-oB_-fADNCVIfdX\Dn%a@e>[BLjafZm"lVNVQ(:(/2se9K?:E9u*!a207j[W]G+<.9Vf#]QWO%0Y>GFgSo*%WhAL%8FA5W<u2>`%0Tk@gXPUK<4`pPC^/_@%F0+`,g"d(qb?_(T*'-0WnJg'@F:S=+KAUZ2m36uY750$"N*ZX^(W#<(0`!R=N$-O)caI$X7\OMec[.\Ip!:`#lTP^fM,i!j#8=5f%AjO.a(&8IK=0n<J]5\6GO$`&n7$f4.+q_93l)S&t=Kq"``E#lbQS5q'd:J9QO^]Bn8\%aMm[aVn[2[)h]mD8HX!\&CPb=T^[$A+C%$f#U+GK69s[$eMUPD"7N:eqe*ZB/38DtSLOSh\`8L338m9,m/Q6WNJ-K@D,$cT6XCmdBN:mcNqZGC=[X=7.gJ1JfKPr>Nf.S.f0M%?+-G9R<_CcfiC#!GtL-N<]6@k8ikX+2OSh_3n[OlR<_IeflYGWo,%Ic:g.08/4u`c.:9DHFjjm^GmK]Id0bRX_t)?F_C\ZODmaD-%fRsN7,&YY"kX?h.=R$O0CDf>[d[/$^,(YRZ[`n15L*\R:`R[W;,*@^U[S$36K..5@Hb-7jn5O6!.R[%tP$44&AdI[Bm$!:mE[f.(%E=;;F9ks!7>F4,5G&,Nq;$'u=iO32G\ffVR_,6NI!>Qf"qZ0^"RQ>RQ+Gk$JPErpcr\b/684is@P/0)RE%Qj7KciRVplCU5_m4Lk%bJ>LD>9>#L)^US1WdsE,6uJ5[rl>_TgG6=M]S,Ss\_d@`gcA>Q6]5lPIp>$e8i`1M2P!.i)l7Ue@l`\F(tIbUf?]-VV4d2#F7RrU%F6aG^>CTp@[pKbY\&gTa>h5[-^EKM7fbshhTWJ!j^]3rrkF^X]KHf"0n%U`$fW?`bAb,llnB\jts5i(q(DZl1^<3`c:ooN!L;Fb+%j[Eo-WF\dCL33&"g5pbiCO]"P@hc6'&+;]s\c:f2q]G8Vo'/=+%1CTn3A-AgE4k2q8fLi<?3[CneoeBI?(\_;=3`sQh->?X+*7=%%5BhI@g&KO]0<iWe?:aj:Y5`)SUAYc4O-#o-F>V*b<7)/]WE7CJd2>QN1qhVH]F7>^[!'-C+hOh-n=kZA5!36AhuIn9^s9as2e"W1%LBh'CZf4t@1eO:tGaL`\:`p8<BR#pgMG[_f;%.qh<K=i^g+K?#kRss-r&ebMjLP`dMAoXN]^j?J3PN$SS(H3Dl[&RdmFTg^Y+*,J%m/KX_O.`f@WC2(.A(I<NrVSV?&.uOsRilQ/PVb\O"=Z.%J-k3]$'uc<Jm_/ZV5EZ):c<<6.82opPdFY:h'i$f(0T7/_98MB9o<i6%(PPr\_=:rK%[>`sEkW[Y(K0f-*B.25I#!Sd7)@JD\t;O,s5YVP1IlThAY:C@,9j,n[Fa]JLb"dbZT^.]E5l3G2koF$bpmp5+!3f5%HZFeX.YZ2VWRPulHt*ZD14@IZM0i5C2.m<c8lD7Fh<dXTDcofb/f[hkbrVVAnDoPBS7P0(:Ke;]p=c`8BCtDl2V[lWI@nfb&tb$H%_dU![(eu#Q$uR1_8=n%X`V?h$\b,'d/+I%A9A3?l[h[eAjkio/2%,WHcSTG$Lu(/"0ROKG8=grlK7jjM=X#5tL-'>CO9impXL=b/%dPfJKKU"@VX5$mbF2#fnKGE/[IOmjg:0Bl8N)>k=o2[1&G1K:C%H>@VIa$rr2!WGQS+T7dR/O/"l;P%G/GtoJUK2Wcgt=)B3EU@*%f=5aR]W`?8;VNfj3NY-?[B<O*opR7H)gKYo3UAXFo72tdN1";\f/GBhH1>tG1BbolZq(r^:*3*H,Q$KJcI!\L5/o9l9B[TA6L/B[%5QJ6acH"j`3(/7T6S[f2Xd6uiZl%<Dh]?9NqSeru+92;g++@\QD[1CdhfIF=[9<.d7JI[]Lg)5G4k_Ngc(aCI(;%pGW],ua%_J[r%2!-gbU3a_EV-Ocn$fo-+n?OVLaX:D,Ll$G4b<3Ir]aiN_>irRXg?pXZrA#n=OCbpU)K4Ag+0lelBcHTjD#C]l@fG&d&O0[1h75N1%Xe-3'072i%],)NV73^.U$>6LnF&=_3R2sJu^?paD8,Yb+rmH&@9>aWOV=CLNL8138SmK!MJ"*@-?Fk6-S#;ia\o`@ia.?VKG(!:_%Ed>NE$(6$]](;O[CB&@bb>VO,8=Udq\*[H_%_T.I]uOL'%aVD9M_=Vb8'Z+UHC9O,4SCPQqXYF<&`s</aaMt;-f#qL8rZ"moJs'=%[171^T;"MdBi!k?lI2'mA=fMZD.uf..I,BJp10bh5&G"0jsfTE<(;K;eBFP]Uh--dq6Q<mbYp<IQBIPZC?Ei?dP=VCr)lWqk3FgQ%8<R/_iJ0DkK6#,Po$KfK>'CEU*WBg6\piQum9aIfLpVB^5&`C(b3Z-5%lo\oI`s8RC@>?4/gSB%ZL_]D9:d7c4[s/B]["WVQcEX9%bFDYW+91q'7:'=/,5g*RM793ae7B\9nDL]g#CBLhg(.d#HR=*l_ogZmeOKqNGo#_QLf``LXOAA"RHLkNMg/g)b;q67Q$G"J["qfG%\ZF7hS2R2<*m<oukf]*`S`ug+.P1D?bfo\'aBo&4-2/`c-Ai:Vejj/>CIS1q"V3[ig#K-C.MDs^l[I-eU40=)<,LUaKlrtk&HD$/%Y+8VG%t,u>'k^?H=?St5>#@LdBM(Bo\qTS79V]XQVLJ@&h7NR%opa9_^\O@kR.42nr4%*1j8\_.j6n/e5;UVoP1FrBGn-%Ferq`0%aa-@/"S3T[BrrbNk:fJC4iofD)lo0?:0et*["@s]G?9fi&]R8^]0PUgqF+T#JinqWI/i`KG@,mYcnDs7^PZ:,^?nFek>f```-"e4%LorJ$/")BA'oNg%IqG9.$O6C*g!52#Lq!5hVpg`c]\Z#,S/49/T9GfK[_K89XOW%W_oA"E@Sm6H$s&*7Zbb?*Yco\=-&#3Ji=OgO%*2SulOTHuC8;`X'l%N#]W>$nL@`F9S\n4RHqN"jF:?f_rUjPckWeO-LU*=_ZH6nh_98/On:I@D_<Dpdm2g&2Iq]sjcqC8Veb1^0B%\S5R*fW[7TD#IW,^u'7f?gb#QnBRLD#Q:f(rZPX]flG!&aktarfMG-Vk(.?-#I5M!jf2m[1>0.B>;o0=%0ao0g^5a&<H5<EBsN`8%A>,8uOIB^^,+3-kajpX;QK?2.X8$b<8i/*aOI;(`A5\(s/4$_I5IR^YQJm5ZZ1utOnCU4\Z$";G<H66ab':O!fcah8s'EcnX,OMs%Z`U1?jn&ef,hW."A[pQ:6A/=fPEPf@2Z67(O(m*7kYl;CE0:SVfb9N7@2g)K,QcYlNI'HgXGWT#GMNOD;)oE&&acN;/OH6(bqUY#%h+FBq9;5X&>p,K.!'.>B4_Li>W,C`X@h%P$ph,LB"B7,%)/BL68[\#DWN=21\JQjOU<.U4,GF8sf7Ts]#;+@7>K.aA_EVT/Imc[,%1M-t4kW`9C3#e'dE@LXB=X5<XC[FmNE^;:)<b<_fkd&!o9saS*R8*!`e=AEBZ]PP^p7u:t;Dt@h<U+`RYq1%P;R\9`g)$$.8Sh)V%b&jc6F`^s,]N87\nB"i0R(%?3c0=E(?'LDS5,i-FYr62>#[n[u'@Bqhc!YtU:2sL0=ecXOFFJhebu*.SB$`S]MG?CJL'V3`eBt2G%N9Ael_ItoW@6DE(,o7bre>Ls_F)9n_)h"$32cR&JA7rSg--dmGA=(qH_ZH0KE%4.i8.q[;(o),j#f.c0VItloo.am300Ya*P@Pq9%7Lk(2>V`QNLa>CYauG0Rjd/Q!R:Of<Xr/DO2,tL-P,%&@SrG"g8J52k7uhQDX7PCWdq;c.0TGLV+=tI:IBU:g+#Cs(*'9k>RPR#1%c9:1.\ad<mUBpMC+`lD9aQZ&^ZFU[IpR&nm"4`b:.f3p1iOcCgQjj_OGoQ%_'a<tQAn=Nd[\U'C.;N]+g/C[$W%:XmUJ4`m<Ca[D%U3)f3j%;,2Cn;$dN@^!?iGa.+V1ib<L<V;ZE'][\1V/\$`H/;N`3K)=CjnCL$8(NtC;5Lf?,<3(k?QBQq*GS4;YPS*O)fk+?/eY9%WEK+ZQf5oELo8o9V_K,Wcc$JR>6-Tn]Y-"rB!?oIf.+r*&P:^>U27gf\9*8HEIu-<l0(#T+e<=6T$9l>TXl`MA>)<IRV(ed;+O\Z%H_B0shTZUlER'nq34U@/#@?4'I"<W\_LEmlE/6WVjliaae%<8g0n"&<Qh\uCV8cb"3.%adP,d#T[ae=Aqed,BIED,.an0r%oQuV>%VTU3ST%)^0O`<a__:KFpfY.:MFSL6K6_:K^5?<Qn`:9#Mq3'b5P2c;#iq\bsq0ZYj;e2f@_RNWJ?Lg3#F1pX[^>sS=$$>s*kP8b[%kP5j\71WXiG5+=:h/ak]T6U<348dE$%pu&/s(nH.?a=l_Z?Mp<fR/91r"se%J'737%1hQ!IXXhgiR=qo?!dI4nRUt5^O"#Br^"13%cfDKYaiAkPa8W9/O,[bVbEB0OVRr8LWnBc(fjiLe*,WiL^*lj*D#.Kt>C1L5nEdU/'<Y/[#2?J)r2KS'rkpeqP</V-3W>XZLHhF@%k,#s[8r$aenG85\-C?CNbf\&<1skRo^1O/,1u2'9(&hAh44r-n-i9Y*VHIiUIM5o]=(t^*P9bUN&Cup:ogYMA9/[e2++&q&@Qrrk%UY+\$hhZ:P)%S%';TJamQm*pWp8D,LkBd=grK%7A@k@4O49,&.ER;12$(<PqRUU!YYNdk)RR1a&LM)rs.^5Egb@^ouN9u9QiKb^*%*QF(+'R;N_>]A\Ao>8NP9DIl\D+Zag2rC<]G!bfKbQ58?j53!'jr1Td7C5*%Zohp,4r"RWV-r+pZpgNFBU8dED^fpt"*c3#;9_p#%@;\s@''6kje8]nij#T#,YZu"6(&!mgo8sY)OV*Y2L=jVCI8!VYR;7j?lk>.+]Bt24R$I2Ba$B!^q7M.@1Qi$mP"I$oFQWYnF6A$3%b:Z:UN(8D^M0GRkN4GZo3#h\u'UH?g]ti^"Ll"6_@.[sF8!5#`,>`?m:^s*;f:?e%`f>^^Mf]BG_lTgBVF3'c#[3KT$0ajR$q-nS%&]8^$Miu;SCEg.(F&knLj?sXq-7O\u9fc9OFCdmF7dAtmgEuEDX(WE:8M+/EZtlHqS`4=_F/-2A>tYhLCq?salu9Monr!l)PBl*1%g$M^NGKueFo4OEAf/hr9cM=nolRZCr5+j6^lK[&7:K!JEQDS1Y;/5(CNu"Hrlt8!FZPWMlIl[DZMZ`gp!WD#.IW7Wf31sUucp*mX%qG5_qqn.*k+i37dI/:\FU1i_&]O&IQ+*mfV7Q\A<:VVQY^P#D_M0/Nb+]Z29OhTn=^>tEjjH6$0qg@DrP"5@K7eCgEkt@_:QU3@O%mA[Y7T_Tj/c*MQf7&'2ciphg7IgCAr;X!4fIf;tVHMP$_$4D<s+Q_bsTDejX]Uq=qrOG8UT+H)%2hMV<E3rY-,"!H3d1=1B7q&>0%0N].Ak?dY'(IfEh&VkE,GrXJDT4jooZ5=+WW/T'4GrW?$SQUN[S9-/E_Xb@-9D)W]Fkr&`3,qVe'mC(?F7ErFEali.7IB29%,VO*%T]6,&g+2\J!d'M(+!tCj497H@i$<Gg>@bua4(2M(;`gdClKRo\">?+XP/\1Aa3)l-lI,nDe2\oESeAH57\M#;(9ZH#.^`<SQKltm%:mm#42(raN/k`KjLmMsEU7tntH=`=qeTEFjZI2R2oe[@nSN16'F"A$G3#OJgi;,R&@Om@GQE0RieTTnW2]&TPXN.c$4/fZD=(AAn%Nb[u[d8d47T^7!"o\D8<``9(tS(]BMD_Htu-#qThA&uq>jmj_'@VOL4D&]6mA$g/&$\qk%3HUe1DB/J_0QOKJUYKiV@u":,L0c;C%\K0]s9oC0%8!)UcC`2qcMZpe#D<$L3V?MMXk2\t\\Emmg6[jje*5]Z(76,+X+r>7n>fb_UBq2/m4/uV2>h&_<M(=_BlW2m@$L'9B%k@@bapW,bQ[rUqt8NdX`WKhnHj/C%g<rDp7qu_5$Bf4g)1S!)I_$=Qj:*%7Sc5a,^lN:8=i@@Bg]L%QS+1\*V>g\>/oRg2c(>OpP%JO<K1!A"+f'n*:n+0$LglhB`GO)hjg.DT2)$b4"F!lb5hX9"Bg#<^`=nlQ,j1CBKWXTB6H.-g8(A,]4^k':J9Y(CrUR(m`QSi>f8%$:U;N@u*@Y?/G;N?&O6aHi;HS!YFV$W%BZl4rN5Oj3F")^N0f^Esuk)_dlfG0XYth2@j5"*lBfU_GmLefcUiM/Kjt'K1[[*@2c+6%15f(ue2^3IWC*%B2:PK7DlRo-/0R@Im$K`=TEe\a8l]j:.YUr9%fZj6^J6LLj`)BC.TZT9''OX=.9MXU#iDpJ((9fMQQ#LK/YAiQ%\[83I<N+3GjhiqMi0`KeR!s8gD?%NZ@/+p#`QX*Agg8h-3>O#j?aYM9&p!Jlgf4iIksrjo_dniskgO(rGqoT'Kg&CH4B/1"/#.s1%70K.-KltR,SBmKUI(0U4PDI)9a/u<OR-B;&KK18YQqsIfR9:Lc6NfmhRN\s]8'R9AeBIcnRItPU-c7-bLa.6Oc7G$Hkm,L=N<dar%Ic=%r0hbdc>nP2QOV43UV,O@8Sn3sJSi.m+m0,m\fdqg<mL7mr\a7abO%LIVWm!e;5*o5[RjJkNR?pX?1)C5@h.8PVa])ts&.'X\%Tm;ofXJMAn30@am\+Iq5QrMA\aXks"Sn6STiS4QJ;87EpV4:H3FCN/P:fj`U2.]H1a'Bu!P4:pGnr+sA!%+'B^[RFRe'0A/mZQN#%1X9G#^hGStQ"]D)?FblYla_5fbRJ-nX[:R)Y2WYAG`+4SURN$if35OY^>j&fqIZj!mi<lF5E@VK5:TdtEUc>U8p#B4\*L=Brpb<A%0Br"E+*GT[jjul?hX"bX4I@3Eb'UAa+SUnUg*C(FarK>=Qf40p#@#VrmrVH"b*,n>YP?A[BJ*uq,\\fI$"FQ@ktMr*];s]LVXDUm%]#gS\"`GI3]H=-ER7jpTa67p5Tn(2(l?q`fJB,^Ai6=UiO,nG"S#o(3EP[8@'&;t;6ZmsY*E(:)VRuQRG5jBuc'u53!Eo@r[cq;d%jf\W3UjM=AGWb^bCHFIZS0-Y,]Q)1:-)N.EXSptt]ZD3(a&bic'uj?uT%Nk-b[@'4:>J#-mJ0`KJ8NDG1+H)!7tL!cH9\b=q151<%>%%L4q*DT!-.Z<8ke&4*>quZJpA6&AHXELM#pLna63Mp0p>C*\i)YTi]TKS!E\)ML61^j0o2KPHL8T3VG\Pc0]?o\ORWlAj\8P@.%KY,(Lh7_XNm6>',6\XAR^N]F#a(E!-K+GWl_69<tmkf:,D]g-Ib9]>0diuM0UOunJ^;u`gBnCHOH<qgbbm7\d:UO:+&l7W>i&SF2%g$&]ld3PCMX;L%eP<e*'?!ps!8Q`lb-d<&^@dcS1O\q'0ikkY2<dNbkYB;L[GXG=b(O009^=G+9biY(-@U1/;feP;]F@[fbJ!t3;%#NNI\#Z3+U_KinJZ3>,*(<heW@Hh(Mn1SJL!j2dV8[I_mGhC?8Hk"o^@!90l$]bDia==9P]iPHDY)ftt+(Du"I,;DBkE2d[b'"9C%#',N]qJ>R\d+lj*lLrcMC8RQ\rfI!MOOK4I34#<qD(BUA2/XF-m3)[$X)asj2l^q&U$F2!<pEM`1Q4DkfSO>jarRI*SlZ_t/d`12%-_%o`<+d+#(raf<bfB^`P)m-`9t@&PBrqaZbpC6K\-X7MAuQc@/TDNNH)<%_fSUo-I%9Jt++4$jpM!nrC"_G"G^MW.H&`ikV>Dj:%UuH9,\>\>?ArRtg9=)>\qb+E6F;mo[_C.K>pV,g[A=>*I>@Y6-VH[U-`pR'CDsk?QPA*+kn+"-8q`aI,RVntdS%W$@P#;+in+aW[%ql]Db^@1u;[qT((W86A*J#<;&K[XX#VZJA0!$utK-0XK]:('*?kXM+<&%Z2).=u!CR$3>lT&D<tM,]m:C6qdt1C;9i5QKf8_S:bD%E,@I(0;K[=a!LuD.$R:1\4K7N.e"5LUAAdFl/ik9#`C6C&m`_Y\?MLa44;mEkF+%RG?NPT@$G0`.l$nJ7HNnr9M/b6=>1<+/.D'/%On@5/qj=N"]9097F2a\D/nMU,]9_[gHr4,aQN%Y;ZP=XV1#G(4ptOq^-85"JG6%#^.s=Ii;qeHg3dj^/f`sZBk0hJn9DqrSYlUL.%,rV2b1E.uACc%Jj2I;j)BJ.PG]JQn@87pnj5O-X^T[=shV^6bn)sM0Ve+juWZ\^kQn)%9[D(_mYFEq":ZX;8IOl`+!V41d$meX8l%S$nTi/@F"$8blGh\+qLoIV-jL)1qiFX8\APrQNER>oV8EXh?ZS93P\Un?:DMlDm'+nF`k!e3(;.bJFd)Su_@=.+78R9#$JOC_g4H%PD[,*nn]@dL0d^MEp4&#"T0R,r(f/1r3<*gT%.rZOIZ#Ef&DT=gQ+(N?PHl>_h942mQgeTf<Deg?)Q4q4^J?mF1&U%l<5!a=dPPU%Hbq>Vd]?*oCmDY9=3,)FD:<r>(Z/@ePoH!:2JPabCBe'F%</5,T&HF)5;OlQBpkHtb"N`%P5Gk(XAY4?b#IS-$J.XmE*4G2/Q7dd%6mT\,K%hGLpnYP)4lr?K"M-*kQ%!7um%\,i5r\CZo7#"/kk9C8`tou%)"6-!dd6Y_9&HcBh(%;Vn]guLf]M$@=5C;2QUNJWK;<*"%'"a6-KZG9\f1\G=r2Dg".%?:MH^_'LC#gErc6FNqG00M')G,!XiPB5>[-"?dA(Y4/CDJia\^'=oUT:KA+KlG=A^$;-3_gaia;?T:%G4,_4&j9^-MTZsdI1J32*.A4qUi[#"IYW$H8E!SFrjc&?e3+)r3.s"MfFn))pu_b3_'L)KQ_UbD7doS8)u;Hb26d]F$&o#=d_ioS%A!L;hqRZ:cSn)pr>=S?B(u7,p=C1C!@=N.\/hs>;drq&6<OeeF]q="r3[59*Z]a[Ch6T#'D[D4=,,/f"rCTV.0n&t&Rm(rIppG\B%I%8a@I+OnDQc<*D'gLR]XtjX!X3O+7D$F(t:n$qd?_nsJqN08?<j'CdX?s"IMR)Me<d>EmeK_2BXAt=i\nNl5G@hS0eRPcE5+n54%fkQ8'"L]p'IsI=Rh27P7d<4d<o(nZA2(^JbA[uj`f]@6+0.9h7[]3<t[8pM7QMM%t8cpj9f<r2C,sSgbYQ&]oe(ccRc[Md'FIhdB%(1#P#?B=Tpi&W[4f+m.+Z>"E>h;%^VDqH]K?Q+6#3q83P_ODIl\qZqV`SHe[.-K*\=L=5IPm*OU%O\4Q]I_$?>1K)]WH?U(gdjRH%ak%bABf;Kgf)tZtCl1?MSVPdV:@-qcP1N--7.U+j9e2AN2)*UZUQ+H3EFL")`6`=D5D=G]aPigh.jdHW;55kml?n]D,/d+:E1<-$%[23)U)d"u;<12!mWb"0?172g8UDdU?W%K5rPb->\#F7CAS>J:X]?G>bjoAE*F.27<1.Q@5R=KHT-+hc0iSo$K/OR[5AsG/AQEA<Q%%j)GTi-?RY*N\ad6P#P=951%fptu^i[kSa>QZ@qO@<7CZ3d5Jb;7gf5R[qm=>H["oX*N0_\2H^G%JW(*FPDFN2$s6(\?#&ol->nF%EECruZlaSD*=9Fr6r;tVU_lEVXVQLq<MWbe?\rhIVud5crX(*Bkoj/&cGg\P+_kL$(6Q$K%SJ"NjJXmZE^]&Cd.p,("#89gLb'R1%V+M_$6XZ2ic0FTW=PR:eg-?(8`LJMr0F_S&FCBgLC`.S*"%+uia+\MebqLc^*QBCV>W6"%aL)<81/d"J&^%Ktbd@lB\ljc/R3'b`%&^[ool0:Q?bHS,bfOYh\?$D91hCO8jQJl+2+^Sb.c:]@pr,jN^e$Q3%)=Z0C^?T8DJ\G:*Id-V\M#\LT^na5P>S%C"ToqW><7o/)%moT4H9acj30VP"t%==a[UKJI4[Y"n;[Zn0W`RA81BdiT(9e-&5%7[tPU2$H+Q>PD.("eKs@V4jj#%D:T>Dq0,j_RC&S]huIB\K_)%@'=di'b:^%]?_F,B"pONm&Z,l4BS*2Tn:c)<0McG8V&&+m*URrD?Z]$nb0i["j[=HXUZ>`gg>L'^qnF?Z!l?.HlG.sh_k:L3]53l%qa'!UkBo$8s2H@EGFUX^DN8e?*ol>VkMO#Ro'S.AfCs4?rpD.G]R?dHn5A$"Hu0*R][_aC_T0#&>sN:\SjV6>psn8OqY9[.mlu8H%s7&%O?7B^AIkZBP/c<T8?[i":bEmFF5?9VUqENkeIWtQUD=LoNEd`/9Fk=u)+nIp@Cu=:JB&!I:iEuQdDu\_kli4-'590U[mgfBk%^S\n-#lg5ueGo/i50+afpq#=iT)0NdGWe.oG9=*-?dL-tJpJ.p4jMO6[P:K3VYQUri=GSt5KOj.aITMY<S.>Xi;HUb#fIP<Df=V)%H5F^t!3`!adMoQFS![t=Pq'oi.8"7J)`3cQ+96bQL\fr%h01Wi2Hb9[4mV(8d4P[I0R9<KPd+[.C9/?r50O?4,7jIe_cZH$2HDbr%A*n'aSs5SN:QT5%*XC!^1_.!i8"28Z%g$E&-T0]1h0/t(I?6Nn<IAKTl96B?C9I?*E?ocVlREG<'lV/9Y<i4Q/J%OE%3oc3J9S<-%D8^;,bON`Mo#/$Fpkp]jn;ZJk%l8h_OGE\jL>b%<TZ5G?gl?4<8U5S'T0+r>-;F4kN``E1?AuBiV``HJbD?$>I#pEm?!NZR_`Mbu%eT;+?(e-8uorLskRl$@k=!7SDOb\8C@DiU$n4jb/NOTFB3F3S@,7qaZN4WAFj7rGfbhrcfTg#tp\.'a_nMC`bDkfLZX@\)B.jK(p%)a5d:)#'3+W_^5heAip]r[2b[N3[J)As8^CoCV1_Vsf+`s5l9/.c42aaP`8_s8+9X#u?&ds40AampT;ggPinkr*Nois*uXT:cdu;%.Dl>NC!7q'h$.eN*^?T`>0m.YmJXf>mQI/,i^ca=((986f5mK\?bt/8hbnY^*`I6*E@5\g:\OP,FP=i1B=#[Q069\VZFR:?fub$!%SNj!^.LtQR5s)?lS7a3nFa:#MLl9H<\W5HFc,Upl=,]*+R$/3W"+YIrWsH'6S'L<UcGun`N'j`p0Rq"o#*g\ln*1]j<CbaFW9tWa%V2DY#@&L6?NQ9.B;$Y2]K?>oC[P$??^U&CBo%q!R$^"a=TQH\jN/'Ij#hsO8XZN4KgGD>#njboEFX\;/eH8j]\N]I6%gkUBVRh3T%(h;)qQa`Y`gEcA_TQ6R'oRDrKXS6VX^>2k\3!%,s'a<mT(e*Ld>$(8K<AD8]f'_&r)iVg:f3fGjh!;.Y0`H#1NcPJDIBTMC?o#@%%O$#dmr:7S*O+:aIlVQcEI&ucO(,QjQMN(,-Hs#3?<,40S`ql=-2<EAj6=tcT_V;Zp!L$RYC<&.JDlMG\eW@Z5?L:8anWoI%jo$a>%1SR4nqOL_BH*BOTRc]YY6ijR^(&_'=>/</E2/N"J>?)'-([#tBL*iQ_+Fq?*NI+AU"NIcIhcZ4P]=QTMh-dT,'g&/9IW^RL8JiR(%>4DmN;H<(h^/nFc@#.t<-@s9MH*<=9JJ`lbW"W(gl<`q1#31-kJWSJ0>2?6m-EorqVIR!DXRA"Y&K't`?<eW]I*4>lP_p*IE?2Tl%NP1l52078cJr17b@HB\mA";kPOie!SK#oNpXXh;D>2IlF.k^BK!ipEiZLBm'"N5A$>JDq+RW3mY3G/!SF\qSWL%Tj/j5u3TdU6"%%>ClkiS'plYV5):%Ym'9iZr@o>W5KiK]=PJJ&gq*N!im`7,)s;:5?luG'Qd#j"BN'\b]VeI>PC2JeE)+W@S3G/)JhSu>PkOdQ$f*'%pSfcp$o6'5E`FU2#?b;->=<@cJi%cr"QX#`n,CcX4s$l@Hm)/@E*J_S%N(;Q!k&%XThd`F+MUu-nsY<G]U<L362dt*5U)'[nh%[2%*H;66M;r\^];dCc(W'2K;0;u.--O'=,j.d(X_0mucc"BT/ieaWFc_lc*r$?5\23sbV%S4fs!aq&eF;<Q+tq!pTl$/]X!1_aj8<o*%c):bqg/!:Kp*u)X9#p31[7b1C$'FC#eeRZD&%4F+dM8/tJ97(WGfS&Z/L5$Ag<^;;jOXrrLVSr\,?,bkFgC#q:^Mm87/i^&=8-'5%)G'_jp5$KnlZCYtLS'c@2X;o[m#1cZhqB-:8Vsmt63*qtO$3'//f\*9pcHYGpf[g9i:s!0:A%Ig:4_<Mi%0a+]L\(GakN=nd6du<%59V'^(rXpc,]P(*A)ND8(uI42=5\qOhV*U<7FZ*?W:ii:n8S.g2:hb<904B$<9/o75W:J1)34pM>>Pf3a+`-'Jo;=15leVdT!E10%OV-SiTUt3nS%1aVCf]BqnCUpREV8:K11d/\dP5N3b5+$3&,iq/*Sqq[02k9tL,N\;?Q&+/OQ6[4HW;-I48ER(Xk]t_W'bp7oKGpW%m*PV:9ojToNO++9`j7`'MBo!\%a"U'#,p93!+u>^[<6Y#JuXKc@$?JhNiWKb0H^/oGf/>Dg&MqtQDPTC$><i0%dA`"#%'h2*Z71'%N,qGG\/lEVCeETM)7(8b+@&A?;!dN(A-"4M4Z!%k@u0f+M>e'Hl2fc*Z?tiMdTfFuM]T`8P7H?uBeQ5Gdm2tk4\e`;O<1W76BQu5%bUABR@R>H$=#lA(@eL*S)OOYo,/.L.!)B6]GC"%ORVtdKBm1[/+T\K2*J1h;f7r*fc$u'go$_I*(Q`]IQ$'Bc5qsK_Tus'Z;e90:%):XaQOrL]+TZTlWgn)[:+nB.ho<*8RXW8>RW%6KT)#PSu<^/oRHu'Xo,'fp`i>o03;PNBP2CbZM7%;nr.QD'gpQd^GZqbHuIL^gJ%N2M2h;\b(uXeYRK^0F/VIMY@r)"_J\i!'$lG.cg.-hnb/fQFDHFZgD5Zbgc=FEhIdJDi65-[lcd@P,2AJC@H2pZPhBniDBH_fPFD%;u3Xt'emjkp;P$850.#@R4nYA6j*AoBrYr"(?l\U_Vfl\m:XC%AsCTf4MjQFm_d1`@,I9G6"q8C<lSo`>r]3N&r!W:Sk^e/d3*L/%:U7BQD^-f*s-;D(F+S#pkF!["4YHJ'L2E$p\!"^3;\,/03-_]D^G6h-pWK1?I.I(%"W-*g0-foT4X1PPeK+Cs+-Eb$^W+"H8QQ]&%=#;,CP@!q:;,H,lIiY.4Q_L.^!tNa2,8KDn*=L&@L@o=C*kKjmJR9?3_%!0+[("I^-Ot`foPSQM`c^hJJ.uknqG`U]7#!)3ih'p'%l$'g'"EF9(Vg@a2;lOkh2p6i[mWV\Po5!IVj26eXc\P&).2e+sd3M,+)T8A,V'73"V,8S>iu2GP(<*8Z\Zmr9%mak7nu*Vf`=tEd%#l$s*D'QK+Dhbtk#Q73^Xc[LkhG1ZFhHSTej\;g+&'rL1T:8M3.@utB9+:tn>r'o4o@$:&R=t</_@bs^QS)ETd$upA7Oj$od;D_b%nM!:0hAee>O*-R?=Y(IB<$;\>.^R(SX1U=K)OC_u&`9p:0KIL9UeMRg;c\=f4hjMJ>)#=Dn"KDOBA3X`*kl82,I/E!l/S[*(>g?D%J#R;KY<TdKp[Ra6DuT_7h:qg&?[hkcZNfCLJMG(^D&d:kR0S[<d#N4TqTE[NV>fp@ri,iOX\;"u:#c]IlMeuZcNLuk:WNGBs68.6%^W@-s$mIZ5E]e^;e8OV$&4"We2jFI,GXr!O6EtXbhUC>_3juU]0K\eIg2$Pcqb0hu2@)_Qd?5eo[Gtm0+3&ep\(^OV]D0VL/o#UH%VaouiOp@jJ"oT6!9YPA-DjR6LF"rV][HN`[)s+2FHs,OFn4TOh1G5P9R#$"GE^u_q350J/Uo7ohb,!(s9D_CmX.=s9pjLW\C&2Tl%rO,;S2N8g0?I?4:K?H@H1f$6YE>Uu@h;IT_kgB%mWUK6c>Y9m&rZ@ciI!GZ#K^lHW0c5HErUQ6$HT`JPqn_5_L[&b90VKAX^kN%s%\u5_#JI0sH^2=S`HoTmln%A)un(Z8Yk#FE&oq.J^=<,6k\E^Q?HiL*98&<946Ba"e0bBfO4$>+[maN(RGJ<"%4*"4['VObeXTHf:%L9KA3p5Nd2%!qj2h)C*rIeip@>DQ?X2^!%b(kiR9%RK<(OtLMl&kCB"X+,QRg+>WO=4WS;:sP#NS.7MBa\31nK*h>7rWG>E1cEfi%Y!7F9h/B-^+92;O590I\0`T'bLF_u0)90-K4#f1&;AC@UbS&)"1?n(B(aW+sTEe./qKdZmWPqrHPG#UI*H:K-,7a,`$j8NJ3<B6B%B,c\&D7os?'>\uqKs2Q^Da#;;"`S$#+aF-e1kc#4I<H%CF[%R!N^[-k.3211!VennFqE)AG4ifh=LF[[rEOpH[h9\^iQ1@'JIo^u%a)^1uqPqlZGeqO&G;B7I#R07LM#":J@4)/Hj*t<^rc7W0m?dR>5/-jj+,?Ihd#T1M8VQ/QEqg`\"[;qJnDij#X1*#^s6tqB?f"&s%T,dj92Z1>Us5BouJCFtk^7IfPh_<8!Hj'eF#Ym18XNh)hqDpQXlDfU.Y@\(mZa@)^>Vq?Sk%JgQ:A^skcl!Wi^]LTH0`gH8%\$hp%p:2LYWI<i!U\S(H0?r)a.Vp<R*eG,dU%"0I`2F:OL0Rk>c?Q;F)8aV(S(#U&=Krb+d8u$_T&7E(B:53<1?J#cT,djlT-<;#chZN!%dj1c//3Y:N5ZgLL3D*:1p5&)J_M'1OJHT.L8d#QD^eL2s<pD#%^bTIT$P9gG#jSg8=+!2!:fPO>F=n73qT*Ta54[12c7kt7"A$bQ%*f0Gf#&X_a8r8=S*i4b"!B!FK_s4%tL1V7t/M>JXknqSphnqgJO*Ji('$CCujJjQHKJ-,/d`-iMU-5?eD:We?T<3/GVeIJs<Qt!d%$H-ku%WPYQR-8l/kV:57TWW<LJki9TM1AMmI&gT^.@CI#0\_G7(^!;L`(G^Q6gH[>W!Ts+(8lh0-&nr()5dVE;P2\[@)N^h_]31G%[cLU2/n_1_P3/11UeZ03M4T?dl*GN0CnqfF>!J#I*[?'4CZf[=<eq!V!/rT[\Cn[t0U>&$7798;oB%5QZo[c'U(%Ie^l)C<>p+Nb%q=SMK`JqNed+bM6*\9Upln(N(,Va@=%0%I*ou'#YpI!XHIt-:f4Fk!fE3TC]lnfA=XjHnOrWF1@cp9JG4M;+2%RfF1e&%<)TkQ.N%5<O_EQdHMM7eW8u*3t6C?Wg$oAq?ubG!fX9//H_Q&$mLb%>fgt!>U`I%dZUeXR(IF*kpqcBLo3/H31,Z#mZaf&d*d.FZ/h&-5W)+%<)-C&>@2`oR@.^+X<dhmeASqP;Lo>dQIbs9K0AUk:qs.+\NT-UC3J3AF!]E_"%H/P;P)gi^kiHMZId<9'"Ahkgj(sc^ELgfR>B)P%',VIA_d#\nVtM5/kk,lZSAE=84N94uNX.%@IGi)3Wli1hV3ID<$%H`$,t>r@a]f4)*b>IZ_D32k=.\Qp*eQhRXKlT".soP!'Jk1r%$Aru"VO<luZMtOK9m?q3G)To<&?plP#Yu1%VGKhk&c15SS.##$ROZ1O.63HH+6jL2+-o&D?kK<A%_$>0-@8FPjB*qU$/U\Q8b0*W%<n#+c3"i;RM@tSKe6XYB[PVGm2d_J2j/@SESB/<k.Z%J258u=q4fEEY\'@AML^E"1J]7Z)ijFPD,8=HnS/FVmTS&ICA1C)b&HS)W%Da@#<$.q4'*DMr7?4.SrZ;^Ph9FM+n.NST&8X=!D-sd2kfI'2oG3qNW5@^J[X[2<5\"^tanUkUIWSm^*=fmn1)`*5j9*a$(7RCi=%'0)YX-j)e6LjWLIZXaI();rC3jA2_Q4S'qR7N5B8p:APg?[QeS_[WRV@Zig*OPkf0XapOB5a#A:W>#tKA,Z7W+,;q;7(#k=XWm:,%-6c6O7"YR"gTMK"[>IXcUfM,YM[jEP4ZXKX@.QXFW$r*U^iYB\XQ:QBes#3gS28>SnF]KE;@9#8MG`,@)45V7gO(5_TF!>eX)d(c%2gCl()e<n$p],.6C-as!W'r-UqWp'"0E0'eLiaAaa99<Yn/bi^N":7@9Q\rjgd^sJ<R8L\Y8\\G=<QQ06K\VMo/m316eLd1`p#5`%g-kTYC"O!BN05AYf&Y"_F"3!gY))O^#,_e#7bF5sUfch)HJZYa]S0].*GQ-^8taHSo:%d38"X"*3nYbeb7g"kNKD%dF2"$a5s.!d%OS/X\mCi9/g"m[?]er%/;n4dOgWQohQd8L2'qH"i#$%@1[!#(>2N3G>)/LWdYfG*LRK$/O=DaAQj#5)aX%JA+]A&D($td,0XEe/a%c9pEKbnlQY5qb_HA;<jO1hOa/Htj,,Vjb_f'E/;n*!p'P.Bsff)0#p+#Ni[HW=SXRlU>;SB:=Jf[B=)f'd)qkMh]n<HW1I)ldoXC%Kb7P0':-_:a"L;i`6^N#Q4':j;K;-1L:hDc9`%(<[>+=O[MB5hZB;GUl)L5:oU[OfMM:bt_qD%DY_10@MX&-c7[m:&2`B&(988c9%G*5OG]/!2A_[`\_#Em:J3$mXtWGj=;Fde-)V#gibb>OU=e.]&ljB?\"PprG01tSXQi:0mJ/'o''/,i5l/MNuP'ISO+NqUF9XHY&t%+3FU`Q9YPZI^6%qZOI3IG69lB=iAL[pa0h0(a;hlP\>^]*uo:QJV%NKeFacK2:OdNkkVe-G_YPU)2L,n"UHQo"ct^\ZmV"kOE`*6%;[9Zt8EGB!dL;m>N"DUO:!8Q23&n`1(p`!*2NZJ,6^!,Kgm1r<geb==N!NH3BZdT&^euX5#BCu@6"1Q<+JK.KJTl%AdIFs=a5IQE%9ECn(GZm*-X31iI6[rN7<+#l;OBQ%,J?Tr6'.?P.[MC06KrMj=aQPaZC'BNGePW`7<`JCFWk`#*fEjX>!]u!-&rip,3PYtQ\6@Wd%8sbkM$]HR!inG%\(m?Tt^4Jo6`O`)=(!]^#G/W!GRi/pb/D0rS$S-l6JfR=.Xh#K_#nQ5<+:Mih96>jh9PH+(^;A_,'H$>I:-aE5%\\M8HP@6l<.nj!\=]+r4+AFPC-,+t5i*7<8(3"+#LJ@\n]8`+,Hj.hd[XO(:OShS$:#Tl(n*B0U*B6,]KJc)0>B1t"<o=tF8#"?F%3_`:W'Y6b=4#`mLCe@1;ed@=VR?uP5*]0T<*Eti#Eb+&OX*s*t-)DoremUVk/@peB'pqV=,J$o`JIq__]#I^k,GBHS="k=7'%Rc.%<ZQ:fDMbNY&TY\=Wn4L6W=ZMP[!oAd+tS\,6q`6<Yga.QTFeQWJ^$<*$=PI;JIule=KpqLX]Zf`mBoW(&6/uDb5qn=!F]C>d?_Zs%#/8n_bSA,EXp2,KfHTr^@;P3^lmS?8idM9""d<=\qPI()g<M^>.%BAEb8&0OOZ3u".[2NE6?\k&ZYmu[PYDh]'TKD@+X;&>nk;_f%@p5OAJoUuKN@8!q8B_tmALe<B6S)%l<C+]h5>\%iTd5j'AJ=k8R)1;:Kjl,[;7MXlWNQ.e,dO0r>/coL/!L2fE\(XMZ?:Ws&e$/r%V?khH$^:g6m-L?@(?R-D1nlPr!.p],.%;@Z]Y08$2GFmH\qu#W[kVr`Z;n*Pm#+[g$XPlgE=-8uIpkk#$?VS:Z9m5,@DqD\Yo/0,%ieXkdWN^K(Z#udRZ5RkEX`"q(WA'X/mRreh:]rK_-k!0hE#:Er/QIH3DMbZA8=iPS*G+h1RG@tfJmYRg]L:H>.Elm!fj(G62>E3;%GpU8C0VVhY"M"lTJLO.-f)"sCQ<u-Ve):OBKiN<I/s*J;Z%F@.Jj;*E"gZ"^`4/(`Jg&'*>QmK:E=6$*;?h:f&.%\UEL"B7:JiP9%>cO\Oqrj!WcP!q%6Qg@*O*^C)_TG',rO_pM5rsR3F(1Q/\kB%A/OlPII8H.PigN!!atoit$V,lW'SajH"#1CW,bR,t1/Zkkf`]'%%Yc%O.UW["afYBnpRUanI,fILEG!<.'4h9/2!\E0]_NmmDUb\?gH*DQD&e_GD=L,1X9SJ]bo^#2VZ)q@]dt>%Wd#sNJW2",G"9MmD%;C!$nM+pb`?5hI5?o.1IfEUD,K=VeX[0pqWOr(99J'E2I#/B<^A7ngBB@ADIKTqiP'SQP':3QE8*8B7lLi`joRL^#2!?i@;d?#E*%iOnSG6_k7WeHti`Nr7*("o0MJd@CCcEYb:h$7```T`F>X..7mQ5ENSR.Bk#)Z/hB^5pXsS#\uuO6KFRQ\U4[0kR!&u9Y]u$MUoKb%P+J'P%,kk4REQA@J_J;FEFX&kjALPA-CN6o-LlKeo%cNN7b*Y]Enisa[]lMQZ8B$mFnk=GV'*j$_N!$eirGA?*TO0%8uMZ3/30dc%$\Hlue+XA_k7$r5=<1q[VlHj1qEkGZa6t/+KSB/..]ir2T,aLhLim?Rp,3Z,<?.ANFYGo2Jt8uuXN%XPe%"[^=@:<@du-cB)MfOL%HG`O2"<U6PUKW1TbK<MM7:(prUUG`J=TJ-D*"L.LPZ=>(!fuUh=*=qOmN%d_fA@b<bpJV9Tt14sjRqQmbWun+-ca#QHOQZKGiLE-%Z=\*JfLI<H/c[?CV91`NW.BQnM<U,Rj&@`c_FOErn+B@*+jrlOB\lIL2.`:ojG>SDCcm%!HGPJkg.X"<ME`XGK-SXL;!ZLm$oqt,%\M(7E'UK1c[`ZT8ML,,0nn3JI_(4a8!G]H^kC"RKgr0c5p[N7@^JU8RM0<C+4M)+4T#cTjKrASj@mQS=Xq01DVe!nLl`9)/Tg&q6%^,WR2U/VI.7,O?<S]N2?4Jdk]bIf-/W5;MF>M'^]LZH!d-m+Z=$cj\.2%NaPqR+grVTMRl[)l6++OVI>e`u\!EE,^,<IGtp*Y^^L%b;dZ;e2Bk=(0JssdN?9=Qc0(9jT)5.q"Pi@KWot/!>B<^W/KU!Au<!J:J2`8#h^E\WrjAt'1pqTORYRVYs>#tGbiGakTDY09&$rQ%$Rud,D?8E5?kVpI1KDGi[Y7Cp'g,?i(';&beL8LVFG6%jih[%Z?D/@me:OJVjAuo]pT/B=Ee6UE3_.J"0To/?'K2/qR+f"D#rb_H%Oa@::;Ng=$`D(nA-:B7T-1Rc9L'B+F6*MgY7KR$Q1Go>u)eDnP#%D$R;.=Pd`GJ1>&dQrZp.h;Xgu@ElUCJQ!Jn5@9QBe;4NoM9&%3JM4=m#2Nl%Y?,\@j_DB;".&IP#N^H_bI*$!=ZIr26D3a_Q0n'bq*k>`M(Rj.rqQ9_^SIh]N,lcp57k]8/?s&2=M<g"j$a58*StI%`cKLEY%RiJGj;Ytru7:m**WLV2/X93'7<>q/X+,l\S92S,\GqC5<qf.Gi,rGLFCRVe<tgi;JKFVkZF4feK*ef>Dc:AiECVs#DU25%>DR_r*?>LYJHS;<0T5,.N`K]E";99rQY=pHX&?<,4E9N[hLL_bc2kUfA?E.^'rPa]O^u2CcrcX]3@nCmpFHIN;P9]@OJ`rkaqc!$%j?rHifun%ZH,Rt,#Xj:2?#%OR/L-(f1MVhSO<?ra-o@fuot?(7Jl">0878I@M8M2)kYL?aQ6:(YQmLJ9'@K.1R.kJQ$&\R+..9SI%<:Hhpqc^D9&<CA@(CGNKpFPrUC5)sRT-JEN$F+4k3JOX5SqRc:E.l`&e5^](>7hBDV+KIn'=qQp0bQ,H8u[oI:^-*l<h:1$((2Gh%3UQr*i6X1$M1>XI-Sc/kd@_JRW1^37RIa=Vn.lL,+BI&tm$J&mk!EE18V/)!a%k@,7?LcWQ(&I_aA>SuB_a9P6CmO7<f<,!@:n]Q%&X"sGA%Q]2c7=e-?V;BR7g!FJ+Gh7)"5,8!.Z]3YLr/_PSL7!t@6Fg.p#LA=IM,(5!#L]ZV8O(U!rJu`NR/BmZW9(+[EV[`'qLGb%!+T5p9:B5;:LpVM^'2nL\DtO"^k&[KZ=0SSmM?oh]igC4CUm:n1tYPNaq=d=*Vj9N9EV\m+P/rGBI5LpJ<1N>PmLNr-p/3`)o;ad%$6XsJ-`dMeR24:oTfaQeN^k4p7r(/,=Kj/A)M"dj"5l-0"B[J_*74.-C_d@*--O+-3+cn41)#+e=$GB;_IY8tZ)"fZ)^5AL,8gKP%UaTY+Y9H>A6&3B[(YJ#2e_-$(Tr^aYR7lKM0N&XjgcA#:#[C#gJ8G0Ld;i\i;IH.hNgn$4?M=kcLbp\<B:<*f;[Pd$aV'[>Ur)\c%A*I@*d)eV_DIK0f9tMAGA5ognhLZc#]&i%=\]HEoJ:/gGXImf()^24'gHo17-K1eHQGB(fQ3IkbjFgd^=YcC1p1MboMEMX[GKtfa%;"=WGNd"38Qp!GG33n17G'65@:#M=k1W9>E?#6(+5E.Du3:UMZem0`\<YUOZ_[7Z9#RV>.MK4K(^$Vl=8NNWR7Bj?jf^F[>UGP\6%*5+\mqZMGF$!%-GC`qJ+aM]$)TaLoj1H'/@kner^+p[:*ZqI+FnK\.b*PM;k!Q!%!LM$n>aNSZ[A=-1t.(_>-2@G62iYaOPMqSWm%G03dY$,J#:!O-IpO?&?L:IRIL,&?ae,Sfnr7N\%;)8ek>D.%#;Ob?UbF-,0M5RD04+t@&HCjs\JHm+nfZ==FLD[*lW9iN6X7b[i_%1CD^AQ-P`X/1:if<s8)c/RR_&Til%NX;6&4KID!HPU8anQ,GZ*)`"a([/r@g)iU\&M4h;"<Ct#j&C=LWl^+"n1fH4;[@P,bc?gJ+%$L3/dcCe*8OhE?8-2pm>WS%%s0QG0%`Cu@DAK!,1,J[M(;WO*nF.EeO/"^Y8]oLorjfl6Z"tt":h`5(gSdE0u"GQ=WkfKPFoF(!F%M[9])W$X9Ll=Rg7*MQ#HA/;p%3A,PV/B&0EQ48;K,_PPP#)K0NV:LgMn"3tsR_Hq\F[Rl1<<4CYCh,b?4Aqo?Jls4N\VO/lTA>+h%ZOeZ:l0)$:+^nQ#TdjLm,l-=8W!"6oTt`I+*V"OPhhF$WnW^!e-peG51FtAT3ENGfcHNr-JHLZKhN+3mA.PILhf&7;DuP/4anHNP%c/Ij6"DB8&0r(?AQu#!E@sG>$'Zd]W.O`mZ;gNB'&'hTuXNb'6K6r7g]PmJFde33[PUC*qUPcR<Wd3O%Jr?f6Q5M^T7=CHE,_On@%J*c=m2uA'<c]Tb"=>gUJ.=+\9'\Q;38HqVhF@m2U.LRf\00a.FcE33^H@<M'3Od%8Z+`DAi:i#(B7da0@^H1m&D.k&P5uG@cc/47%H\jG/'^PWrO+47u"%a)@l=0<98RsW3Cd8#=5h5`fX#83&AuEuL3BOY82Q-5c33A8`!ijQ3m4l=]I`q%oS9qr_[pEtcP!rlSNXN)<%dQRdBD3O&=51U.]mq-Gs+O'0=.<tg3g=kk,m[F:%q-Z1lhaae#PhGEr\M-S[^cX1_jtI#P(*4hUE-apuVZ9l1iFelFgOj)E2JG_u%lkgYA,7`$F:jBrB"mQD.Yu#QeO\-6'm19;^CGfj=%T:Pbc$mjSX\)b0&kbPB7)Ojt*B7sUK)@U609?6eO$g!M+Se2B3=HKL%++#P%m8)5*7,:1A#'lYSAaiEjaIDIu*:Z#!eEl2rm;`c=$)EtoO&c[aBFX&_8hd.irm1qI8mZLo#fcr^.eG[Yrha[4n/fB^KM!guA#5b#%"ER.L-.V,<@<#60a@YT8'pq"79EI[+?'H!ISSN+kJKf,V^+uNFDaB0?IuTKUFYWk-^Es<Hqln\m$OZj#TTH8IP/&pDe"['WF*p$*%"NF;XC3-R%_%9*2f-;a#+HbQb.509gk%D!b\njXRqfIShDJ^o>:J[fE+R-(#0d:QmB"!T+Cmh<Dk.0Rq:q@(Rk-."&'m0kc[:0lf%W]O7UUrX,KBNLo2a7\.D;bK^b2bN-rG^2E&/L7[=TQ%>6ig_W]NgB`%#ZN+N8#"p0Jk=<lJLFT>Ui8:.i,VRjB*M%bM)RofhG4H'%8n@?5]LL'ucM!+W<38NHK!A5O9ju4'GbATP"n8LC3LFJG(3eDr\Y].`91bs,Q<\VNn-?;s?!B+h2d;b-]<qc'X0o@@>:?_2/R+%=%M1OF6\r#+0HXLWPG8Fe*l.4%*g*@O0N<34o$dB8.X6s'4\g382-'G)<ai>#dc:SuV0,]?f#!#=85m0h-B@SnB`F&<[4*b$P+#Q6!%aW^4`nLdVX+"_fq!D=f`OYsAC"Z!*1R;-Mq$)OY;L]W,/k<H&`N`1+63[,13lQ"$f>(LaXqG5rSf:BGl.](ZhjSYF'./Fcf^_Y`7%gbpW)AL,(UEB,Z*`hQ=o;.(i$G6Br4OH:0s%W2TIBU8?*a#Hg?Lon82=<*58/E]63E$,aI7iN-9)VC*1'rg:A5a__7%T7.P^<4YK%5Z/Y>!9,1n#C3UUJI1OtPu"UuOZ<EHc@^4hp2gF1k2$O?!/^=.X9q)l#/2rf0IM/JE:Q\qnao.s',Abb=:q='6(F]U[Ik6cQ=<L%%R9Qd^!R`/+Tk17k<%%d-=9R5f)1[O@dXcp)<0q8+k,i0kbX@J""LNjc.%e;.;n)-uJNoKPRED96F(hOF7L-\7JYaV8!%gtuVr=</%BTc7Q%cU`)Bo59-,n.V:=W5u%:n5c+'sOY""j.l>HC(J<9=3%l)-#OYJO8K3q6"P]kG$]t</9Q4ZsGgj%mWM:=<3kooLHGm95^*s%bMc:X>[c4IE`+tqXc&D$j)J@0.oiO6(:9`>(.d@D04r.h8h]Ae(/9GB[4!S*5`N#N=Kiai5,=pLHI%+e;5dXT1GdW0>.4*/CJF1a%Y3*7L[D$[='GkU0E[7Od.F:=;[9hj)1l:`S)bUbf065T.[hQ3338]T`.:Ure57gR!DFE&78ta6[E4;Woe,`qf'm3Dk;j3M.6Vp%m%4Q[oo>DghDg#H6#?O9A'5g@"W\?e6cY`m#+Qsq(Oh*#>k5QPAlZtS_N%S1SNQn7ePN#]M!"3'[)T'^!<L8d&o]8j_2(LSpV9L9lK%c](;JZ9A%.neij7RRNC&-&Mnfo+8G6X)]bB:9n=dGj8tlHNc;Aq=TRk&.\)Eed**B#lrlgoKgPFM[GR(Si@LZOj1rMWj)Xm/_tTI%Gfm;CRAeq^"I$dSW5252Q#ur&"rk9`6/,B3*n@'0euts#V@jm/6?Q&#QF$a>q+oc)junt?qhsp4*F,I7"S=+m2J'=i&hlbcW7f%@%ZmdP=$ZZ>S)(#a^]t!',T.L5rdkuYe^3ZE"\h\pug,MhD%+M&_?;25`&bD/L>mdO..m(u:dBg62ng9#KYqFaS.u_SC^"'j'+ao6"%BGD84X=Gei!/+YY^ZR(oR^>>;D+Js"('7hH?\Df9TI+O`g^,.b787>Z1)!]G?;fAbm=Z=^A2o^dPADW]=PSeHK0&FA?F9)MfU9_Z%m)0?t/<]Wd07p];aurR+CB/M^#AE5dJeqmRjWLI["4/$2!"1a*i"O7Xl[0XX'h-@34<C@B#JXq69/O2B*5KeWf2>*#HKJ_lM*d@1%fjt/,3CeY49E`&7@,7ZWgd9Kq8IO!rlpB,u)ki1.R;3?e-a@SN/HH>h&L&AcZ\T/Ei[0?@jEW2A!d'<;'Ops2mD?#\(%jBc])[i$%SSfTcM^,o.j9,))F;<%&9[$.Rq?#<5;7H9-5`D5^,LF4iee-&3"[Gq;g?0]b.84TY!$%ms%^QMX&;)(eIg"b7S[a=3#%\Pp<P6nN%(^g>bl?G[_"AtR>/5Zej,tf86es95r28X+$6LGH0)Zb:s`+W?Z7hBK?Cp/L>N%PfO!-4r(hm<\_iVDR>:Qc5D[dC)",9%l3m1'-Z%WJl!%Hl83Zm=Zuui:/o_Lti8JJdB%^$.D@)o`u7s*PkF3E=SA62VQDjS0ILF=4S4O?Si."7I?%$!u6kg:p;\_2(*:+]XX[sgJT`E%i=rXR_h9?/r+ONqE>H#?J&,2u5-R;[F]<iV1N&^.k%0FllQ+=T!khr0EYr5"me_H3ik#CRi<A-#;]3Ln]m*6o_CZVk-orMH1#$Fu%ed-*_Qj->)IABpVnc1!?\!/k.6Z"1OYiplb74s?JA1EbA`V0g6HJe&G^-^/=7$gX_Q:tToYk?IQ>b7`0Z0/W_#^OH9mkhX*S1p)-%86dqRJ]NBZ;YM5iNeqS0il!?>E$E%P<"fU5A94J<!<$Kn$p;jqg"(AhBb`5:'lBf,K,,c<:^5f-b&hGHUfIWQ;CsK['N*.JJ.lL_%I1L$B!BKg26.?GfQSD'_IFrg>AqN)&*6!jpERjrSZ2of3A4^i9NV)Ac$>r3J3I2u;;G:+R-rfOSe$f)DbESA?`ZQ#;+JCDL#)C-"%s/kF5l?Z"W(EuuO&KW=nLp5/+),Mm>-/YGWV]uok_t:iI/?RPIeU=/oGTfhOgB(DM>S^$Zec=/<)8f[0*N5_`eH(TP'F)hfG+^.a%RgGp8.9@2\oi@q3Wo5c"Jb-h$!<mb@FQa0%+I.-@%mM/7gbh8+M4_5],EgSnOmE:[,W<"s!@jrJ;W@;8?n7s#=,VXJ'g)$Q\R$N]%>nh>a-5k8'&18TUcX:k3.nm]LF68H(o.0pq=E]`LUno+K"CtGc*Frf'ok3GkoMHfB-iq;,;e61UqZKGdIZXtf!-D(5hiKf'(Z`d_%TE^KD-QRl;auV]g$T\QIQOm)L?X]$U)riZa_TKDi<?bh'6mjr(NeK"M6^33al4a@bV>tY[\EG,J4&P?hCfUIS@M=)-,AWn%[Q&P*%l\6X7F-4#5RVS1+Co(uOKQE)C-S-CJ+0.-h-'0Un1Ds$mYpB*Mariqe@R_PtGAib_kN3FMD72^Tn`'O><$2TaTA*M-_fM,$TIb>B%1<"s_Da"nIC,NcWCu?n35"gkD.K5E<1J;j#OWYZr:-@eLQ9qq:Bb$7l6cI=o&o:`DJaFEYJ5esE1Pg]Ac0$o;L]g/6\7/cS&.(sW%o;5S/,(\41*J'2;,bW,X\24\XTR\?S=,K?j+OJAg`>g(1*Q^Dt#ad-^36`QG4=@BP1P;@`Xjmg]?mp>[$j+Eu9@g$R/-.7&_BIk7%3T3_S#ad-,7l6!o=e4!V+VN:ITU[LV+TRJ;_O<glORo7dLB%b@LapXmOsJ@e%RG@$_n[J],XI`]?*K-L-H^^5/0[BJa<V"90oJTE%aq74670'hS]#?3E6$tr=",EiRO[_.4LamTt)2349&u<a]>*K*-MMgWRNC?N?o1sF`BkF*A(rS6igV.82'jQnA7E,`[Pq7$Y1Pgq-%NKkmrObsrme2[Y"3m1A=NC*[WcU8^4"FNGbS'W,VJ5R&cE<l\*B&#?KJ2ss@EsMd:(@3"BdVE*.$O2_c'AXA9.A"hpdgQ;T+:ojM%$j+5/1TpKTcDt&dKg/7mpm1K656.'\"Zq4$S7$-q%tF_A2bRcpLb6QS3eJQ^'#BVH"J?m$<m;a">'X?o(dsOC$I'\kT%Y5^$mK+'%WI[8Z%-7mqkZ5jMY1N^r`Np@?;P\JSYbbQB"K[2SG!]@hQofT,h=k\K'5/b&6pKWYCOS8^MZkr'Dr$.g(X''?n-,#-,f\-Q@I/[2%N"CI1olcC_:BakfnsickE"q'=I-iO'4'@T@J['@u;X[3Bh)S'g;IJD.nOuhW+RrlA"I'h=$ks-qqQOWOS(h(gg4;?dH%#e.?\'L4%]YDWf*Q`;'%&@e<-`FJ"%U,d2M0Z]r?h[fY@1q62//1pJlb`ejR\g7g$CCa7XYQs].5Nsf,V_;<S"segS"W^Pg4;?fl!OP+?\.;i%;>%5$ku\CRJ^eW<Lu*<B"mL.m2/fs:N!oJK4XVjuXDi1_o.g>#pl^C99c,*n_d`-:g`=tGXV_=CY8Z%/Ifk)5!&qRA05EX7%npgU%r=Q&Hs'4+?C22UCcPTGhjgX4m<EM85H's3?8PDNV:]U23J[Y?=Y;UliC)\Ik8GB-8D=KR#pBtq-D#LZJ"n]U[G0qD*g@iim]rn6p%mIlJj9D:VSm&?Pi55#[^Gp$;JPJ6$E!k)WsE/;XH=It#UlLB8gWUAH'RNo4!=gSe1lOc7l&;nn4$*ue!V=QX4UYZ4L='cT?M@XmR%X7Io/X6X&nb"l``$[c&?07Y1CH9!iTK9OR.JI%gNe"+:mGgIZ<TT0<`@3mrYS:O!(el#1P!*X18ERJ*^:;E"mBM3PX[032&`K=Sl%%U2E)Qm$h=%dLAPSl+3B+cl!I0JO`\"V?&`mI:[n>lQ_-'"ig&.4aScF1GBRMSV2IXj"%%+'&k4*ZqQl5V$_?r)?f9#tsN"Tb[cd%f>Ud>CB3?.ap=l-p!!!M>\P61c`kItAN[C6rW<i:iWs4ej.D2]WOFZ[L>TgLnVnS+laS>B#d74QZN@l&I2/$FMq^:t_4_6pd[:e'%Wl((:U6;U*!1RVp^m.H4-06ht*9h>4G_:SY.nFZtShkrjJ9dfPYophondj!#-#G$P=3K[Bnnn>qk^DY>Hb7o3^-r=+m2@BKCC*s5%d!$I^?SB3dMYC$cGU>G2JWFTpCKO_tD^fCa6pOr`p11h),f<"[6lCMM_H.FnC09!_S6>n'(>G;2BTKP4A7"%Bl$M+<<r-hHm'"QZ%AnN?VO_N;!D+Zhl@=d]*2r^Ia;;5>4'NA]trsVDN;s>)Xm[ONA^/<'g<'+Lqdh$048"7!Z%33p27,Z:eNItAgJn"pS*E]<Z5.7ld%F9g>H=PX>!$N6+:_'Fk#0O!ojl&]DCi4G@EjC>!e2MB%mU1]6B.p;dX/YZN#@!\*5o(_](p5IrrT_tpsH.HAA7&d4mJs2D,"*mj3%q3)H;*B97R7-6qR@!nVPaOCR]6QJD"L4Q>?'b(l7(5oK3.2iEF8K(MA%?1J1+Bm"Bp,GRt0U,t8ZO[(5c7`RJJ\aPoNscdSMFC+u%U`^LW^iBAHWX`F[287FoRH[^Lmg_f_#!N(1o.uZl#.3CdZu@EEH'GZ(%U0BA!ru7pN/PM!&V-Q;%2\X?X4YX03B+.]cudDc<XMCu%S8^YE@;)0pV]-=GZQpAX]g:%hh[6Ei?Vu?uYK1ka<SJX-K:uBGH4>cuN\++9h]9o-6Tb"BfaCbr6`.VNgTfq',tAqPm7JKoM*Ou-%$bk+:#,8ma+2sYdR>Y/;"Sb+Idg?J&esj-C$<cP6>GtkCGtb><Y8?LS'?djh'NBblS<;.N9$3=sNf&q;+bI]sk8-sCe,l6CY_&OA%06CMK0AZ`=\"C'^kpPgpT,iO+D1bHkra]5;R"u5)@3;SnrB!b->X>*ZUW\sqYlg:hrH`"55^'23_5=VCj@B>.Nm?/7;B)W(fU%"7%#Z+)CG0Njn%E;iCgHe+B?o]7/QEYp)/AQQO40#(XF!n0#qgJeYJ/OVQ_#Tjb8.Q^%"P,QKAL[5f-4.KuPSPW,Ot0(*k.9mW`6tQ`%q6O,n^IlUD.j_rH/,<tb4TB`X,:NBB<F*Ds;J!^i=d>G6m0%Ue:11Qu"DQUcYQ;1S8ElG2?k)P-r:P,YI2-cE1c&6oI6]R&0JfBN%YB70^AjK[^Fr5`1Nbdij"p$(nUkA)l/T-`goN\X&6n9X1iSDiljigKJAA#Eb1F8N7+Ome/ZSF=ifV&['"!135dV$$Ei,O[V@nm^=%d"0HaOJ]6qgM@*;8']ekJ9^5>_Ti-g/(N(;SH2LmS7PfjO'?/Q_TjjDANKu`DL%'iA&l?3Cpu3b1q!S4O),H6;#ScBaE+jJ1D#dX%ji,!dUrqiD#GF*$h+Z4Er1;)MURbh*Y@0!(Xko,SAnbZBgr5OM8"4fTo.$%1"thJ:Wbj[Eb[$*A5kp!T)C\i.G[/=F?a9EW[=;P.%=rIgD6ZYI6PbCo7S"ck.csS0Ig,!'g<cN\Ah9\uaD8FR1-1rOl]pYGDRPC+ABkX`HV%+F[K4eFo!/D<9>;#V))BCr`&Z'#OO:rut%T/WL1O<jp=BTSI*[R6ebJBif+o;Y8f+GB'X"p#)MWEqmeTB1,=*OCn'/;.nV-u>B2NcY</2'h_+Qe79,QE:KZTAFILe,*c%j'o0I%5s.!FD&a4*N*$f<4GK^9Z.C$RPE81<U/RZ1?I@t7jtK7]/52eU?t9q?+Ju<B8c_urMI+J;McEu<QPk+g""-L?D2K'ub7I+KOCKZ;%qFIqd==L4&UC),.2%offN,QCB0\a,@9`<8A.;XZ7Y\dY].nX;=?ppCC`3J<Ce+]Eseo$Ls!M!.IWt(tY2Q4qWM*\/E@-%&,.I'/Q%GEhH[D1.Vp-d!h\+Ia9(\P3LeGQIno!/"FaFCNtF@`@Rsa=7h7Vuh;p;N3T8imf65.kn'+#,=T)?bi?cNZr65$`9.'YaNp#`]5]K%J#jA@7'Gk*@;5dKZ8hMbiB2D3Z@80me-QKsWIuT+-QVEZE\JE]Hm+d`Lr&61!>sYJX,;&(jTIUuBX?-*>G6#_&LdQJJ8\Sai2eim%2G3rfRP"HM!b+l4ks3$l\)<HMqrau-cmKD6([V;c&3&TaR9?u2W;R#*.PNQ<0U)X(-=XlH`0\=@fTm=%^knu)8Z-FGEo^I1[X"RJ%+5JhP5T>]?j(?-XPB'S5>q\+FTVg%*Y:m51Pa1X2Ct_)N=5,pu[d@Q,gtr#];t((a8_GqmBS/i7T=Ab0aVoQ3q4n`t*R,rN?l@M$%b`@Pfh=QhR/21Ya"Ht`<0PdU32t*%=AeXO0f(a=F^r'3C0Pt$6d^Bm'"3d<P=E+WEKB)R?=qgM9+fO#VeWuki2D%4/gCb4lF+)DV%RZQkQ.Iuh;Ur;ua?1<+qdMX!clM5EX+Dnhij4FQOX3LeoR5>@jbT_gP:SYs/*+.DYl9pleIT02"Tm19q\Mhd'p<=qn!7"\l5T\Mu%h]`QPmM`NU$l%X,nfg"YF<3QiUnPRo"lF^V'\TF8JHg8V%R_0D\jEt4@g4Od[4f2o[GP6t\B7=fU7fulHr41^.Y3Dk\#\oOg;^;m%k<d54F;Xe`@d(+cQS_o,PqNQN%)/;1f&IgQ"HFla`(5,%q5U2=XGH7)o"s*=!Fe,fD<E(6UUch9m"a3q+I[1K5Q^1`&jDf8Ne&S6%V5n**Jfp?dAoVh\H3O^gkocB<4+kd_Qk2Hh9"lkn#$kYS!'O#R\((LB:;27<EWQpq7gBA]a\C;/787jO_+14`.r_@:%:1YB2I]kh%,W[Y!-3`$[G7Tt%[dt&029Qp'!3Gl#IFBqGoa2[[(=0Q%!\:Q9^%/CK\[9<n6H`nZABuS8f9X5#ettfUO+WgS.(CCpdW$>b[gu])%;ta"IU7mmfG2u$75$?'a$G;I(T2Cp)dTZ[FIB`#B`iQoEN-fEd:HpDG>1?HMa#80=1t4YTJ-YK)C\=AQOl0Zgfi-uSpB:;icbO;D%[jK,&*33rG+:51IIR"lNh.q!Y[<cqI37PcsgnP([%=Wsie/sijh'uuUVH>2H(d94`;2Bo-._7B#K`hF\'L*3\-u_P91]q10NmAMB%1_=He#U<efWF8>!:]*%Nb[@B6]&M2k'Z&(c4*Au37=oj-(1@;j5.1U<eeAUp9FK^OJ=6uX@,Y6jqoENL`rg98.A.(LNF?>OcC?qF%bro94oAXT*#WT8P+Y5VN!:5XQVCNqrj`e,KZ@n@p+kM?#14Vf4aZYj"M`C##=r80n+un[2-[,kI[j&he1^6\o4#Y%b@.V#BnVXJ:%e&B/Y&segHQs/@*&i,ZngemWU#:n1Z\"Y*>`[rdo:WpYd.4(uGQ=67e0uhS+O;CP_jD#WUl!8/Y0'<a1[0CKo"Zc*bJ9G3#CXu3B%#GRK^-.Ei,m^56i[KEJIM;VYk)LtP7;UA!FO`]=-18sV2hNU<Yb=sE_g0Wnc1kT,5-nSAq\(e9sb<j<.l]RQf3d;3^j>;lC7*.JF%GAHD7cl&<jJ-SAQbUhNRGPPnM?"`5j2&H4q!,FkJc->@U%3>YC]E;<j1H'K,RTa%/Q@1f=aRre/!C+6dj1jka6lNLeS(NS1ADQIl%&3(u58;NSUfE/q?keH$C\4,a@';7ZMqecXckcT,)Q\(E.Vc5:T\&gpqX&C0R%O]%:'QTE:g6jgicW,eg:h9pJOo3_%MC#5/3Y8Ba%-*&e@64FodkrBm%b..kie[h_b.SP4D"Ag.#cWnmDVuo6[POh/WfdnH$<A&s"8p8:o1HU-fFiu<K=7G3RB7U4;*c_Z`KAs1>?6G',%Z$BZ-Jbq1$Dlu*dXladP`H%!rm[?sZ!HYJFbe)4M]R=<g8)FG`<+UpL=Q#su$6R6=P9npt!2aJE@(PE1b:V5Zch#O0,]M-'q?+2s%U.6dVMD[S6A'PRM/Wk#d@s>/(F!kelR@X;a[26;1m2GTi:iqQ7COA@+;a5/PeVZK@E^(qPaA:0H+_E+C=i)7M8E?ME$V=_2gpi=2%OZ3W<PREkFgC^O[qHIIgbZkGLF,)tr^KPn8g09%5IF5$s1R'#U^3D2NSj<d,)NUC]R:jAd#/=Jp3JH_*W!Y!@67Z[.dCg`g,d-mJ%%3Ag]gQ2NpG/3s6OM<J@0psW_nB*q94(*<pKZ,`r\[`D0bt'!E=JCCtiUP);T;NlVGq*99]0u#0-8ZG*#8(tW):1Cu9@.s<b/;E6%cs'O('I^]TQb:UkE/P.>6Z=cC?]M=BGB\k=BD#S^P&`NbCoH4F/0KbYYp4.\ppN>)7GM!kUjh3&CFGQ]>D7QK.bS)UTQi[>Z%)d3%(brf'EA?'nh'%0+CEMf9V.Q^J%WP#6Bbo,>V**fS==Z"F*&710g6(JF;o(3PF?!$eW3#4g#,cXogVgKL!U*+,SER0Z##:QF$`Ca2%6999?5gF#K6#%qN0MqSjp%qOL8#*d&6lO8Ga$R(rjag"kY73'`EhYoAcOGh/Z@qs<o[YNF$qW'B#Wq/EK<#$oa9%&3T]schr0'el%VMQH5is/pI37:+1:qhp+G6"H1j\j\&$5`[7(KL\$C3_4.[5DuU>r/aC<:,B>Ic22eQr*9u]+[b<_E)!98*@f)*&,U$212Jo:-`$Z%D((o3%#M!HI3IMo3,Njimt4GSb?H%4;]ck#`R3)B6C+Q(98RrpZ>BdRi`W,g(jpVg%RfZN>=F&.2+h(*P.r%=:UDba3M6Lmp?h'c%9HcalCjEX<9W*p!R#24OcoR2qjQOF&YP^F@Q8oMMXhtRR'G$(dk#p!W`DCUW#**#q<7d"X5"]3-@gmoE0:eA9_>g.@G?rY_2R5`C%JF?<a-GheuUi6Q^pFiT6T$uLQD26nfl'[p+TM'*ZD&0)n.JqanIs,G,Q,*Cm=0a)MZ?us]E`El52Lpc[,'2kgX;l"V-P<QFpS2.`%cfgcBPb.AqipO1TiWm2M(ng?_%)='fUjdLXMGppl4sbNOY<()nU/KFIk@bY:&N2EA.ebZNK0o5aF%3t'VasP/C<1\`RG''/pN$q2%s6\?+@K%%e*f309Os9gTi^Th?$&3.pT`N/$BQeS7_Mt>7M77^Nq/H#%&_0hbad`S;/5S]jQ"=feSD2$1*G`qDf8A\hfU.2@$$bc\%QC7'UisLMgL+AQVe*k<m9Im=Q7.\U6\nC-gM5^E3#-?]F<3BcXQQ6BEO,cFf('S'^TjTEoI^h_gG\/>AEu`MK?Je;8$q^1%hhcUO%78MQVDZ?j-WKI1.]fgF09c:*f'$]=.RjV_T'&R9t>k-I(:jkjQjss2oN.-Utc*MqN55=dH5Hs,5=5+Q'Bj^AW7-JXe^c(X:jH^RT%&GtAUGs^SCgUE.5p]`%ujEPd]8[I8]`p!_a'=83kPF*bRN^I)h^(=oA&4q6s[sT0&7g:fUm&hdJ<+)*^oBXdV3TM_CJgO]Y;_-=I%'b^t#"gtIiK[.1h<bCWreV0U$j.]_i:OI>n1VV^g*YBcS9/(:?#]V&N[_9<33_NB&ka%5(1hVWYM."sq4T3RElYk%3r7%AnPt@=*%4,a@)KE)D-7L!9nA4%te5",$qablQnUdHEj<Gs);$`\s74qp,,2quVmhQ$""q+OfnW<B1p1dIa]e5E/_^d'1tS%S%1em$E!c)\t#%9"C:J0Q/MYFrdES:",QXBk[XX]hj-#*eFDYBjtmGXd26.Ra@A%&g[^m=dmeU9lb>uNP!LHRZ\Mf3WXS"M8bPE"/b7Y<BGBsIDaX>%8$WHW`S84[+Z.-":28#mED'e4ndHStbO1Q=[J=k/P7^<TpSE-=Wk/e:<3C>Vc5_bbL]F,)HgC=t(2U?Z,S4joo"MA0C_"T59lui\%\.'o!T%W3jT'qfT,pf]6H)>(C_$9R<2dJV=1.0c[(5bB.i`+<a^!KKq.c?"J,)i&*3hfF0\h:c^-oSpL7V<+\%qrhJCf[fjI%H0R%_5Cq_<X<-g2.=fD<H1qd&c.NhH-EZ>o_EU)L?-9*>B*0u#iOM,U=ur*\IE?;$!\ZV-J0"tfeII<7cm35L;_Z+b,ra2c.4C,[_k>(%jnp!P1H$Bo2\c+OrUG:<`]^Kb?8->).I6EN^1;FcJ+D/2:i`g>qb@[TnD%e5]2KA5Ys=R.f35jcQopQ%"1oZ2kbf1b:\kqR:61u*%<f<1[o%)d;T?2m@<=)Wmom1.Vb(8(EO<Pj$XjH1COi(dhF6l3[^VmsQ(eLd6A;N)jLkHrecPhP>6kTe@Q7?BVi7G]D1*'\Y&a":+%cIgpCA4uMZP8h`cfJ`s=&<[91;X$I$*$>hCI$GTi`sO#b)J+9fG1l7nb\^?E0k>hHP@P4CH[k^d"$0ZKXH4q]KB+KqIS$d?i'>o^%S\d^W;1V/$YGW891t)N)Wl`TEpC1n=:g'otAAN`ED5`+2e58iC2NK?Th7#3PZc]oqk`FQu:kaQ@BAY-OVHQRIe*LpH/gLX<maSnb%!#<?qLf7-o"2O%/aZ"oZJS]J7ml'/_B7bE^U(*omb">?6Y@V[;en-6?m#?;8)&n'"f:b04EAB&:#U=nE'cA-Zgm`M+c*b@pEi>Pb%*Gbc7]!>-F!t@?HZjkUg[`6Ks##DKj^1aU`X[1(rTh&sf!^>HRD.=V!g$E`k44=UO`8+-8F/0RLH.WaCCLrEp$Sn8=Tr?lt%tLce%gT*2ULb`?n>=)eC'#i6TY'o0cEA]E?nUQZ5D%@m5Z>Ti_&s-j*oXi7_<"4To%U)V2SGM%uW,*Hj6M>NcC\@0qb9J\3Dp66hTlmX!%c60nLcEduH:`>7!GV/*GqWT<Dmf=W%?g>Ne;__]^MO$,ZcSr=55uF)_/J>gd&G[_ck5/S^;;(mFV)\fP2G9+@R98uf5^o.!S&_)X%!(`F+Lg_N\,l&<,<J@lsLBQ:u"Fao!IQ>h8C1#u.[1#VF.LitDNJWm_`Lo@oD_8^pZM\Y7r)i),EN77i*+`#6dum=5>:n7(J9QCo%%;eZDf?,LXCNCIcj-im6!BuPI*\pYd-b11%TukN/-H$'n#B7lo_T%eQe2Yhm5dT]U':nh*`q\U5PRN,^]1^9E7Pu%f1[Cmr?7KVf%@fhVO,/fT_m@N<$HlN6oXtgsIR4q%?6&*-G>:63JPoOk_/(f5Z'UlEqjrU@:H"nU=SVDn^#S#FO?[hR_a/eG3ell3HG7]PFPsj)T%YcQpq+&Woodf[eIrl%]J@3T=:8(jd!%^D\fV'lT_pO8hpWe[#qL5#fq;1cZ>.N*&I+G<6Xn.'I0KOTHL8cq[0+5FRb;3-F^d'B\R%_=TijJ7FO%3ZFC'813X(o&)FB#'4Z.!\r[jVdi]hTiE&f_@\B-KaG6NR5)dp/(Wp8OjU3T/'+(q:s5F[2C/iZA/+)#<;gpC+NSa5%DLL?,@nZXn9K3j5_T0NDqb03`.Mt"?k"7t3c--Lsl(??Q)Y`psiSuUU/(%uP,r7ONF_WtiC?f:r;B<;ne.Ue=M'm$C=)ZK5OtH1W%R<Mia2!hkQ1/K2(OZ.S0IJ96Ag9E_qC&CPg)@0@4VPC]<d4WUbWL='7#9g5\>`(\K=^1$n\_(pq]f`fYb'rAZXHtX5.ZdJZa-7jW%K'!Xr^l0!BWY:gHn1!-%XH[r,g3ae,gW8<]=.<?iLKi)!kbH9n@eJ5i10\;Kg%1BMKm6X=FVeAj8+OlA[J8UA(Z^cjeB2mZ3#ur]%8$FU*;gmpsa)Lua;f^:a[GgbA/59W]M_F"&@<EGcs0'sO?Yln1CU:#kaW!\l2gU7$Hf=Sg?US6?P)sG=^:3'--csLDQa)^(n.Y9q%1O[".$"?WaT.9e)+]Go'[k!G4R_cOU%/3gG.#mGoRU&o#9Br/7.?='$04$QbYMouKRD'2k")5)nOdnS1HQ[h3P7hN9$/<O`lYtn-%BO/p0Q=a_!PXP'<Z;TbcP_k'W^++U^D\(KECN<u((1pSdg^2K)DZm(YqTYb>MX'pClj[tshq2"%3dZe*k?Wl?J65WmrBX?P<MoTo%T.Z*BA-Le7S[KSmWg[o,ak^6No*T0g:UZsB"nZG>Y97b?pR59`c`\)O%g?\+X(Pe&R0=5t8"E.h&'>*c\]:,&/Du"9iP)5;CZ(P`%)OI!;Kh@+/\!Q0adBeUU3mKg1(d14LDPjUOT;Aee0D+b^1io#.SQ1m$pZ0<-`Uiuj(X>cd%T8q,J$T/CVS!:cjf!9&-;0ZESrRB.%1\V(,39-Gh1H1pI9%VC`<"+$ig4d=/kfu])n&]^pC=W?%lQ1Ccl#L]Oa,gG;Lo77n,nJl%,h$cZd6N<d@2JKp@<:78FQGjjnE11e%SREZi7IU/'5=Mm,jqmAp0n+L6`8O)A+/-i2TlZ,7A?%%$0X$ncK3B1g^ieVg*FTcP[q-QEC0S1!m@/,<^<tYCV(&K)T(_+2.q7Mu%@AQ'N/R$NR>h[<o9#J$+5aBlOIeiNGJ;?#K+mNSsTh\Ug[92d&&TcsoLD;HkV:'4V]sV^W'W/%^1DlN?Mt])uq8=a2?3,Fb-:D`f%<>Z?[>NL.&8=L_n4E4A-X]j/+l3]"CYGJ<(^T!&E6al;Mgf$#Z(_IS$<VH7s]?kd-f)(1-1N<s_LO-QjW+Rj[-6[bR"kXo(GLJAe%D$,3dfm$"UXiVSoP"2UI<]V!A%r1+sOh@O&0Ft0Wl?]r&KAX,$'4I1lJcS"8JnG1/[9^ub?3+&dA40JPYIo^t8?4ggSs$Q?nV_I3%mm=rV,U5+X`UfMYDB3E^]ZmuMi;=DEQ<fX8,fmla=ok;c"IA,f\:X20(/:2Z=(0qEm5<V6k.T"O9<f)p,MRG1XC0WE;a^#/XIph'%n%!e'GpZpsB"2LD7+k1Y8#oLD*[ZI)'r\p.f"S7nYqeh"AuoAB!`V1*JZV]cm6DD1=#-j]'?UrHP`J0N'?ir:K+2WEqbhC&gFhM-%M(F`89Uou=76m5,ab^+]8-"pemlQoM-B(p:1V3EBqOq:;"cjaiVP\kE+FC5tFlo^tY')#$,eQ+iF^O'1Qs(UT0]<.!o\$FVpta#>%.X84gER,h*6:#-=D5](''tD4O;=8&@b@N[EHshkfPf5L1[#jtN5g_uF<Yf%Xg/]K"Zm.0P_f*kf$1pIin\%OkD_@'j/?FW>;6#u]%T!.=]2M>Q&jG.8bVZ!%LO-,UnU<!XD!@6kL</+Q2.5<JCoi..4d1@<,A8a_sc%cYR2jZk$"<t/_W,?I@h6Z-n2@D>ufl1aTp3^Qf%Oqrt%j:a3ICF_"L3,#VQMZU%`9IQU6pHmmp^l(SjKL>0:3!aQo4DQ,C##P[ni$"\P7sU\/T*NYYl&oa[''!duZ(ql2%(VuGC<=P6%&5CCQmC6<\e&B:E_eGW!GGrKKJUL4nn_A^Ae"JLoa9R[F'.u`DrD_gSN%`WK,sG+.SP:lP1T<BUrXE&PPE6nrTJnLg,UQa@.F"8h%SW[O,)%E5^<\gLmV?T*d+%J0LM4flsn'<4uTMf>g$c[KK,K)_pR-:H8b\Wi=lQX0OO/;![gRp/LCI"(O\Wqfa]1HbM8d.HK'Rf**%!$FP'XbGZD\a;`+D?O8SCr'#KmE>'+5R8qNW;J+P2IcnU=ikc&KeKc*Y5ge%i5_E3mGorHq-91@>HbP\&C2]!^f_(eTAV_UiOk[2%6PEjK@qZ8G%eFEncVk$8Q,j0W.)di:=a?ZCCG>ojp:I8F$X%VXB%+a@TNFtWb7U/K]>;GR+D*CgDB9mW46Gn&SshI[?/gTTR6i%^%`F51p49Y_.eUTuuEJ\WZ2,j!]ghq+`SIo5D*s/#XREbdq=niS!.6L$)K^=WAGo&u_ABRFJ<)R$.70]nEdf.+#e8=(>j)\rHPE[F!%D"q9d=5$3V*n,QH!sU?6XUQDAJJf@qLJb%DVMT)#mW_`m2KD.#,:0?8J3qM3^@FB15FYe#pj>a-,2Q>L1V8@`b^plZ6EK0YagYMJ%n,*0\)3A&U"N49)/Pq8X^%.\8<Y-:(efCtHpOkhu&o>H3o#,9di:1eh+;IgDlW\?7^XQG#5EkC@,Lb/qk>K4TX"U#'\rm=*(:Q@`%o9.@hNVT#g?R0JmZ[2(c?OZoWgYg$Z\uW1=#jUCR@VK^-PBJCHXh6Y*V,TMBHZ^W)0($(*S&`b7Tjfj/JD)23#/KhlfNek3U>CZ$%YL7)K,,k8H@W!Pk`Prj,2l)+,Js8sJrK%(CgcD_(I;Bn-m&q(O=*=Xe_8SEAM<0B:%.XfoForAAP3.-@@]V=4Ka9&0q@`-'Bd?)D%m9V-8!nD+"^(`%k"tQ(A<1R_MSAX?Pa?WC^N,5,"mCDtlA`O?\c,Y?jXr8+2,]/JH*sl]OH(Wk+g(TVHjSb[IB]Ze%iBrRO3.[Q7%+C[,:*%WH+'!!sOK=3bBV#i'-eaEZNA.SToK>BY&>R"@eq-@;h-nT*";f9&s5.&ke1)(8Y+"K.B!_1C)/TDa1,['Kbi;SDFpFCLA%KZ-j./Qgt84iY1hhWdiZ11g_cTgmgN0nYdW;\\;sg_&<#&2BfALtQsV!9/:`*lWD)M"7)p-4tmgWL/IuK^b[M"6enT0emT6RZGq@%,/3Y:T3=PWmV6nm]Z<46Jd^ib_):+'CO!'79Qr7AVX,-9`92L0QBu0DTVmr5AZI28T,ph7O$>L/j(7#%M3Hbt'e<RX\e7r7RQJ>r%A`K#L/ZSZ\5`+(0N1qU0?%;u4J^Eo9(HRse(t^J^RGd<g-54fET#7BPs+UZ[[BN>!LRLW*&JT6'['&nlb*F!:BHd5l?O[T6[sp_(%H?EJ!;l2?ugbCV#DU/+DpPY@$7?t?u:8l$'+?e15MS1J?ia2g>I'+SG"\cem!%dW=!@KYOUmFOS6BD_L4e3?8aU;SaUcorl=u,#_%cVmkP(54d%Gp'O^&"jtJh?*,JaS/#g8\e485HPA[FW]a6bI>'QL#'#5Xc_(>V\.t$>P"7f(5``]jkoup.CMTX0$M+12?4U#\!7Vo%c(Hdeqk:.JB(@_X4_0ar,d7i=B#ZV``2>#Q.@LXn98>aU[ZaC4W6fT/7IqF?/E4ZC1.4GXX`<;4Ku`g*68AYmQtE67^s3&3ct=VC%E8D7%W+tR/YZ5(8S>]s1HG&3WZ9MO]$n`\M9q''rW=i-Ld9,Xe,T_H82Zl<UP^]ePO6FedM/IuoBA%-I%kGIOalF>RgDtEu)c8N9%+?67[%n8%K`i-[(U<9RI\a\6*Bm$X\b:],pQrR'*a1ol(Yq\r/RH^T@Y)dWMLmJh.OFp0UQ:a4;=aT`_.M9RZ(!W::nHJXMmX!]:%W<3r)dh>(\'DaC,Vto!j6J(j5,D6InZ_F=BSolWB_bXRPV`L6Xp%3]N&'0\QRkaMa2Im-BlS-\#c,.?"?r$=h(`BhN>IAG7PeeBS%`VrsArga;M+RN]I#bXeh";?eI`uMB>2%.\b+l!@7n`:(dlA\*FJ2h>m!7FSS(_<Fj53anXI(oHucm:+/Eb]BA&N3_!g5;L71FEC3%j-4oWQp14n`hGB+0W5W%=B+!^,c6As'V_kM4P^HjG^$ia)._%q:H22*k)nd&i=GNH!dUKpEh_#`Q]8`RkdI.@R1XFT^0AD?].J5/%K($X'+/3ttQ-;*4[JTQ:ZZ$o/W<X8"i@BSQfo=nR!NH.(Tiqc"H=ARYOq;.26Zr^U(fM<oSYh`!E=T/3?t'XN654LWFN[J?V9NKm%L;@UO4D>_Y7tY!jW>FUuBZkk;"WgEZD`5A9I#l_?KL_1Fja&U:U^3HR98L4+Sac-G%1ejUD=If"G#iQZK[>-`c%GN*j<&('2OVs)%k:S<66_NtRCZtpRs3ub3M9+mMmPrG_>:Cijqds8YNe`-*:'4HlEhga4+JR:Io"M;OJ$CiXb"bD,Kk&JRj%JL`W8$Y:\sm?><&?SH%Fbn]7jtV.$=)$J%!Z/1<H[LrIjuNp.s4"+pmK]^A2WU!H\[?RPR&.E;]1mY!WP-L&/N,04=h5V*%hOdqUI`^FiW*YU5ULCT'2?,D%KSAkomk$";5*Ii!'^HcW^Mj`^ShZ84`a5]hr@g(]FOQtpdX[:@M?K>A_\GmlIBFYHT9)FT%A.q_olBm:L4Zj*]cqFbaA(86S>ZuH%-(?Z;*$W=,EaNZ@F8h%G,=Tn2N1Nh/WLN0J%9Pf2p4tL#,T\)*R=$f<RH]ls3%tqkhWo5/30;(54m39Dahi+A)t7Gua?,2Dh:#Hr%VK4',3YT;\V79G4!Qe;/*4[;0Qm.4*?TZIdQQ<<-mRgQ,2u8W4V[-7&+9XW+g(,1G+krBZ.n#h_.&GHP3t+lUD[lqrU]J,UDppY[%&^RCqE1O*4?<pdsrq:3N^7`b3'*@kTHWFY^\EAjj\L>cO/iRuh$qCs8LL:M$_S%VW=F_ounF0o\5X?d-/clTR_D!mnWa7#5@rK,o%C`T1C%Q03\7'.FV!IFg:PkZef&)m/5_R>ohK;Q@SL'6g$o]O=uZ$o%q/R</-gc^S9-3j&g5!TNPMKiJ7:Fj?e"kP'NW)$ZsD@2E`%b20\QU@A)\k7`_Rn\\oogCKpS(9k?k7,I%>aDI[#*bbV+^6r+1[5&;NoLS-Gi7@*rQu\j=?n-:aNUT[VosP%TU1t3YMUPd8R#an9%NWN*o%gJa>K@:,R]55B2<`FXmg].ZqBDYm)p/OWE<KD_Ha&RsK51\[jU81a_k%U"tEDlB\I&2^GWtn>i5?Qg1Nj!%*d#-+h:t*.,%&Ri_Y;2&I@.^Y0=@m,X!.*.OME,'udkWDj%q$^%+'4XaTqZM,njKRb0q&Sd[(d`[dDaEEb;ffJUR0RK5)`*.O`9NQ`)4tPZW6OgK%7'6V<W3c\`<lhq@.Z=AYimZ7,;ks&?#!gGa%hLOia/C*8(u8K_X@q_;BNNh'GcQX<jp@W!8^UOXTfEO?7:e[KD8IfUUHU!eG]@+q%N/WK:e1*Rj"P;biaW".ekQh/$\L,;RM?'*L=<5$Nq5%ZTW7@cS@4De"Zn8(^OnK!ZZsr7Z]9qGs%Ms#*k;Fn2YM?B6Oo.IR)%taJ%e/=pi3u1:[i+'@1?H8VCkU>#u+G"!kB&sL0,]R4!j-E5<XIaH%>g#TcHbJ!!f4"$8/a>s>EG:f\Lhe%7Z@koOLVAq,>Z?:b.=DfG%'\+GPg)5bNjpq_B.B2O&diBOV[l3:Fj,Aj"_4MdH"ShN<XqW@U0Ki>DdG4ng5*>DJoAi?f@TB"O6D^BLL!BmT^d0sE@Rf>85_,'_%M<sEL>dkRn`O88V,e!G$d^;SGTP-n9Do)ro:s<(:'M-NY!aZZH0W2)o5+ZX1#f</Ka&J7?nGN*lCh9+-'jd<%8F-Y9@mLV=2/N@X%@YG9[5d3?4/Y5b+Zr`/a@/(Y"7TothG=(9]f:'ZnMhe4J4!f*.c9m6C8tr>+[ArD^O)q]9K-(AGLA>_/Zm2mn%U-gh!p&f'P8h?-%3_:PX0^POJJl3:^M;A;pU?9-Tb;*U8_11["#@UF.a0<`02A#FR35L^ukCl:]ftiS`h2dR'8IV=6nIWk;Yn)@2X@"#$A+a\f'S\aT%oibgt)T.>ea1Ut;I5BI-e#=Ygh?($]:B$&pg^53UN(Y4CW2Ile)]&bDR5PEb,Xk@"4D\F.)GXn?OC6g_/t0/;mQGM@l]ng.RE)X3%@g:L[ZHR6gL#1$Z#h;67^V[4Y-0YYDs62;nPqaJ01MG3go?U+==in`d39kh#Z?g)a;8];Q5Un2C:SO9?gp*W0L-)>&/'kj.*;`Ut%1EX9@<3Th2k?="J(Q3Q\j?N-Gl2r:!hW**<?[bt_&;b\:+Gr/+=JmK='+VGp0K-/)Z=-)_GGs>c6KM7ia*DESM;7<R1RIWsi(?1/%CZFQ@8qN9`ER#!/OBNknO;d]'!PrKVEbWQ0W9'\LYO97+8K.oSK:hCb*Zeg6*l@$VMjrGG1\mf<&^?\qbS\ltPc#[1]3X_KP3MC\%*E6W^:SLG3I1j[FiL/M,DZqkRR['X`UZ<rkmZS?!FMmm0,f(=jJK)UiK,5E9Po`<Je!,OgcPM'N@E]aXMl5J5+iIWH#(J`h0j>f[%@Yc>N)s,9`O1`5EA4Ik%8fO@hXZOW#+B0*+>EDBn-g!WKHZ06)YWZ6=r!&'[WHa=l5>L-27R:@&qNChR\>(kUkX[Mi+aJr@oL#D5%FA`VdP/p[%jRhT.;!7T%jWc*T:(_&@"$o'g"d?X*HdE86iMP=t0;;kX#kVpWC.n0_D%em[L^s[E1LX&]#-=<i_Lrm"Uc&F#Zps2U%3P).31WQ&h3,Q;ah/u?r#%:a6O/s(RVu"UM]*0KVXm!l*$Q[:PI^oOmg6ZJs+t]lRJI,F)L9hME'V3!Q3aii-TXJC\oBT(k3(GbL%e)ec>rEQM"K.n_0[WoWbGIA>cjW28g&T>%$j_`<bN`is*?M0kc8b;I+"1@BAo1mq/23o6&fc@H"6q]LjY7kYF$AegZ3$#ZQRp;M0%@ZGB!>hG#2=ZO=!:J?W;N8uk[,[2,=7G$cR?lMX9nJ*Xrqru\I+E;]f>?*h(:P`F;P,MG0&BjJU&Rhe].1>*W*fM\76PcS+p#)u8%6h7:a.V-`!GC.#+GL#\>0,f.t+N(Be\7eE*h(gh@FXm[Ep*0CF$?PocQE+Rg3#TtUFgV82*YqRmV-R&0H6+3S)l&9]UEEthN5$T`%,`.AJ)OG&<nVE@lli=#im%b4s6W/pR\G%_Y*nIJ^ZQ(b<Jf+ae'S/j*8MtPS/"5$@d*c(u&'QYraVck_'V&>l,3cU><7P@I!&6$_%H?4oO"bU/J0,=AuqemlE"(FDc2GB<dh=,HP/.I55Z-7m&Ep(<H&Xh*N0d5knSJYQ;q($9G#!^SIQJ4qERgUEc"F+m!N!M3a!MePc%j`sT>RRD1:5)8'co(i6nhQS%mR&0u(L*?)uHjS_8ZS9aB%,=/PFe6,3c/K\pZI.IX!!;du8BXUZnqT`(L9d"J&59IZ=q?GELOZqH%g''MP!Yo\9RMb\0#@@JaZ>H!@+mWm6Yt[lFJ_Q)5lOp^*)5BD03D,N.ib"RE+D*"tM),Y=U1%kXEjd=R8>?^(8>n8F%\Ps8@T9#^%M5Q4H,e&JVqcc6+SY=n=estX;PQT;Qo>@=X*[!Y$d4b]XZ!bh%pd@)4)9hEf3EYG;qV0Y]]Gsds3p>Z.i0g:iG_-",:Z[H.a;3=0%<H.Cef?<,S34p>2NS#1YBHqfubX<t!Sk=10e_bIG#CFpiq'9+QRKImDH$qLfR!=V432%>OGLnA(h'tK:=^"hdebau<ZBeO\.I7A0%ZIPB-\;CI#jFdb3as%+,hk4Z/5JNg[a3%Z8C*@0*+,/e(n<nYtQ-Gh`O=_E9b_XXa?VdE;;n]Z$-;"/Z.@%c=%."o[!X$OcX]rbn%\as/<.IH7"O,1P+IAtR8k&$otQg+'VA.mAg?3_5$7[2&[2B_lLg[='.I#sY#:FIR3^1L9jc"FQn`M#()YpX4/geJu@FVL$ajqTF[%,_*N\ene^j&p\Wdp*8R"aTi]C%lgc9[n@GOLj[Z38l+L^Hg\=5]>Idg8+3V4q"PgFcC=cqSj1jIT.fYKrkTX=-%P/#4G_\?=4_fg%pt(O8`3&nGokW`&XeZaLs/A6t*ZhH]Rgm]/Kp?QTl*5FR`0tmg5;4_%s+jdOeG$S^MgOkbh2`)t2sS^2]ccSpnTF]*M6GZ7N3^<u%r$%8Jn7CLlp_=bFs7>?9)"ol#<O7MBb`hK?l)!LV^HU3sc>U39c>W-fmdca@K)![1K+Z*9,%sO6Siol(Y`s;g4*FI7/M9i9XX"`_%m_W9)Zg7bC.`p.dnam\+;XG+sB-)Kr0tTh4)'(s*e.r@[X<,8L,SJ$NO=n"\)\FI"(cLJBbWRB*a!L&Har$o9T.G:+q/'Ce87Sq^%MRW44RE(H:89FD!nr-mf/q;3$o0d&*be:I+]TFh(K-<HX(-32r)J>qi^3*?HGgUY]?.OE<VbH;//W'(`.<h@e*E=GL6=iuDSD@_)%s5%C[ZsG,B0k0C'":NM_)%5:F!W%hYh&N;s5afT7I!_C>hB5r9I="p?(b0<GMI,BZ=]IpcHarV)X$UB*^3ojY&8V#LO)QOb[CmpL%%?_SD?l!%d&r0lr@_HB*4p3qgM[:CQ/GBO_cK]@ALpCn\dc#qTSbQ7_?"-5]rdM+_!OZ,W'!r$LA16H%8OT(CQYOY2U]g`[S*b0f%[CRif!;f)K>:#b1a.QXOKlpY=^5AgaK6;*e?J/BRnasL/4)+A-cc])K;XcqnAI<cPZG1G58N5NuX7)i1E$lC8-[4#*4)%rDdcNW*%nXWV\pT]o?Hm\9W%A0Km:5W=t9%`3e*gbqKGL@(TDhiVk%]>]d(pQ4V3BW`\2lXCVUm+KL\SF\&UfV)SMl?$pIUA\OR=4W&4E36r%gc-@tZ]QktSj%5<_XO*QX?5\9SMWPmO7/>/-r-05qdV!rRD_d--dC:8X7)k'GLGP6BqIJdfW&a8'p_2SUr.E)1j;ii`Yqh;4/n.O%6*_uMP?s@d56=aR.^-nrBZZ%An"eQg@Tk`SIT;33b8,d>l.el%Z=PXMknK2hP8<%IgY>B$n"b*^8K2m%13_1*4/qXK>ibbY`KGr&%E04*aK-Z6]4/pEgju[:r:?j8=A_Z9PLobPfOPr98nXVN4:?hp(fkL9SBs=h*IS7qsc)]t\rV#R73(6R+ac)O_B.oFJlH34pq,p&7%nPIPC<ba]0Pf"hXY;`@,D0(BjeE&_>V;$M4iaA7fW+9*2_BCX];+C.8)l_51aBN[^V*A[XH:ar="G16X[2P)EXgEt9Z?`^+(tV?=%=;JcM(lbfR399DL6Vs:%U/m?M/Y4LckY,Gj=I#m^?<A#?W<T=b$Bb,CZ@ZM)R)0gbgiU1N$1ZNHMZL>3q_c++hRDEg7tkO(GYU\d%I,Z=iasU#DZ]9jgkQln@Ic[Dsom2R"Uiitp.KQ<+]O[Y\,AKcLANX3#rhN^a[&`Ra`tZFkRo.oU2j0nKBnR^rZ%D*Fb0l?N+P[6r%L(-.$[<Mk;&JaSA8UR)FrM3U)V,9@8k@2);(]D@-^ad/I<"JXdLa2LZb!qY<fY9aXah;i"qp%\<`2f&Ea1Wl>-D[Ci@Y.bq,HJ\t%'NbU6/-dAL5oh7\A<#fE%\sO=@N:&b\?g+.gpIo6KkVqc,_1N=RZFX*'MC?4)T$A60#SBol7iG[\S`Z+%cM2kZ&PjtjBnID9J36t%AG\l+ZIU?+I3pLIMDA\YWDtad/9%k')BOQoCO.g)ND3C75tL]=61H(>+$tQUR8%dd8h,_=glTuD.Dio8]sTs7b=5ham35lF)t_[6%"E0lX0GF+'!_MV[6MEm]>IF,50lHX#Ip=*#6qk[rXiGSU1qB'n]q_C/2;Y&/+<lN!!7$!=n[Epqo=uEleYktOL%fD7BdUk-^ptpJ%_koQk]1;3di`erCcpU=$gXYg:g0l6&8o4.Z_1&'0E&&V,n;`T6=p.I@'.;^?qPFQQJ36FCe1^>R'k5IP18eaJN1`h_kc-1Dd2ms4%4K>J?R(#`qM[U[[I'$VN*f@>O_l-](b#9)fL@SqZ[uaV\:j*FO$T$LjRn"qW!U.<1&?3:k3jWIriU[e+n(n.N)m+>lHD.c)$4BQ9%AVblDO\]74(dt[Pa;A`coqLdgd"56l@;sL"\WS2]QS2PYW9Bps.*ZHsI26XEEZU^j<f*27SM"K55t]&q+!61522`RS@`i]<7ZqP$%$776Jl;NJ[1X/%N`kWiT9MZ*OZ#>8F``kP8P^3]n!60-u&op.CPat9S,JqGc+&1Lp/ap9'<"XD[`$QfZ"gUaR#hqFbMu=++RE+D_%Nt$nKlK/3O_l5W+mm(QRPN-8^MOTgBarT(XH'C%[Z>BdLPSt)g,7k!!S$N,8a#)ZXaKL3U=_V<)i6-T*]4MIo?LQX>9anRYf<Jqp%3=$Dk4JncnJZMdnkkRZT-_4KS:>BNJX`oLY7'q4dgc1Xt(h*7b(6lRl/^Qu*eT3N"2)Ab/WSSN&LIar:fiQ$B-19(.bq\h'Y;5=a%X"8Q<kjGFGl<&A+oNYu/)eAC&Sfd7mVMdnUp?U[$\f3EK:_D<dYqcujTX.o^*/*_@PX*IOdMBaLMC0fhcG"]MgpV=$!kQ%rGBITA%H01_\[=?"Kj.$-Op]JG?$>C.Pg)]BmVC.[X$D_b(7aT:gK.@/1OhG:'43\*JW,snd-&))l5e/'kb6%UbQX0!qm$epClH3EX<Y!k0%76G:[TI_Z3s(NNDAkHjj.b=ABX#/J>-t+B8E4G9-&G`iOI"s_%.>4u\LIGa5anbQe_O3M`iV3Oko.N-h`rn@qff0u4lu['*6KUmG%"%lFDJPT>Oh657uk5-b&6A3D[GBhGQ%eHM!&0GKqhfZ'slrGE)>L$b65*GPslRk87DQ?2$*JJdn\8"-^8]p%[>8DHp;D)+2M6^]H%HY-u38"4e#:"%JpbF#pk7DAbqrS/`R<s]f"<XBf_[(@NJ1h!9%3B!I5>'$7o@hj1tLOq!/qN^9;gjoKe<c&7HbJJ3"F\uc=_'?;4%HD]Q*?76W,D;\8,F3GQ_*UC$2Bfl\P;!Nfb-6R)iY1psBJW:LS@C:.]SS9gj1V$%RjpnQ.>8HB-<Q<LtNm-mi?-Jub*OCi`U[V`+%3DYQ;-\@K80rW3W8';C^=X"n8m\%8p('\0Fi^VW1&T?GU4\DY*9&;&!ENOc')D*e06:HQa4#<'[SpN0'QMc&.kfpD$Z'?r0,uL`]%iUkP$gttE]PRE7m)6KgSb3Md^;,g)U-GhU306K@i$I#&e'?f72@gDG8B;$)kifquH:bSc8b/Kaiq+?0p?kkTN*/mBgElNFdV4Q?H%;?.-uWa\#:1Af^D$k_sq,D-#TSeG-S2=mgRafg'V_.9dFCG-W65J*e'-8n%];OtoH+BMGP%CJk?&-qTg(%Cq^j#b:34"9eAK=k`i%>hY\Gl?<dhFiDl@E8sX3`XOf(&3uInh4`JSgdI/hgq<24X#Mb8fnk$%nf>DrT1q_9VbERgc\ZX6lf/UB*GC'2N2eJD%7`Wt71>)Z%EVm3N\IW<U%e`F#CKUXGM9;A-A"bLpc-CFdh'^VZ*di-]4%8\=dF0n\!*$;LoY^a6j80M?me'T%XfB@W&PWN<:A2iN+51%0I&q^2%$P_W'R1KBb])9QA.Xs0+GT92IG["B'of[>2DAF@Rm`#^E9.""Mg'](]L\kmTp4Kt)a"CH>kgbld`2`nRYI<cjnrbHJRGn.tF@ihF%WB(gjAqU7l2J<kD*ohaMq<[u-(*GWe^at_+N`7r$$Sb-&RF`&#/n1BlE@^i$NOV?.D*=q0$6!=(ORYmQ.e/-k8Gc)F_735L5jbXQ%:JDM.el-'srTd8.Z"e=WqT*>&T>-I^n5-\MB?n$t:9D<i]j+r'g-7uAr`l^:1Pbm?8t$';0Gg33VngB;3sU>?@R4X7mUk'4'@$T)%^:u=Pg-)rsXa<5RTan:802b(l_g2i2*g6lVR(WQi8Ng;[@N;2M@8]PV9[YC5ZoI-SA&_ij+io:)Bi(A\dQLZ5"081u@#P[9E]_pY%jCN$+3e*RhiX2!f@5aVt03>Y57N`_IYU8;^4(D^NU4)'KOkc.]q\Lt;Pr^VCJ_,P3R[[Muc`Odl>aTB'YIuB\O5[0CK,VZC"!Vhi%F^?bbjaE6/<h<'?g=.gO]nn[,:;B-ISH)Ini\Jpu/sGEHD]@]!XT>qq[r*@LBIT7YZgL.rr#4nE2Rd+=[sU4EPn`lOAo0>=E>+OL%J$$*9<4O!`e'(Vnj(Wbs:<2kZ>o(("]4/HhT'K]<,"OL2-tY.gBc'7hQkptUI(jK1+r*RC'I@\`.-d@iiIsrED__Iap=5tA8>cgC%HlC75`sLF]7+Plfb8oH"n2P^+Hh3/pKbD.NqrYHdpTC`$i^f>KOnpOi#XUmAOQRau:L92j"tHm6hIT8.SCoYL8F@@?V4(maj^h!J%,kiBBNb_m/">s+EK6Y6toE(N/#%r?"mFocY'(hUEg1/1%Tgs'eaNcF7#:\_"Xs.?%Bsbt*&/W2Mhn._MDG^FEre"-?M(gj!1BBc1%#0<+J*(S8I'p.9LMUW>K:8Q%r'eJGaAH$`uTOP#s9,6ga`+gm9LcS*4CBZ\Nj)T"<c:bU%ZXQ!*B45*L&W<oS?Osf@/:D`UP1/u%%6X7\,W(uO:0WhS:JHr(CTQ&ZmM309L)Fr7EP2dmV%7E^BU$H$%Rfo.rqM4Z[ZT2qjg6oBpi!Q,5gR3P95.+-/"6qt-K$o3DUM'i&%L4*SdC^Lgba<Dr;d<q3#CIHlI].C<<33S$X!2PE1\kNH'LK$>",cqsHCfZjs0f(V9rrK6E.EFZjGL`)96?to[Vn)XAkGgqe^Nq#\%E6<P?a#SX9_UkV0Ks3dl`C_7p*gSH8hCN?/FD9co8+su/aCJj+1qEu*(:Q_%>gal\;AdU:!pHPNb&MX=&[/iiW'sU<KV`[3WDM5S%i[R`I>):NE$lffD^%GY`Unu2cNpI+rVP0e7)Zk#F(uK\t&8e1Zo43gB3k)Cc0.SV.J.]i<>;45emhMO!r%<Z/"gQ!]>tDfDC]&`-%%*eOL>aC!@Gq=493!@oPk-_eO/4.O=`,T2h"Xd5S\6]\a.t)m(j(IH6$U!B*rKsK>n0C*tO<;]9GqMfG(25YDVFprq/*<$\%IaB+%]a>s.:Y!a43G=.L4D"2L%;]542cr,kK1E"0bKcnPXgD1534BD",H@CPS=n'^<Cquh)_KER-G.=aWJahN;1gd[Q#rm@3])=I):#p)%lAY"5cZ-eR#t>NK8YWbM9P?$ZOX6nT1#>\\&BTI[j)H(&!!SjN<'/Kk4N`#40P!n'XZ>Po`CSIQ$0))%AZ@<;$S8XsY@7Z/\fF?T%?enSR`[l0PM\$RnEA?P+l=sidUcF*V3t!\GO:t1eNuATEEcL194<9Xm-k88mC3BjDi(S*g`53\H\VWl@$D:b6'@tjRRe;[>OC4Kg%H&s3l*lXMRKS:i-,pk!5G2\in#AXPJhQ`oIgVJ!/X8S[W3]n@F3IX!M(o4a$Of<c"8Bc0_/$dcb9Mc@lE^#UDA-<\d%btcs(*OC0%A=bB"^:8cZ%'t#qC+5-Ii=ZNsTAW%lKT:;K'+*tL3>+kD0`(&(Ma<c[Lrd-6E7EF`ZtU_Er88`Clm&i42YqY$\eo*jY)VRfJN8>F%7`sH0=i.8G:EsCM&n.Fp7iGcmZp69Q:p$:IkBtt5*_c.&@>#l5kuL=BVdYn;WqJG"6%i`B;`&BfItDf8K_m6h?1Vg]]4=5R2Nk?g%#FbQfXHaN2]krW`%o,/Z&(Lu@mjMduQUbMU1f#f:BgPAj^tk<d,]r+o<9f^U:%I'(Ci(BhSF,m-NFa=:bN0PX"\XqHXNZ<R`.h/k%:%;\=1imR(D/dLP\7K9X1c@pNl-+$jr*8hL6@k4pN_nk^";e!`:@)e!g(7L^j++kp*5?1gpDq5)<G$`cpqB("=#$a@"ud96n9"KE%4hPSX3GkEUP13+nI`\C95uG/=I-'j(I.@+SR\^$@_O.d96i2)(@SR(F%g>a1gMtrHX"Elb"C7`+eG*:?%cnu.5+YXeQd.Fui2abF%d90MSjiFa?UG^m?,tL)hEU#m8[,>!2c:B[CAl*6+@nq]R/sZ;)P\RPm::%"Fgn>169&!lqn`@EDJ50lTc>=37d:A+hA>R8YW9OjU%:%.AX@P=#Kf802M!uN02X\:E1cM]'X[$1a-C'.75c."pG,`,:bnT_*._+&`]$#;"9,B?+3G7V"]infI*T%epnVgEK]o[Nf&fg@re%pO)7glag1fC&48SU(@f$q',Q/:=AE@s3$bBnuW2K-1ukf2HpbQ"[+NC,I4,.ip,G+SFAQmWZ+/4S'/B"Hmbo;bIgTdK<QmeJ73r<%grj:_es:Rr,YgMsp\$`7lTAK3T"]4=KoREFTA-8Y0<@s[ilWW7Ljk-&'s=kq4DBeC3*.QQ*neaOp,pgWbk/--\[\^h%E59rK[J(I%.;RP?S3?cD8miuTfRpKh1e]fh%9WD5>a?703@SkW[4:M?*Q6dZL7[3BPr!hEdSr"m$"Y(u:Mp[VC$J?f-A/IhSITuu-geRe_p"()%h/8Mde`,p8[C_B%8R><1$)9h1,Itd7Y+pIXK)J:kW&3mRa%8kU)WlgP3=_]:PVr?#Op>Dll8+K0"Xf^0aZU"dX.;,T^h&Zl?)U\_%Taiar6]BWbh-ucRQSWl(eGrd1^H0d1-G$7G1IOA%bRNI&[?L&Sd`iUM=o@qKAUS"nZsl=_=?@\q>FbA*G0$/s0#iLuX+?->Im<Vc%9IS1i6)J!n!@E'r3AL2HZ:p@=S>%)N3>>b/T6e06fP+l.g`'MTFlg1M3t=ODSTLc`OHEO2a3*\#X.C>#.3"p<'KY#<a>#6a<U).o%Fhc:'gXq`-*/@a\(c)j0goO7p94,!PMHqX*=WPUpV.dl<._&:#SNia+`GN'>lpMg8S*cHsSYX^&]B`Ie*<PZ4OG-`+9/f$:@:Am)%YNe#1=_PJHd9bE6+`rX?R87-5P&M^hX!nj\#X*L-_^f=6"LC4#YJNtj*n6L8XNZ@&F7\06=aXb)U51%&,Nmq?SVB9?I));."#Ac/%@TEb@jbq_Ej`k+aerFZUl^2V?0fY(gq@_dCgl-p%XTsYj7-PcQ<BPtl*&>=?C1'8%,>Z<b`0\BEP"SXBCYFJ<?3Pt"R8/fZVE_+h%/_g7&Zufgd))*4mq9m5IVb'2J<I;G9_=+'Sm8YnEO[m!h=*dht#brbePO-s>rlY/1lgp^SnhdL[^DsV"$U;=0$TR',n:jGo'i3o-%X=t3/A-i5cnCV0*fjW/dn?QPC"1.8F#t[^8YLs0Y44MijMe7*<j+NB+pNl?QO]1D6%5<ipA2V1TD#'6'h@>lZE\)IWo6AZ7S9VG<%b>"V`%_^f;]<QA5Z-PnW#1g9>D(7.mpKTKiZm]B5_9ikpbp&,j[,\;5,+','>Z4Rdmp$"i$V\D7m<-GBpLg(JWOf"<c:e5dJ_!SW%,CpL9np)n2&7%m'B!Y@+hf'Tn`:L".D952d0\AacF7eCPM8!/n5ZI=)%l9DhpHf)0jY@_\AeCd%1&!;ecMXop3R]*H@_7`%/$[@;%h&)haeK+QQ`'0!YZ"VFB,BV=@0&fWUO+\3,+T*?'d2-6cr4)7?R#o<m3FWA?6`-<T9J'Z3?r>P+<Bs-h*$NMIA]1'oip"t-P(;2R%<TTp#Z//=n/),[5/h>k3QWTEf$L"LgSe@hmE)!a(MA6+];iPi!700pOHW@]`d-n$;,(CSZMqR4&[fOB"K=*_]L\S;=`TAaUMO'[I%qt(K`4CqJ?V@D_QKV'&1G0uHFdG\(L[/>P#/:O.NaOSDq3?)D=^7<VJ,Gk$OrC%#I9F*?)gp&KhL+Pp\L&\fshqHl>q:&[:YO@/D%10c<*<DLQU'<..!K<eEoQ!jRYZj3O]n%CUA#lW2<A#kG$YC<!!V0c]7e&h_Z^Lf41&;5b9m*MkQ+p8gp=OtRJ-^S;M?>u>fJu%U1%fqgK>'&HZg!HBEaphFk_P#gp;l6i$fj)3aF]i:PjWd0F/`DaeY`8Z0h-ADh4>sI*d2>ca5\Co\Db*n0m:XcKQ2u$43bm72LS0&]h%k@_*:;l=65mXe<W[O.Ml*$6ac9B@;IGt9Xjk?1+Wa[lsN8t5W2cEE`)J<h@.(h%#]LDI$I*1lTrU+CuN@r^:[//@(G&lK:8a\!oT%JlT=j43(R^l5qJb-!TUGnF\QQ+r[%^f.IXZC+Pi1g`%'^2um9CduI'u`71-t(^MsVO!CdZj[Z%<,?l'>Zlo"HZp99NRlt+ieL%/R%A$ljdLiFI,<EM%O>V[pg?/X9'n0JtCH0E)<Jr:0;lLKgV(fAO>o5OP(LX/Zskf(3JW8r%`bFV@(@N,YO+d0ZgUX-LSo.&lgJjTuD%0q;)6]Sg6_fp5n%ff7&0Qj4pqfqg!T"P.RdX.pV[A?)"%.D0@eCtJ4N(<dte#=GFX3"p$df7pr/aZ%5F74dmLQ*hYO0['/ZY+e%E%D2rQ:@HU9?MttOS8&&=dCmNUH=M5Z)VEHNgn*iAU1",/M@G:Jg0"rMY[";G:L52W[G6Y!^Pdh4'PpB)j!:jqFAOr&`1!pER.=nl+%94X)G?Q&gXgc%Qm$.*3=Sf(Q/ME6X`.'@Afp#'*>73AHRpE`[,A]RDcFB45DhpI6o^R;:%h-pq_5[;<[2u_9nSa9\2X)SDSnmQYj%X,+-BP%Fhlc,2V(qP2G,*#&T>X)!g=9<N`Dj[G;>-u"uYUCo<67\hTq3IJ;@gRm_t5.jKP-&0M'TG45"Ac7!&cM"`0j14B]+hef.%P98r>6jHA"+r81%jm5?6%MRfAL^m^4W<XL[:L![oFIdQe#p,r7diBdk742JIaIX?]K;.R\@Q2FU5j:_iBGSe4]I-$NDIDeA70US'%BPQoi+V?tbk*QI.pHlmiTe/I3$QD.)#_<c4)`?D<!tJn+HTI&5c)p]N5bim0Oo/dHj-,YOh/I$EVie>0@^Pd#]/m7l53.Z=2k1UQ%S.onl>i9hH%j?T0%aGbCJkbS'NGWcq."nk0Bnh+7YTpQ`6a_]YiN()T.WI0e[U%lh0/")`-=khtA!jCkaY;A'6RS`j\LmR&#^tOb%EMgm_$,23;PddGgHt],.""pV[F*nI)K1oe.PEE;mh4?B3#phYZ#dm&:Vs>G[bUS8L^R=eAqrG%60,!h.Mg7Nf0H1Rn5&D`QT>A7L%<*Ck'`IohjPd'\<-W4&[9R=`[iG$pq;YJH^+ed2_&mfKb>aPiNZAn>fA"WlT1_l,`LQW-l9Sr`hOcj?of7M3Y[?uA?Eo[Ai6`^:`%>,nFX]7[K%i@*DK4!gV!UaQlLH.o9N.4-?e.uJ?FM(C]ii2kB&Z<5HpO.M*63mWg?[f^bW*@?p(4A4uM.mOf;1c="tRKB\V@^\Vg%c\#%#*j#M7>0.T)fo*`>4D.IZ?!3BqhG059+rW^%RN29d@Vh\N-^_uu`O1;LfI5k&iKZcf@U!]p/Ll/Pm^G3O@1ool^oC5?.4^eF%<r=1m%RtCu@u`I!Djo?g=97Ci71@h=#Wl*,ZcX>C1g;>?BS5sP[@;q1a_]'%%j@/Do?BgWH?7<39MEc%9ZOlk@-_N6FP`8'SgS5Q%2l:ds/o.8OR?V*b1b=/J'AJ7(`J&Sa)'gOd)"ABB^lkbr?CJe#p7d0$!IqCe1K3n.9LDj)-F.C+XrY]3[+:p-Ymb@Ci0V7lWeaJI%UHA2u$+);E@PaJ":t\F"3:8c@1AQqZp+=_&<[kbaU.j81i8D.!A5A0;T3!/GiHk8UFle7;j9.uHcNgH$_k3oN9$W@75j=4mQJ@g7%oB\2#,'M45lb.pqo8mNi,*)=_Mq?`;N.IVQLcd[o!J*!Lb^1mV6GhJ1.NhZdWOQUmE.uQ)N=J[**W%NE"o4YZ5k&W+FSC[S^j)A&%`tctNB#-r]]#OEWF7mF+).n$bT4\('@^l[RSY>Q\q!k"u`7nLr",&nbR"*@9i)I@Ocn>)<6s->54;T2`[SqnW'EjMefh$``"bGAQ%CCsAR%/)2j,Wej*&uUZ3.33"cGA_lg7-q;fiBu2[B'(JbbWRKtFlZ56$WFCd?^caj1j<f/LDo%m-LZR<T)e%g9LM!?I)jZIgDm$K%'+o!IDWT].Ub:pJ$uq3GaWo?l9.3-r3ls\r']MQ0@>%r*Mru`s-&rsDKjo*&`pm'c/-X@jS#'^H<f7(r9qsNQWZ]QKi.l.3M:'Ef%qEcD?V_=g/`[+(ZIs:&XNR:fu?\$<DB#&j_(k<ki_ZnTGX"?Z>Dt0YY4n^'@bIp6B23XA_/To%d"EEOm3YXa.GV#O_;A@m=E"#]6%U5n3.,:;J`-CHS*!#1'(BA:/B?jqXNH>J&P>["Ne<iO.C_*YPI-KOB\q/,[J7s13XEFf^Smnt#j4VL(QBo`hF%M9r9ClrR@/J(>p%oY@D:^2+1<atdK#N`f6kXTFaMS)<*668]mi?7)7pf^%AG1`s]4\#p)VIWlOqcr.8MT3Fom&"dGfc(XaFJ_VFrFZ7XP6[]"":hL.j%-2_a*RE#^X?7HKoCL\1F6!.aQm*Sq`+tn;d=:fAtF$@dcDI\-pS6<2T(b_ptf_2le<mo57[Sg+[I!>.8-2.g?)&=q8?KP^%[tct$%d0+Cn%D,qRh7.a1L1b&CO;n<4OMM)O>SU_5^4R9T?=DQlO\?]CV%d1bS`H46=1+[b3Yq;O6-NCXbr)H7"GI"#HXY$>UXBq,V!k0l%C8JHNNpA!6QBGdJ10ohZmhW)S:8g.1ZLD!UqXQdJqF6s[#`ISu2[9a,A&5m3GSj;8!]#!?a;>]D>^,Sc`Up3)\o9+aQX5Zp3e*N\%Z$K7p2@GXl3/_QWT[$*3n@5tap[l#aZ\L!AF`nT1lJX;>k&AL=YqNs$7!s0anlY>5`sRpI5eu]R\K*.JC3+Q5D)k](4d31EZPs*K%\ZE1NdspZ"9Y6>/1:iV?R1I#`4`XYfbWC\fq<;"7P33iL`ap-U[B2$m`Ue.,@WYP/:-#o1D!o^)^,FW^aDiEKh<Zi@Odc*o-th"p%8t"X3`Qj7%YsmfSGt`6sH'<5a2pd)]!\-$^=VQ]"&hsG,7;1*9H:5&EA51mG]450nNd5imPJ2HZDK;JVV7?oKX=VH_7O0D$r/<'?%<3$cQHng.22NM<Mk.s6?bqDV/1Z$?oaEk[H,A.aC<2GK5WXbb@cI6Z7:W_@hGl_SA/Vq/<9d.l.a[L1\P.YpA%=JGCSPhRgp)k@Z%?L<%0fGNo^0o,oi"2joa54E(%7T1[#'uPI!.=5V#+HFU_%.KCT.iYT3eE]Z=/N/g4cPTmp(:+B"s-lr_Lp1nHAZQHJ`S`e5<!R<!%JQ[>hk256dbfp1PdOLk/3`GL.*=tQ+7UK'9DHbraP%$asIk3-*@e5CN7-*qiAVSkj8Q:it;hU1-,moJ[%V?o.CUrt2/po8VTt]k=%/9ANB)OB2B9EHXL-"p%?jmu]R>Gle\\IN\JS@T0>3!<i;!S?d+.#?9WY]ss,Rcuf[+!P/r6'1d!Z>%NGE*d[b1K[,BiBqJCQqU2i%dXu6bljocp@B-Dq'qC<;3!_ARCVDY"i?U#WV7hMKB^hG399RUJQHd[U/5d+#&o\-3U&meV#lOpEf:?H:@QOgJ+KdEBZM@d7Jg5uK%K'oMGi%t=L4@mJn1t7NPK"<Q]p#$2W$k0(XI\75@#p(R`*ReSCc]N2qWY181^_d*,k!B>B[JF?n,VKbPCX4mMLTeg73XD>GBL0OA%mIV8lF"%SC_3BJ>oQCIZgYB.k4D*kUnXT77]$D%ldipl:NS=QR#TTPjKEu1Sgdc=q76uaqE?_rS`!Lb9$;A>Wffbger-CjNd]X)_%*o7tde<k6-F%5T"U3:VG!KC,T+PkLu+-0/?/Vk@EB[M[\Pl2>`VnsrA@?@ss+M`f(S;o/GW6F=J5[pUB7)5Vk/X(EF?3YZR6(#98%OU`+jGn83=]P31l*=7K:OSUgqdkj^D(HcjOEM]p:&J>su42pI.&g?XDLDEF:Qp'@U>3P5R`Ft`Gi<r/2dG!!sF%#1EFQ=gFh$I+q%50V<b-X--(66g>Y")b<OM[aRF2(RN,V@8B"n_qh=+h$&pLJb9Pi$bOh5S&s30LjC5+Cahm8!5^MS%t%+4hb8C9-J?GLf$@P%E4\E%BgAT*M5Y`7l)8/*Z2n?s'ess;7C^a'7<57m"kp'4CVt0">*IMoYH3p?4aO+8G3Fr,!\SEF31Ed;X,Q!/K5d!'6r.VC"5<PJo\dtT%03WLJg@1tTCY&l>o*Gcm76ao#17^iX2Pj;$!4m+?gg`'!S`+1R>T.r)1#/j#+Ur%Ok0gtH3YS^4N3d<QK[@nkYbDa!]ijJ24qI)G%%dn!KOH<A:%jNHJC=Y8PJ)q#DBo0hU5^Ma$hBI]XGr&Y8NME/hm@0Mt.#+b!l0BR2jJ3FBN,QaiLn'X(QssB52l;t`@53!ECe`>b%%S"*haif3q;?cR&,.&o<;AQ'Q1(*m&797G+Af+*'cY<K0(GY,M6tg[*,)fj1Kd*d)?7cl-bmF%)kL%5@dH?:5o?.L=X)EMF9@8aJ%A,)?#@bbfdn;=SnJs.ufK\-n+'ebn?GIlhuquDMHi*Pf?ZV/J8[c@]<bjO"AL]]Zi@qIQTVWUWObeWYk_2F)6a!gN-HCc`>DE2:Y%TG(J"`"4l_41,>+r2]Nj>!m@@:7">])Wa-L[u#LL_#L?[a[D&P(,MAd](Neap;iW%QlNOdAH%G1$:)AIfj#?:3],:E8/Wj<(eGKX%D\q^l0>SOLlB_m?]<%+K:25J[D-?aVWET3r1Tn-t+,_kh9+N4VJ;`f?HlSrE'T4Z\8_Wbup0C^disJ[P!)%]6@7bMVXPFC.bpi`X%rqbP-CWlL,L&78e,%>Lb=tucR.tI#/SO;?R^-<8$81CmuM/55r<cO%KbqIp"jq<Zi_%O_'WiVjS/&n7U(eD&3#ZHo,*Ved+RJHRA%9Q)YIX&"C3]+DckC5O/baF="Zd48Tir1R/OdR==R"qjB@-%ofo<PPG,c>"es#nq+%^QWX@ZKUg//'lo2Y/Vn3Nphg5M'H9*fXqH<%Q:6!g5j3:#oD6$m^L2nsF?`s>c=hI%#6+6@[8!1PjsRH%g:Xb5oqD]HXF`h$[Q'='ORdO,UQq%TEafU+'g7@S?I]h3?o6NDLo4.f%D$<:Rgqd$O>7hB!$WP3@$O+&<A\/((MEB4YN#P.-jW6Ns9QCTUHBPjNCTh=lE'GK)/uh?"6V/]59J@792$^:DF/s].-[,h&1cA1T%@6@7AT-l-31)$_@qj"Z'N-:o-E$Mo>k2A!&o0S%:q$2d5KCJVf>Up-+(a_S"=G#_4'4IY^)Q$gO)?CL,la-@+%>Pdf(f,36e+4KB%\9O->acJ;28ejBaOGSjH8d<GYiCae<FL$FeEcS4rns"/<0/`=blBe"JSa[aID;J.RR>$8,c%<"GA0Es4&0ZR4hl8VAZBWeWShKa(%9(NVs-,RqHP_Ll[&6>`I.<YGK2uRVsH1*/A]MpZYIMW(MdYAL:9=;V#*]t,q'RI9CD]t6:,VXY6:c$&HNXZq"%#NTR%_h(>Q[VA\%RHuR@9C?;$EMm)3CKlBgK;Vq;$D=qdYX5=b/LPdP2\BrWl\"@H@+dVj7$uuCKf;ZCfO^tI7&k2HI!H`7Zpj1ZoAF?^-oN6>d@71i%bO!puL#OM8R8\bu-oO#XKh4XZd:!10aPChD^(ed=H`WM#E/XfJR,ZWU*&3*SS]$dN+3&NrHS(1fZG]t[(rj+%5farm,!Km#lf2uC%f\E5F-*_`5c^`utp76dAWqc?N8fJX:BK?LL(ipDfDRau!r*!qj%!XjMLW!YUB%@E\j'm<i+Uo@-5QtIG?in6=B;iW*jcgE)E'M%g%dCId<:DU:ipOAj'BcY8o*<m0_D4^2ZGQ=];?NQd&LKZVRCVoT)IYftf1FRKUVpsuISDY1S@fpJCJ$&qk??BQr@c62njqZel7`]33%6T[-iN\`>faM9oA(50DLM1Ko$g1$mRGd*+4H\cVc@="g*0K:YdVIhcni3=\3BlicA=jj.&3&!?34aFYYe;-jO'E$L45b_g#FD$9,%:_+,$?kYRIp=?ej`Qik\1:c;j`M[EKI;a9Po:"kq:9:o%p&:[g&G$U0:+80[D*(b@"H\BG%ddFLO;*jampMq&C]e*dFWZ@r@^p<(%*4\("Zdq@2_uUtp&OKW[cbR,hVeL`YF:0oglcEo\6#`o&-m%!F#W#DJ;J6fhBVXL/npk,Cq=a0qY!=sk0aub(G0q0IV+,!^M,]^P%L""?ZB)#AJQbkBAE5+j2^.Nfm#K-dI-fRgCHKqG%-]rr,KF%OgGi#9C9=Ua]r;=2hL^^kG`0C`Qj%@JkV:NL;H>s*2G"./Cn!Y,W%6k9XlgoSA70P_2V#N$LNR)8*93RmB4>$PEjVUf$JZWcs"d,pSBH<ifEUn"((6<2,%3d#f+SLRJFJsV5GJU)>iXc!8kP`SJO0+Jqh%JIbO/B?<%=k6VmSjHaQn_T-Eu-@P/R:4-T+S9*2p)]2OKk[<%qpb6i(;2H?d'P8n(1h[2K:k=<7MDrJ8h'`o\&!!s"IRIh]%%1d&%c:G-h;eIP:jL(Li-DZt`/n%hn37Pj1]K:t<ZqH&q/N&>80hL`:?ceOoj-3<_1W[M(-=gR9UcQ"U"iZl@R,ha+.gB%].[`ZHKX;!f%&(4)A.[Jj$SNPZ!'Qd+'i5@'QL+,H:I"/T?%gY,j=k/PX$KrHk<6uJsc"IZN,t(q_FE!#U<I>e%_t1RiVPt=E<\R[)rRRO1hb1'>%A%S*\fnf-GAki,1^+;&_7EQB05D^kbF'1%e-8,Kq+Z%:oRnGKV+F1<YA48rpM<+lMGS^Fbf+.tDc=&OQ3+pk!AN1Ea<)?+H[$1_L%9]c_*PO*OZZs!sXE_S$Y)TK:#D=VrMoDV4%+Y8k;lEGPa\9_ic5lU6aQs3j4j)G!TOMnptq;j]>9Tf\;&>:li[rdqdl<E0B.OA,K%&-n?aX,0/RYRk5J.r^(AqIQL)c>?h&J0i'd*LfS`Bc&DsR1tT,FtVn;*%Zk+U*l'70l.]MbR`"dQp"tQKUEp,RU5)m_.d/E_Ege8%naC[+YJDp),2CVG<^fK`<_nRXP[ocfEs9&MMFES$Se,LsPnH*["C<ZY/iX\?N2k-/hRAK)O5t[4o)-G#=AYn2KS^UoZp,(FLhE\a%+a*tF\4)5>#A[lS'FSrjU?G"DJ<!ie;nq,/,;8'A\Sk.f&/g(<B!4UY0V,c:0$>H1;hV-3gDYj+$N9/gSZ7O7eM.qE*Qlt#g]BP9%dB.Hnpfq"ROZOk3)qX'-ph?0*76D-TN#(274:-m]C8f?<VN])S/[=*>eB66Y008$N(\'VPFmjBk,f)BJ2cL(;[2`!T1<\aq-$53g%BbB;J:mk6$+W+.3J:lkZAn,Pc8.>J/@<-*CY[FLcE+SX:(?nLYU^R1i6AuT1`8/<fHm@%Ec>%9;Q;S8V6*fmS1/;c*/rN=V"MRBa%&7Eq/5M*3/]6kKo=5btq$3udeW0j&/4J9_Rl,a$9.[P&/[9C(?3@lu;`E4dS7DZ$tbo^J883P:2%1dMWn_Hcq$sW$/('C[F^'q.O%Lbl^_KcQXW"\<hTQGnh5Dk^Oa4f67@+=,tq*7<qM\#<^KgMM5(/[J0kH$oG[E*Hn]*LnpL`l>uuZRk3Ig\#Q'<CBE[q`qRQ!PXLQ%6*&udYe-"6!iusE&Tp:?[m0:k9U-#@[^V77WuA[%rQtV:*U+8?!OkdIXQ^50d>s-[p3K,7[.()BSgNk^2C!kj`G-"NGP0G+IFa/X%D!kX_Ie#(oZ5A_ao@)kB!^[=[f=POpdm8u[J]fL#%spFMV^l&5GR*7)'Nju3/UDfuSb(%BQ?Ip]c>44f,'0I"'TXN%$9Td15e<+I%CK`(NWqAmg>[U'iJ>2C&S3[X^ijL$@(-T,dKN]jZa*ck`%OHP&YPKcflke4;$.)i)_$R8(e@W4R_D=][9G6NfCeGINA&k$*:/W'2%eRu38kZ=#1iM`"_V`m,70OR5/)@A9a,A5O%Z9Xf*nDO4.H)quXXu$8#EUu)D,e1Tm'Rt59o[]#`kn]>D.?`pGU,0DSUjL`BUf"jq%f9)+1V^@L@(;]&K(^WENUQ]f8DGof4E3Trq"+jD$a/=>@NePRt?%VK57YLKs5]Hf$_Tkt&o:ScV\2:7J+lQ]&cDpuFP-fLd`>urN%eMs(AQ0.>/muq0f/aL8F#'PIO`$</4ULY*&40B?FUPOIIC*%NSSU":i*9@L!DKZ[68rM()9>V6[+`tF.jZE#?%&tln'$W^\NCT1g%))gJ.@j1!m(F>YTLaCi%,#TciBp1bjju7&kJR_$VpJt^.R0tC.9i@pQ)l21/*pZ-ul*1>U?86\Ppc--Sf5=UL-P73sHIXIJOf.cA%cQbbo)-Q\i[lsm4.QR)[44jNiX%t!iFct$6!?Xs#[=.i1K+l-)ib/;g%#C76ZX>!S9i9(D18YJh(rs3aOjG3fX)fu_g6Wi5.]a'6%N>"9.F8(5oSb5<>QdR#FM=(liU$3bYTa0u!m"TAoh2='n0Mok7n.H4,_!@NIA)ZiY(>\Ia\7!UQ^k2ABQcY5LnHr*22jcIUR9uKK%Y7BlFVRhZE7ca!o6+s,II$/`i/pqnm$0^kP!;tn_8^%k"T?SEbc!_F#]'ISrPpt:'^cYlg#CU#E4I>35[a#+PO7GQ@a+DWBTa1,K%NBL>e[K!]`gWbdC](quuj7(NIqXHe1s819sT7-;(bBKTYr;$6a0AaE$i?p:-p%%cAr1j;cqXsH8(SBOUO.M#o+$]SlM$+2gd(o\Z%h>YS^m6CNh0)Fs0\bWEfs82hLS'Q9Bs85h72%&$3LCakP3+%jSY#0Rj'IQb^$-/['4<gA^]\_QDZR6AC\DM?Q@<%J1gGSnT,A>DO%#Pn%!i_tn`pua#EDh$QsYFM0Dk-n60Pq.hgQXhn=fm7f3g1;(D=Wt0_)kt'r7f=8TgCgV[K;mXa>s@u>Xb=`GO(9NV:G&9N)/2UH%SO(G6rn"q&<B)+9[i>4K"G:%SeG**@I^ot\'S*$cpludaDAN%"a8fA3V9M!]L9bQT.#t<'p;_msiP*g*4>#^d?oR1Sj-)cqWl_2a%pjnoTF@shO]7MQ6KH5iUbhR@BS5'eK\K2=qF`&.dUmM0^:f?<ks./:YY9[k?[GrrWJe,'mKL:ZU@@nej#>Q3_n*)#HaYV0J+*0gX%8p7CfF>imDpBUTJ.%7CUAigG_[cb7m@E)qNH!Q/Y(;Mb[X=.L\OVIehO%Yp%:Zo/@q/GkClfu[pePui^.IJoj.ps$"p.+CTs283@%6cP'(NW%3&"Z2W?LKg>qO>:AZ72(ofeL#T_2d"-pC+:4uL$gg#Es:3Y>R%+(Em)l;4NC7lBr6`"?PRY"0RcJUMcm>4^ha_TY8,+k%[9Q?s)dj_"]hC>%SH.n'FX2g=p'(NiXFW]Kpa.[d@pV9C!3u_9@>YUn0^Oia5/]-)h9rrYL?"B"9Os2::,Sn==H/&?e^J8$&h-JV%52_k5QY6ubP#Dl:okK9/GK]8EYX&aneH.29qJ*:?S4V*gs%-ar_L:$Df-Tgdp2ZdrWb0?1&(ME&;DPa#mt`g#Cj$c*O#P/$;2TR(%d2>!oKl\4m=2d_O.-7nu"m^`HZEfKFp\#D6ID<!'S(asDRXR8jDASP(]tR=X/^od;e<OX,2rJErnab%4,0M@jigfmh9p`ed'jV8&%WCbghDUF"ecrhio*+I7&k6$n[.9d80,0P)V`L$EpQb/Am<),@:kB.?=O^o=S^QdO+<%%l$4a=DJ[=.Cgituq$9\d,<c+:k6TK8?[%4lg,bpnqo)-d=A<%DCaTe-_SeBO>aR01j%<O579)B7GbMkHrKP(uBEP=,6eC;ZYg,N#9Fh@&&Bi-;W/q^#"_V6gePeG-ef7XoVXJ%/^9'2[O*HY%o4\p\Cm1mZ;K8Z:nqS(Mj""VNf_DE;"I#X-HDCFe7pjkq:4Nn^Y@_YYAH99pK^coag.Q:@95)J]9+TI^/cR:h@G]Y%9;Lall(BHpI>GI_J`#C!hDWn1;KqnfPdLLO[""j!cL,7n+YCh5KM[;kW'$QJLU/:R2^9*Mi2N-mVd!PMBbk2qV]+3Z9=0s1[3)t)%gONpH'\K1C[$9Jlf:BJ$18o1i8+s;[<TpeoFs8)>=I')+@(h^FK5'3>l_GQ9_[>;/oO;Crl869rG#ur]q&A[tr4L"**erhU:"G<"%oBR4M<\GNDMnbBdX?k[u<+,%lPVcO/<;5Lqa[QPW?-I!;6]IrMIjte1h:J8'q\3o#Y4;qs@5_-[r6bi"*kIKR?+^k\J^hkPI<DW%%MLY0W5Q0K#J,K$=:L;nmJ,/7"o=)KHq7Br),Gh-i7f)?2j'THKqssE`DLV6"-U5>[s75-t2t*A3d>r2Eo3UqTpOAgf<t2E"l03P]%pBJc&LB>(`dYr(?Rt#bNJV.'G@.%NFg%=UiL3QN2,K1,WI\lYuO1\V4heEA;[DALIUF8dOK3IJmF?qSROPV"Sl7F=/HWKZmf^!da%D>W!0=BteB`T,l4niWmA_7'B(lgIcYnH5ZA4f<k`cL"rqOknF@"@e'CUt#B'U\bN#@ig+1Kpf*9NEfZ#oCAP<pFS[e"FXA*0DG>/%o2^nJI1irk4)[K.QYe\*mK:DGG<'k6cn1QX%+-gaM4&ZVFC$2sHiqG-QX4nF5[9-RBXs;h:#S)JKfr+_eJiJTr!tbDEms"FE/jt<%\?X"aios#11c^&<W7D!ET_NS;`+G2Hd4<>F20Md#GA=nurTq.^`6%1A^d0T(N+FIED\lhn2rab&)lXg%Rlq+0oM^M?EgC#.ke0A:%7mM$:[E>dlp[7*2O,[rI36u:O$_DW?3^c3^WUo#f^bRK1B3;Q8kf*oljs6!)R>m*0/j,-qmteQp3kF'3MuK:@9L)"ca:N!A_>m1J%Q$SCAKU1m[;Z6n;Q9n%EG@<!_Ei;/Z`4Iqdj^sd8IPVO+F3m<I.W"b-(<[Yoi\V98TkkR2BVI4HX*LI4G0":U<uAd6Zbp1(oT8!6%<8&5G01,3/f[m+2;H2F1a.+*f;Og"cI5UbNp@%9fokE/q#'n/<gjMadN&op*!(2`""()`n?mIPN?-rsp^ht>_@R.j[DS/\P7]n.i%_;>d,\3UB;FLFnC^d)EH')^_tZs&1.U&%=mn>X:s.UUJn%lQ:6D:gN%=:=C6[f]t)dK@,P#&Jm%,0UI2Q0J!\>#_$)%)Pt-B+s\o%r,IS\(Us>O08tHnOLL$=7!'5a]->u_O:8T-WC+2Q^(;9]31=&.THhf(*5N1qE2BhW.gYLCArC%#Zt'UmAWYc7e0.4nQAh+VTs9cV%D@eN)<.o,uW/K_K6hc%7)=A%3.>aK5#2l5e#fQ[L[OdQ+N,Bcdr%%W`kQF[PY/3L$*!_0(g:SYt\rsKjh\@rdAuj<K<AquXM,f1n%jQsqhBB"dZJZOFR<u*Z2d4>1qJ31:%cNoL$p,g!Al627#0Frj-7PK^_H($%<5@B(2:KaLPl5mjQE;H&8?,tMV98M(7k07NB[b8j)%\oYDurk(<+ZN[(mE)O>]lD;CS;G>Yf78X57QuK*[-#6\Oi%!EFe9G[o1@:#l'K1TZ'MZ#]"oDuEGW6:>AIp8BiDd>_mZY^+<[;0I%j_-$M+SWgYrb]*:qja51"!m*7U4PinCGAVf$BZ3*L4DBaJp?5>2:8]EUf4tR?DTsHP?mVQlV"23dpV[&M?b=-!Ia@@UG5_r-8-c(%E,&6D_)bY!Y3r<^!Oj!7jKAL#M%rP>:sH2W#d;"XqFDn8ltWH,IPD!JT)m<.LZPYt8'1:1%[LZ9H^M?#Mj">CoW-OIo6ljBC#0f;%:o;]F4#`3&'BW7U.gSP3Pe8&BpNV,pj9p%OSF-t:MqbplqP1b-2@:;!YlVN=^`j[K<E=iV$'4;iS&FB6'lbVM!M_%fg20/sL3Co2%"\%&oTN)5j)F?HQpa/C]M6-8!S&&2.8b-lgLr52+63,u7=<#AE<P*G*-ZS]rYh@M_m0LTsWKR%T\>r@i71/HOlc(2^_S5ih,h2\*%UFbC(h$FoDO]Vt)"bKu],"8t]H<G@2+qCQLaH+?HN2VhM`PJ3mC+:E^HW!DJ8=d(=QS2f,A@T-M2#-P=aWj6Xf(o+<YI*t;Y9"\b%Ni[r`5II"kLQX!RC6%:Bm."Vae1^sDcGAAF#%"qRn+6>OYC*IQht8f2^2gqmbcQAAo%6(;3b'8"h,:F:e<F;dF(@r!W%Q[Ua,m)K%g"fV!f^>.PcLV8H]8>]E!uXjRL3lW<<p6;2]BU:O.Lu<\1-BWJ^r1'@WKEtYRZih,X`a+oZ=#[=r8,Pa1**Par1,Mu:/@8\(^uI`%"B7]`"Z"G>i71c64L^'\OQJQRR:%4i-u("g7HP!m+GCmGQ*DfRb&3lkeb7^dp#5ra6YfCNW/`#V4N^gOEbZ.&a9;.b>g\2*-q&T:%csNEk,[P@T4q_;)J#Y-=@,>YW%L,WpXjG;rkn<:DhE@\+)9$`eRQ.!2na=J"ZbpAhZPI<)9/aZc?!NpL<?+bWV%X\=nXLaO<n-Ck%9W>oD.mgibmus@+ig@9(2*ECC=Dd8,k1Nmp/$qWGV3XGVJAokNc=V8&'fmA'"N*'RRAEFs<uJp2?sXVN`\-C/0:_?*+eiWMIJ<jD%[en^EdBp3Lm@L<4aV>mnF(&[&Cl<g_$JB*EBqdVSGM3Bt.!]F_P&hLaNQ@>`@RW)r8od*8JZUe/W?-,9o=50]\TI-9d5h[tjDPk0%ADeG%UJ?!lm]?hhFcXMoP\`Knf;V$D,d1\(O59oi/GN''Wj*l&5RK6:!__6\XiP!-+a2>b8!mGu+q;66W-MO_M'aIt(H+LJ?d^U'%T+I/K"1O6Q)%NAf;MH_afo"hnDKqcBL9PYVePUm3A`IYX2PeU>MZc?X+f8ir'h"4Uo"#SpfASV\lcoj[7LiCdYr3/WMA6H-i#jZB%L4ZFkh`lCfkk-DIH2H-X?L?4lrpPcaS1,[V;n_+mBX$3PF\(2Xgks'I8JP=TQ]cThqRpe<ALTt7JO\tQ[RfETc&m6C'iS69P0o#`%6k@1_=TrQ^7LR9g)`mZebue%A7T[E<Ui_!UWjQA&WMJY_1uu2eFdS^2\s`k+G6daL#IoJ"N/)S&[7jnu&0p$GApB.$g[eAh#[<_"%BQ2=O!rj9P-Z]rD!k74t7hg3G*Z=<Y(Y`Uh;jnOF/&X,pBklB<pi*0i=uJXtI5[MkgBTOT7-(8_,qG(a^IXFmn#4&Udq-^O)=>)1%;Va>MA.$YMogW#ROaYI0<"^::P=h*-?Dj^kUl_g'19:r./Ut/9pE+!l4s1nKV)Js8.r=_""@!0(bK^6`)-ij)#\>7CpSn@HLNrFN%0)u"/GPsMcfY'&VqDl=NI-5#Z@1"D4AkHO5](]lu$Z+RbaPKdS2)&n>`1mbS+X,\3XFWMp]SJmQ'YQY&g"Dp!l)BT%:RFqDRIZ9^%T7?CjP?0DDJ$sjJci<M_2H>4uc]8k;fAD#H@[U"XL4%l"DLVM,+*C^95sV;i)>iR?):cq]%nEo"@ZYh0des1F>WbfGJ2YSAMpT3@%2"4XkjFt[F[8%lL@%V"fUDp+CXV+k?eCSL;L"6<Dm8A,lm]?(D#"lOHd45Q'gQhl(4XZ?U<UNHi(LkM>B@jib3QW"?C.9h4"'m/l%/S#>n$E@.m4$0HIKQoZMX;"1N!'P,JkSA\@mIc^rlb/i^_50Z.b&d#+<(ULlC+u2G[5!!?Qm2NKPRc%=hE;=9.c#:+$7;_6^'H`"%l?,(N*Rd&(CL)U,!69uVkht].X2&5iGIY#163;+=#"t8Qh3sV##/CEn943]tP,s9^=Bgj90$MMG8-K**\l`ST2#4omS^X\&]duJl%XMj0'/?@MKR:f[e,..+!=A<LO[cCS*Rlm:K!>Nt:i;)*>kj6esl"0m3XS08\5W?mcZ'V`<Y-qo"H%3=82o#74co68<ajR2G3+uop%Z#??R+jnF`/$fY;dBhCmL_as>.#slTC=_*NY)(a4$EXKgg9p;6f2CpK$tR0?N"nRSD"Ur4Cie*`l$($9+u[Ba/E2Nt8N-T\%&qh5%DRK`V3FHR,-_d^/mGRTIr#P7>IrZ52]H0'-=^a!KjRM=Cg<4+rQa3qV9<G+`5CWP0pd6.<;qmEW[U6qd`#VC=GQVUs&OWZ7!%]<R%W`a/^MH=Y-3sZX9]o-H@bo&.s+O"-o"MQd;fn*rfjH.g8Y`tD(4E_lLXoj-:;/)jV$oAc!Vtj+YotV=u]g&[,26cDX^$V9RGLiDs%dV8sjPO3iib^V8-'g*$&XiB6]VH[+6rni3NoD7YIGCI;VlDIEPX=Eu@LF<,m`M/=kr7./2It.18s*/P`rlL4Mr7RQH^47^4?_>)^%ri6iRDgqERZPROEqWbiOfH5%(^O#SD=)X^\nbL@TPl0,lDdIj>dr)mEJ+F2ST"i&9pa_5NFS#.HO0j9Co"`S#oDI-?Q+*KE7G#,Y%Wp:1kY?uLRHVpp1k0l7r^AdIL>H^iP^n.jq0CJKXBdp0A76fT]4[7O[ccaql$FAN;H2INq]:2T&4oalf;G=,PQ2Q3)^]*R-q9JI.%5`K-`\@HtVr84oH<qT#2IsLYZrT?,SGlR^/=&o$R07WfqrL8S/pGQ&:J,]0?bPP?o]Fk%Los<8Uh]/615M?)+p<@NZQTC)UmH;gQ%hS5Icm!=BcnDtXa[=hSg'RTY!s80FS^Ug^XgqS:/lIF/*?bB^gBiX?5ZB):.(?Mst]m]_9pKgUqHG&aFqqG]&rZBI9o*;>IWqQ9r%^%h0ce'D>_IJ*0e`uj,"o?H:!a?T0+n]4V\2heeujd5p:M;-:(il_:Ad!q6bm_>d$hsSa1:XE2;S,I$R[A.1Iam\N&l.Ftn=8SUp%BM5iQp?q]]]NI-Blqo[nqF5b8r;0cCHL?%Sir-"(?<E*_0769nSL9<.p1?jfp]#+,^TZ&>&%MtkS)W;)\]nk&5PE1mrKt+B_!A/t%.fFioIs8:jN2Ri!mNmI2UJ]PV5<]Ofd%C.&EM$/*miO:&O#<J@cCsW=\V<A-%QdQhJc/sc0;:UU];)f]=/]rMP?<-nFBOeL]%-EE%3t?N5=G'<@'1\L(s2kU+r!36ah'_X>.-pPe=JJq:2G[1cfY>)o/beh*(j/[JT9&0F-2[CPm8K9H]`2K:q4U;teOco#eNX#3('YWF%_.uS"%JYS"konZm\4kTl9@YZU/P83aki87D*;Mtq_UXdJM&[n]_:EFn.QpmERm]C(A[JI/h*/rB\DP!Ec]W!%d8lpB_IT,sre\1=%YO'Mhgiop#/pg[!=]qqHHl[m$Dtm,9=hapCs.A[9DJ]?=hr9d<:j9Nb9V-++`Mj<(hc22*oNehuIF#%jOrLF1@/GCW0\'@6@pS#l%Y7lS9dQThRG<%t=#]UiKH>&)^Ku>H?+ZV%)ed1,Y5#5PRMr3+nHrMEL5PCh3?`q=arg`!=F'*n:bKn97@a!K?SuN8n0=DUre%0BS%)W?<rX0:fT?=PU6PfC#9f3U!k/b@!`9d9;.4]3>gg7+InK#5i;Ap=7L[I=p%=g(tp+/pmK=P=hN>Tph8IdL`rj2nd`?hVJ1Mtb!@%O0U,Ts7>P8^O<6!h#-!b`VZ!oaj'_CJ(\%Mo:MY&r8[\K07WSFJ,f<;c,1?<1&-NjYN2MW45H$+^:piR-N2#O3f<juCCfgdbPeWZ%qOp]V^O(7@54S?kY?u\=,>!B6os;+U]2u;l2toMLH2m,eq_rFXgW+aBUD6/JDSE8t=A+%M=8h.9DuTauaj#m4C;fuEpG_s"S%jGn%o<Ds;=8Ht7k4N@o^3orO2qA5KeSnm.9uc7p+8EuUP/l`&rG6DgX*qk?r:msQ_N,7K4Z/OEo=lN'qg\XlbnjaAm4RK1"7'lk@GMn#%ahGi6Ie;OS^%gi1?G-9jB:jUsd8p/:+#*cl4@^OFYM#DuNVWJs%K:p.n8J+#55F<S&06S3?ai7Hq;V)ES+2W20ghL\79Cc.]97gM%%Y>kj^RtF=YNM*FIc.OTICGEucf'4gqE;g^+LdS0J<cVPg$N/A48GQ,f=1^i_t/l%m?<T\qZ"7=s&,;YJ'_g]ce_H(rr2Z<hnJn0%*53M()_u9pdl1Y5lLXt'@*4HFrfPAg2P"I[b6rE=q:iZuI/iIB*p!"Vj%j#Ehri@uQbV-J&-F5N]bg.^0&\X6p[J1RYIS.j%iU4B%i,#uBEZ<0H<0R;.Cln[EIANh4</f^>-2Go#cCaN7kJ,qnSNlnYrmmP%GC1_DY.lM=A]g.8KW*e3o(Z:*b.Nnn?Ym&5H2d7'([leY%a3C5g2$SnXd_))[::Wkq@cOACl/n%1N.7;166U]OF8L7Y+nh<Gk2u4dDtSV759AQDhS+C3rmgId#i!@S;dB=Rb?t5Iq6*P>b:^O)%?R!7Z\'2U8/\NH.9mJ6@If89^]8p"Wo3]4YoBONn0DGe(C7[ZVjkh.JDdU0RYtLQZ?[h^L([q?^G+B/IaSm=V+&Qn[f'<i=TD@fC%q0sR"nEogkmr*[Fq=Dqhr:YoM'E?<Zs#o]m88u@k@lFC@#f$CfjbIQK[e&WW0H+$%ephrAil0/<G&?Kgg\7TTp@uZY]Bht;YIE'M%2]8&ShVJLFIL(%-Oo7a.h[pW,]M^@c\O1d:b6^i),.g`[^/?S!3@.je?KYtihHLpthO[/ET3M;&'ao/V">@t``5eH/20kOZROkbf%-L\6=P=>275Db"!%eoG7\aYr82#d.?YMMJCNO[qsrp'=V(Or!r,IR"0/7%PubUR_rA,LW*1Bbqs8DcVTh;V5a\!'[VIJY]fiBM&6%`aaEIJ*q_Hh0.JXqA3sWqbTK<<7IluXGPouWT6Y>72(8E<8I<9<&Pcb-Z@miiV0D](%1S#.iR45mpA_=ldS-_J+NC.+0C.P]Qj;p%pZ?t\L[%CEI.^Z)jo2Jk^A@E&$Dq/$r9^\131b7Gp#_1qpBN)!(XHIR@okkYYJ.[krU0[8>C6`omJX0hrcMMns5Ee>pWq_[r!c<n%K=RTR+E+@=FPF_?HLo8Af6>T&,e0TVi<]Fd.!='7Hr`T6NfZ9Ym<pC3(JFP,EE7`>9T[(GGX(#;:Ge;a@YbimcZ!3<-X6J?Q+ln<%%<]t2!Ud\P)?#Wj05c7<k5F14keE\8hpl'2dt\`XT>16hk,5t@Tpp!66:d)%g@sTob;791,H5DBT-FiWs6XY%A*/Da[-=!KS+(DN%o:b=8kf3M_4<K#cTD!80r76NW+K"Oocp.oVq4GHSnJ?4<s8;]i[kHXOIsHP8l-!H5;A_bck]-P<OEhqZgGa%X^NfYD)Ou*OlZH%q%Tu>RShRSn@-I\<B+rWXuK(7BM(mc7l[+pqLT?Akcs1Vp2Os9gn)dZSaP"BijPF(aPGkLuYp8aY+rl`W:q&c6sFo:(?iJBcU\0%nO%S9k?eKMhRMY2qmg%u7@[ka*cKqbfY?0BHtBs6m#&=oSm,Aj6]Rb24>b+'=0jo'I7j:I"mMZd2tVp#6"DD8PQ\q*@-tqUbZkhlE[G%cT<,k5u^K:g(jBuGRXT:(%*+=rAQcOIeN71rpIaPTr7\`eDnI(Y4VScpTN-=VphR=n*f*T])M3ajhjSHC"<+T+0XROnMRrLU$m*L%neasYOrJ](s+CsM^\k5-ds\(lo$)(VHM-j8^WrtT]/-Pf7G,L!F_#=GR4%#V?>JFM@.T/QUAiDko`NlcAO"gOoMZ-Kq:"fAJ*&Z!%YA&UcY-jQ@=j1Gi.EYWa_[7C\SusT]8GYZp@"=LsGmqm_JDVI`9n.0Hd9+,prdF/9jf`&NrUQNS)1MSb[s+sfE?*$m([sZ5(L9Qs%39g/>(]GO(QELi+es2KP7M#hUC*aHqEf&mU1%X^P:A)8CB:$5pa]qu80J&AMeZZ"<W`.G(h:(-8AGAAFV-h,q^>Vg"$;Jlo\X]4\%EIt9Ao=0"HqL21Kn'V(=&eK5!!^^`t5j\%>mIg\$<tA*q1T7cu(ge:::>W^uohusHR]P??`%^ifVb"4nL^UD`eHD%brQj`hdqC5#%82e\l,Q"[)k[r:Z^EW.d^*4u3S"(LK>U_Wm>Q+/f*Q1S?r,R(L]@6eb"+]I:.A)7L\W_D"?^,sZel"[ak5j3t:Z"^S['7Js?%L&*%@SB!\QcC2_YnM5.%p!W7VT[iYYd&QR-4TfT/bhG6r!q`/gYM2-S)(]'NOm`?H]>VgW8#q&Y7cNELTItDZKCVBEm3eJS:()k_uKJg%q0Yimq>:`Ze,J(p?WBJ.jXX2FRu`>M`ASo+j^WFH;seBPh[f%bs+KA*Ii^sId%8:n.l5ceAE\';>>Jc(s)UrPlfkUrb6<Xmm+t-[%@j_&<%Gnu==,Y2bah*I$eaSido&'DB6f677FZUS.NK<.\9k3Cb>W20;Up%2c7s<,:gABKY^<@Mq*MntCg%$3e6i?61oR,4-ir5Uq%nlEo"Kl:PM]mrOS%L+0PdsZ`>mW!G4h9IP=?;+t[j`2i'Gk(L#gifZtLOXf1V\dOqK_,-IAb#B2_5R"FnR*s[J,4E,irZhZSg7LB%9,LRXM8`%LW5al"+,,]8QqDkl2EimDAC_e:oCf0=UAOjMU531ODd/EthNWL\'`EZa&>J5%r6pf(k4QYgr9gF.nncPED7-hR$^p85%12P,jD%-u[Ie^fi3^'PCoNbW<<%YR$YDfG,$u.Jrk/QJuW*1r8**6u,[5P+PcDZ2"rIL@\Xii/bP?ZB1L4iPbG#TGa6]&\Chq;,@%6gGT:NNFAr8f5tdXgu!R,rC%.L+R.=%n4jLmDm3,m)-3ls%o)+,gD@8K3K(i=d*Pi.e4L6<KH4pO`Gt>iQ?SAm;2cF1<6D0-_4I"%Q9g7*5'F:gcKF)=SsRm;>@D,6/R60!L9qi_.RQ:,)(_Z:0ssdTWdXdu^dlekTbd>(CnCqie@pB&m;ob2G5WiCkGI9T/'_M!ZPc,e%Ft'W9DtIukYgKeNL^"C540rC^rm2R=ehh5aE,28GKiMb8O8_r^@J(6CQ+Pl([^iY42n2r4l#]rH9bu:.V`Pf#-1+lL^)5L"\YIk8%WRX?NY%qX'ZCf(sfu8'R]>u!)C,P_Rp#PLVH9@\grIE^[F@.?4FV@S5+D0/uR4mM3pT(tocN\(Eq8)1gFKbO.E`Ts>7A+E2U^8+5%s*cm%Yho_@jJ`(;Vum;W%_0XB\'G$XL6/=JJT&FX8])5?f"WWgE(7\?QS@`DC(FXMfpJdEGo(H7-22c-X#C(O7iHM/q2Wcgm]URI%!A<?PQec@]dOd[7k*P7,cecul?C"iu&i>YA.sqWP3kSYl\iq0R\d?%7+9%S7?QI>b2RU3oW,$fKNGEmnqB>J(k?VHLl<`6(PM$(N%TPHpom!`9eN2tF:o@_7)C!VDt8cSZ?NI[Z=Y?Z1oPX#%"4ZiJp(1,l8f'[p*3Y8EXIXh':3h)`P-J=Z'>OSK3id=t:*8UK*/C[,]%l;GKM<X_\hKM.:/E(kQ%_J'G)TBF7]Vhea\4BYDh*k_;Yq_uAAr\]KBnTXKZqBib/(+R7BDs*>']BXW)RkJ.`@1F.@m6UQ!SnCjQ%[m73Pe/N&KG#Hd"?mk&D!'=ol!U-Xrjgc6k7ne,ME=NFA42+%*-h")/e\29,\cA@UkE+O%%o4ik&d9$`gF$],o],'(r":=oVKKI0%q3MZ05g+mu=%E.Q3mX^+IFm(Q(NCr2bc.".D!1HYr1mX<r<-nOXlskInYqpAG8nj'jBX!rs5q+sa-Xtp2m-2gWahT#'ccM%qojt5%+_6A#VoMHOipC873BJ9<EM^gjH%UDL&%*M@Kqp<PVm8d>4?GQYXI4A/'oM\c>h`-9Hni=%/mpX#T;RTg0#*=LRQN%[FGBgB$&1(9%Wb57tL6c7t*9:Y]jL(Sb=jsFXH/EUaE[G:g?\ekgfB$o'^R?c.c_6J6K)r&tdUu!LXiCO.8H"*LIQ"a*0"N#n$_;P//!c^q$o0q<%T=mC4.(#7g<'<>'9]6Z:Pd@:OcKKNN'P'lF4_fcG#2o:H_<!u"qK]_%ae@G1%A(l2'&/*-,sk(%4#01F+O#eIE\>lK5>S+H#IN`c%X%ga1RRro>0P&J?3iNZ?Saaud?,=,%]FsDm5j)DLj@GO$A<g-<Y/YCWZC[t9.BnNBV$jH3g4<LEe2/o2_5:>fUj8`CY=o50;&k8?%Fc>%<.d1&+S^D$,oqepFBrdF(&LF\W1pj'q7(AM:5&-EUL#FGH/P7eNA.trhCec-R/iq3WEC+H2\2nlL78TA.nJLCR;Fa6<O.e-Y%kKAF=CZP/o`5%bJ/tq]?%NK_U+cZYaR="$M-Z:]tTIBl*R>_^-3Ntq^HF$MH'h2h7Xf\ppNgU^<)O-=rb(p1**JMYh>'ll0FLcQ1%k/r!S434?U$I)%U+b<`_,Xs%elH&R3D=S7*L7H%r$R2L:kgb5P*^[sTAHmS[m(cf3i,ooj:0*#cCn7\ZAcrB.KC9":K*d&Xg=eqf%hJs026Z3rVk#12leld"3E)CQ-3Ggrf%e?/oc<7kcK/UfU]DU?H;C.OU[Q;nUNFkYHLRNgLC2#B?nq[cp/S(d[f]!SpJH^(CSCPum%jK"nK%h8\t'mO%2KpJH?YEWi';pj]8N5"9GdIG&HiVkGD>GF*R2!W67!@"\^ko/Bgl3Mf@e=i[Ra/P#tJC?\lFO4rANRZ=_2[X.%%Rd7c3odX3Q^`aHl^sI^Nl<sQODund.2m*gOSoM"=KiQAYYQDs52dccY+7VU+/L;;DLNU]b,'A'K:.+[eL(/P;=EmX^n;V.6USH_V%rmop*bu@-eqfBcF^S3?bs5U"A1^a#H+LjQ!4[2g0)nM%f\9l\K5I:ZbbdC<I[_ukibR,h2QiU?eg/p)-i"sW<bA;bj'naQS6gWo,%12!gdZ^/"1d>;Y_5bo,P[$W[bCu8/HTJCm$*GXj@PZ1kq[6BHu#iZV9+DnjC0]Gi]3[V@t;^p2"mZdt9"-mmRAHlllINZIn^fr(_%$re.BNn.HO(&_$(#unHq]].[*/-(Ui7;q-i&.;:7Y<A`fD=nrR3?H-k9s<I&TLm15!qS*#kM^sT@nrlE)#,sZ^%MJY.$MW'[.mcT%I>n9EC1lSFRX1Q%8gu(a8uE#!@ZH\L7nG=2Z:Tnk%Fu(d>]I,6hQX-T;/Gu>bt9[5:LV\f7^NSH!=[=1^TNO8.jgZk.ZVED<!*Op%9H9m\Y$)a$.,LE!nr[++?XPu=9*M$;>=4_G6rmh)`QX3I6NJU^4,jGa>LOh$JQXbIds?NW66^;o>*d!.C+[LRE`UbJZ,=H%`?Rl8%Ul[GS/9-EJUXO=+&<$rs>UFhR6l!!%q1quWVVF7QOIerW'9.6,^u[?',ho'TNu;+eL%3R1C-:(L0%1W'l23Nsl7bU[[;(10\mJ.t%Yl.!\Eh+nBQQ(SlkRi6].am+Bk^OQ%4Cn)B)$0IPH4s8K1);b645:jh-2h0G\OW:]-+ZC9mE\W]5fVeQ*Mem)'(<?^8.Bs[j]TAQ%1'LolPj_6pHD=ZG4-pnr!!D757Mn=RQg0Df"JcCOkS4J6%EdTVJ0oLpJM/?Df"'b-em;/j4FgJ>m=lB6Q("WOTM+*ok#LF_[jm9i%R[3-jUNPRgLK6I\<StELV.Jip4FJcW/$t'cg8QG&KD03QBPWfB)m%"nX*5jJU7)@[91\E6(+0RY`'T420PHDBPPL5IL8TM&f<pu^%=DB6"]GRbU0aq0h)2`&/9o>-l!5@#NJ?T#r0X,c]0#'el`"@%/PN%/s-;VU29)l+\V.IeDF+(97Ksm+J91ZV\fAt?1-HS2d"iFC0%88]@$oNB#*3;EFhS:E-XIR`/J;T>_oEL4IuJ,li`O9c7'5lsA@!k'UFC(c^R_?"HR3C>@A_/&m)?fqFU3::gR@GZAKP:!5<De(iF%.j`S7l)Ym*_\8Wm!@.XS"K:@!lP0C+&=FX@2N0t`\.P0D75;gJg4f_FNO/c,gdDF`>Y"R,62EYJ_$\$jJ!]a*lTqZp5,s)2l/8j3%]i^U3/>IT1$)D1l.>hpRmK_b6dt9"QJ;9)"^]5puk`QYN"@pSqP\k*25YT+\/])S>/+jTfJLB<jT5f1ifl_Jr!(m8\fn5(&0U-/Q%H7')s;^rHEO\-KQ-mSL;!P@:,bV_WQF%5S7$me$b(UTd<8ASlB;IXe^=!iHP&T'K!OC_^-c2jl9/5_;5L;6O1)*giTckf>\iGgOU%0mt`p]sM>0bX%Ni&i1TG?"4:B+6AuT#Rm%%gTl]Dr*i]_o!0Xe5TFIi&;5ZYP9dBt<_O\sO:[mbN%m`q0mG_r8b1&&Kftp&YtQ,q%Hdu5?Pb]Qa5a?&L>nAJU^IMA*Bn79B(28B2=qLlP@0^_PE#_6_08Q8Fm1cMq19>M(mR@DhY6H1QZ'%;%r"89"8RR5X70'KkJQ6`S%RK@sj6k74X;8`A&dO8jdb5u/3UbNhUUo!'4=:'e0fT9qc&XaHOD9:?S6Z-;o;$f;ndmjP<`7A#p;7pJ&-aPp_#NSL-LWPZRLX+Nc%Tk[[ag2WKt;rXUX<f$mD@nupOnWs>#Hk.Mm(^*cE+9rQNYkOlI#YGBR*RIhr*"+n4WeLI_VD"\Gi2o:1B__/1K,$-a'28m?6Y1]Z%r#,9(A]\u6?^;\1@#-VnU>Dl.Fj.9N@3eJI@5miom"e5+blEu6)-Hh'IIYWY8Ou9n/#O]<&t.s:a:W,VVD8aCPQaC"d3aD<P1f-P%!(oWmY^-lqWPEXPo]7B3-Q,T>PW[L$Ynr'&CkB)=.]Qf'fSAbEQ8/+_Fp#X6#nVdseqhW".OWVe9IuB1^r8<FWMNLfN=8P&/?Bd"%=V#TieHFE-M&9ZmZ6XD*=tfDYoN[rIY:-6AOB<c#GsO4j:Fdn'ib-=_'d$93p>j;=a:Nu\!_XF)0LGD7ei,B"+dirSjs[bJL/h&)%)D>r,BL]D0>dLQC6?SiO`B)@6h%HANIZZ9k/W,6r\NY,>&pS"%`\kOD!2\o%+qbF0jFp31>,QMhd2!NKd5kO]7`o,+s(No<'A%[h%V5-pr.tggk3rk`h.=n@iG@AI/DkENDiYCC;G%Tod$W*VOJ>%_::Z?DfU(SE=bURB2(IrAF^d=_K97b6O2N*tJ=qRhn#?P.N9=:jg%c@R'X_+A%Q@%AX2Ft?in2[$JP7D0W:_kk1rdoF5sgq@)b/Qg,f1@LlPPF6EQ7O'_?<*;mP\<b*u`Y_A6@XUGp2)SVPUXQGEhj^7(%f<taQ*4EU!N*['I,I3<+K]ocP^j];`gSc;=3RFl0g;C*N-7W1"LbP?$@TE#0GDD.'<Uk\.cZ(9%bVDTgp,h;&VjVX[JSBRllS-o5%fgs=;M&,fLMs"o+Nbd$u1;D*4.1b`O1')_UKFgXp$$.>I(uPlK9'BF;NC:4N6l?=]c3A/TCb=J<C#*$3+B\&:%73f1MW9>T5r#0/%nts<j\*p).%iPa@Q"qR+a>4B`p8u3$9%O\4_D=aI$>g(f4$kVu'863f/Q0+'^<nDV&:j@iQ#]OT%?'dLpNIlMU4Hp+NKVEm#7/M#%M?T.M8tNl4F!W7_qf%,>:ZcF$%C?+-mLm?W-S\UmTRq!<NSE>`SD;YVP@_Zo*]?6P;U#JA!tJ=dnBnl_b>[O)IMaFF%&&gg#)4]h%K]%B%#lue?0a2\HK^hM-gqo4<1gh[r,/!0=-Bs'N7WN^sMF?*e-BA/jDmB';XT<`lG6srFQiS%s(LR_":<&R7`#JiH(s>CidCo^Z%9X5lG!k7+qGHUq#Kscd+QJ['Kl:)DtUCAZ(Ah@+!0a,<:$k`!58l,[@?Y"rqrDedmaVhsX+BAi3M.b1.2B,4_!?`L7U]--+!U>]6%hcG5)@1K(cbi-mF'L=J?,D1M69o#hF*]s"\&Zt+3#n!)sLK[gqW)a&_h?_IEgrLKA^][rKPlqV`MWAUUN3IJ1o+8_KCoi6'LC[j7%5`(i7Y&':C#'u\cHA!mPq>hUEHuMfB_I'L#(`ep$Yp,]8DA&UhN)Fi@MQm.p:4?gk>LXIV:Ra"6h]#2OY4NP,B]UNO7J#trPOJi?%ClI!tEY!XHiJ5(;6;&k\4JS489'ShXIKe6c&d"I6KWu`ZN$;14!AZ[RjJCH:A7EIEnJI:qCAG7D5L4`t^7)k]2?5k@NG'/hBZi5+%(t6sr!YL[9=Fq,j;WcRg>p9[fs.n+56M`;]VM1+?W\YUY!(5g!OqNRYN!M="'#L]eM7]$4AF$$rbMPDRkA/bbPu$bV]V621%#0%m%`7H5_E41u7/9ff?nc-Rb8/t>38XGKgK5X6D-?W,tOM6"VL95gk$FPp-A;kjdH'cA%>tj!u,ADA!"u;>%QFdd)hQD4:JPZF'49FOg%R^T3j83TdHH2*13B`afikGS6p#fBsp#RIa@"@*''PsD]jd":N/@RK((Op2%sA6^DlSa-P^Sor"VB(Y/ePL7_QO!j!_5JF,pi5Ocp%o^u[617Km+5$UcFo7cEbg>2!RT("o"Mrf=@XY)f_s2bmQC!"O(T$Cr7nq#nMJ^M9S/uOWVP;>$lI@)Xfl*&RrL@X=K[,C9QW7!P&%J)]e.:J]@Q#fANQkN+dWm@F7Gr(Ut`YA*-d1V;fFN,OWCXh?iAnGSDD%fQp!GSWU~>%AI9_PrivateDataEnd